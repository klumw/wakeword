/*
 * Copyright (c) 2025 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://edgeimpulse.com/legal/terms-of-service) or Enterprise Terms of
 * Service (https://edgeimpulse.com/legal/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */
// Generated on: 18.03.2025 14:38:17

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#define STRINGIZE(x) #x
#define STRINGIZE_VALUE_OF(x) STRINGIZE(x)

#if defined (__GNUC__)  /* GNU compiler */
#define ALIGN(X) __attribute__((aligned(X)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (_MSC_VER)
#define ALIGN(X) __declspec(align(X))
#elif defined (__TASKING__) /* TASKING Compiler */
#define ALIGN(X) __align(X)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ARMCC_VERSION) /* Arm Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ICCARM__) /* IAR Compiler */
#define ALIGN(x) __attribute__((aligned(x)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__clang__) /* LLVM/Clang Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#endif

#if defined(EI_MODEL_SECTION) && (defined(__GNUC__) || defined(__clang__))
#define MODEL_SECTION(X) __attribute__((section(STRINGIZE_VALUE_OF(X))))
#else
#define MODEL_SECTION(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 8
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 16
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 6672;
#else
constexpr int kTensorArenaSize = 5648;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
#if defined (EI_TENSOR_ARENA_LOCATION)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) DEFINE_SECTION(STRINGIZE_VALUE_OF(EI_TENSOR_ARENA_LOCATION));
#else
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#endif
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};

enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};

struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];

namespace g0 {
const TfArray<2, int> tensor_dimension0 = { 2, { 1,640 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0037530637346208096, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data1[4] = { 1, 1, 20, 32, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data2[4] = { 1, 20, 1, 16, };
const TfArray<1, int> tensor_dimension2 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data3[4] = { 1, 1, 10, 16, };
const TfArray<1, int> tensor_dimension3 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data4[4] = { 1, 10, 1, 32, };
const TfArray<1, int> tensor_dimension4 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data5[4] = { 1, 1, 5, 32, };
const TfArray<1, int> tensor_dimension5 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data6[4] = { 1, 5, 1, 64, };
const TfArray<1, int> tensor_dimension6 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data7[4] = { 1, 1, 3, 64, };
const TfArray<1, int> tensor_dimension7 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data8[4] = { 1, 3, 1, 128, };
const TfArray<1, int> tensor_dimension8 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data9[2] = { -1, 256, };
const TfArray<1, int> tensor_dimension9 = { 1, { 2 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data10[3] = { -713, 1020, -406, };
const TfArray<1, int> tensor_dimension10 = { 1, { 3 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00027789949672296643, } };
const TfArray<1, int> quant10_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data11[3*256] = { 
  19, -65, -61, -49, -60, 46, -58, 12, 19, 36, -44, 1, 6, -74, 11, 53, -1, -13, 28, 4, 36, 16, -20, -19, -18, -64, 14, -11, 25, 61, 58, -10, -74, -57, -12, 13, 65, 7, -77, -1, 55, -52, 54, -33, -59, -22, 59, -108, -8, -5, -22, 12, -67, 40, 42, -20, 65, 24, 11, 16, 45, -53, -8, -99, -18, 78, -45, -26, 24, -39, -17, -39, 16, -100, -101, 30, 39, -25, -29, -35, 11, 17, -21, -36, 46, 17, -20, 11, -5, -40, -38, 7, -14, -58, 11, 52, -9, -2, 20, -55, 44, -47, 10, 1, 19, 12, -20, 28, 38, 7, -31, -11, 38, -44, 11, 34, 16, 31, 15, -1, 15, -27, 17, -98, -107, -30, -12, -21, 31, -9, 34, 38, 28, -7, -50, -20, -64, -38, 38, -14, 10, -4, 23, 43, 37, -20, 37, -36, 17, 98, -41, -5, -57, -45, -21, 32, -97, -6, -3, 30, 18, -40, 0, 21, -49, 10, -54, 13, 40, -17, 46, -73, 18, 30, -23, 25, 65, 42, 18, 26, 8, -1, -19, 9, 40, 23, -85, 7, -10, -2, -4, -127, -16, -22, -15, -23, -13, -26, 35, 16, -19, -30, 8, -37, 33, -3, 38, 36, -2, 32, 11, 34, -88, 1, -15, -3, -9, -39, -55, 49, 27, -71, -19, -118, 15, -23, 33, -23, -26, 42, 37, -31, -1, 2, -13, -15, 55, -5, -26, -14, -42, 27, -24, 2, 35, 94, 14, -24, 10, -42, 35, -16, -26, -2, -70, 67, 
  -92, 37, 12, 24, 24, -69, -64, -29, -60, 41, 36, -25, -29, 29, 42, -14, -37, -12, -43, 7, -1, -51, -62, 17, 0, 54, -8, 22, 21, -43, -29, 35, 18, -21, 22, 12, -17, -58, 14, 46, -27, -11, 23, 18, -50, -10, -3, 16, -71, -43, 50, -24, -24, -104, -27, 40, -81, -85, -66, -21, 6, -91, 18, 27, -6, -39, -2, 21, -4, -13, 47, -3, 15, 19, 19, -24, -31, 5, -8, 34, 10, -2, 1, 39, 10, -112, -44, -7, 2, 17, -65, 41, -24, 41, -3, -41, -34, 32, -25, -5, -43, -5, 26, -13, 33, -58, 11, -34, -19, -85, 16, -21, -55, -86, -5, -39, 21, 84, -58, -43, -18, 42, -74, 14, -62, 29, -34, 0, -6, -45, -34, -10, -27, -5, 56, -11, 56, -21, -60, -79, 67, -22, -23, 29, 1, 21, -88, 5, -51, -21, 51, -6, -2, 32, 27, 15, 7, 51, -12, -73, -67, 35, 12, -20, -50, 32, 28, -20, -76, 33, 1, -44, -52, 9, -7, -71, -2, -26, -76, 2, 6, 1, -15, 9, -9, -26, 1, 3, -32, -25, -34, 17, 0, -48, -4, 28, -38, 9, -88, 6, 9, 74, -28, -1, -76, -28, -17, -74, 3, -87, 27, -67, -52, -29, 16, 2, 12, 42, 9, -40, -29, -4, 14, 86, -14, -20, -31, 2, -11, -11, -20, 37, -64, -29, 30, 45, -24, 37, 20, 29, 19, 19, 3, 52, -82, -6, 17, -11, -68, -15, -65, 6, -5, -6, -1, -69, 
  -24, 32, 16, 4, -9, -25, 74, 27, 12, -82, 41, -55, 12, 29, -24, -38, -20, -3, 48, 9, -50, -26, -4, -26, 28, -28, 44, 0, 16, 14, -97, -16, 31, 38, 35, 21, -18, 26, 27, -12, -27, 40, -51, -34, 49, 33, 5, 14, 2, 34, -21, -16, 14, 28, -36, 9, -48, -23, 2, -14, -50, 78, -4, 19, 25, -67, 18, -27, -53, -31, -33, -7, 17, 15, 56, -16, -29, 16, 60, 38, 27, -31, 26, -23, -61, 53, 28, 3, 2, 27, 51, -1, 72, -46, -7, 28, 67, -45, 11, 18, -7, 71, 21, -3, -37, -14, -28, 45, -14, 33, 27, 28, 15, 25, -13, -38, -56, -43, 39, 39, -18, -17, 80, 5, 49, -32, 12, 35, -116, -10, 47, -51, 10, -30, 1, 27, -21, 15, 14, -8, -35, -30, -39, -48, 21, -3, 39, -24, 18, -61, -25, -16, 9, 14, -34, 26, 30, -71, 0, -8, 26, 12, 26, -2, 40, -14, -7, 16, -45, 21, -38, 30, 20, -37, 10, 37, -86, -45, 59, 38, -23, -25, 17, 21, -65, 32, -2, 18, 7, 31, 0, 0, 16, 25, 20, -5, 55, -12, 61, 23, -2, -46, -19, 24, 56, -40, -2, 31, 36, 38, -26, 46, 86, -77, -14, -28, 24, -12, 18, 15, 11, 19, 12, -66, -29, 51, 11, 24, 25, 14, -43, 18, 15, -23, -27, -23, -66, -36, -8, 1, 34, -77, -18, -42, 9, -86, -4, -15, 24, -5, 21, -19, 2, 26, -12, -50, 
};
const TfArray<2, int> tensor_dimension11 = { 2, { 3,256 } };
const TfArray<1, float> quant11_scale = { 1, { 0.0045994124375283718, } };
const TfArray<1, int> quant11_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data12[128] = { -407, -138, 171, 1656, 1176, -837, 81, -544, 1073, -2003, -633, -1346, -196, 439, -674, -1296, -754, -1172, -492, -2812, -946, -562, 1787, -836, -1177, 2003, 1879, -1076, -2764, -843, -1115, 838, -655, -160, -756, -1204, -1804, -1505, 1523, 397, -1948, -569, -1112, -373, -912, -345, -1836, -148, -1164, -330, 734, -2085, -519, 165, -684, 951, -1641, -648, 150, -1479, -993, -469, -1264, 1101, -676, 424, 81, 990, -903, -2585, 1659, -1644, -816, 1148, -757, -1390, 303, -833, -1159, 215, -2308, -1553, -854, 594, -533, -529, -1616, -2869, -1455, 701, 369, 1160, -696, 1572, -388, -1358, -1132, 1126, -1054, -927, -1720, -904, -370, 781, 457, -1142, -1312, 84, -639, -890, -1395, -548, -933, -1534, 516, -2116, 22, -1147, -1130, -497, -680, 1367, -1637, 971, -632, 414, -1547, 438, };
const TfArray<1, int> tensor_dimension12 = { 1, { 128 } };
const TfArray<128, float> quant12_scale = { 128, { 0.00016284178127534688, 0.00014133253716863692, 0.00014977781393099576, 0.00013267080066725612, 0.00015669394633732736, 0.00012383246212266386, 0.00020600396965164691, 0.00013659772230312228, 0.00017633555398788303, 0.00016663018323015422, 0.00016372599930036813, 0.00026855658506974578, 0.00014572817599400878, 0.0001091406520572491, 0.00017003498214762658, 0.00015387010353151709, 0.00015044203610159457, 4.9586782552069053e-05, 0.00017643489991314709, 0.00012453841918613762, 0.00013014509750064462, 0.00015715642075520009, 0.0001515221520094201, 5.4333078878698871e-05, 0.00012303114635869861, 0.00012905563926324248, 0.00011542498396011069, 3.592185748857446e-05, 8.5261955973692238e-05, 0.00017743946227710694, 0.000179000009666197, 0.00014318512694444507, 0.00016342996968887746, 0.00019149474974256009, 4.2340725485701114e-05, 0.00014279750757850707, 0.00018414597434457392, 0.0001769203954609111, 0.00014867672871332616, 0.00017198867863044143, 0.00016684738511685282, 0.00016429816605523229, 0.00018010477651841938, 0.00018091268429998308, 0.00014037215441931039, 0.00022181414533406496, 9.7782751254271716e-05, 0.00016873300774022937, 0.00016741640865802765, 9.5374380180146545e-05, 0.00029051629826426506, 9.8414384410716593e-05, 0.00016401754692196846, 0.00018879238632507622, 0.00016850727843120694, 0.00014710788673255593, 0.00015818074462004006, 0.00019007500668521971, 0.00015461338625755161, 0.0001684054295765236, 0.00011758088658098131, 0.00019340336439199746, 0.00011630655353656039, 0.00026047119172289968, 7.5258765718899667e-05, 0.00019113830057904124, 0.00011785980314016342, 0.00016839851741679013, 0.00015463930321857333, 9.8044562037102878e-05, 0.00015309031005017459, 0.00010124078835360706, 4.8826910642674193e-05, 0.00023907514696475118, 0.00025283850845880806, 0.00014159876445773989, 0.00013250026677269489, 0.00015320416423492134, 0.00016725836030673236, 0.0001965921837836504, 7.5556061347015202e-05, 0.00016766566841397434, 5.3051287977723405e-05, 0.00019908594549633563, 0.0001733240787871182, 0.00020823162049055099, 6.5273423388134688e-05, 9.4477545644622296e-05, 9.8181779321748763e-05, 0.00014350801939144731, 0.00016473050345666707, 0.00016262417193502188, 0.00019526632968336344, 0.00014185106556396931, 7.5060801464132965e-05, 0.00019154739857185632, 0.00015937010175548494, 0.00014852714957669377, 0.0001396537700202316, 0.00016236843657679856, 0.00011589492351049557, 0.0001664330338826403, 0.00014152858057059348, 0.00011650999658741057, 0.00021713635942433029, 0.00012009650527033955, 4.0939437894849107e-05, 0.0001301588345086202, 0.00015098306175787002, 0.00013970078725833446, 4.7646946768509224e-05, 0.00014036476204637438, 0.00017023866530507803, 0.00016845537174958736, 0.00011042849655495957, 0.00018239882774651051, 0.00014859977818559855, 0.00028059742180630565, 0.00018057116540148854, 0.0002080353006022051, 0.00011100196570623666, 0.00016184980631805956, 0.00013863618369214237, 0.00014614498650189489, 0.00015611006529070437, 0.00013370861415751278, 0.00016096176113933325, 0.00013131411105860025, } };
const TfArray<128, int> quant12_zero = { 128, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data13[128*1*3*64] = { 
  /* [0][0][][] */ -31,16,28,-4,0,42,35,-39,14,23,-47,-8,9,-2,-1,84,45,80,-66,30,-12,-22,103,12,-10,35,31,-32,42,0,-26,4,17,-63,-20,11,46,-55,58,-19,91,9,51,-14,127,-60,14,-14,23,69,31,-55,43,89,-82,-70,6,-6,91,-63,-4,7,-72,22, -5,-9,20,30,15,-46,18,-30,-12,-17,-53,36,19,36,8,33,33,-7,-30,3,25,-1,-74,8,-6,-11,-28,-65,13,-24,28,4,16,-85,-31,12,-32,-41,-1,-32,-23,-18,21,23,-21,-60,6,12,18,46,-9,-36,-35,-77,67,-44,-42,-65,97,-14,-4,-36,19,17, 2,10,-37,-45,-26,62,-11,43,16,-10,-17,38,-6,-34,-5,17,6,46,22,-29,-25,49,-57,5,49,-7,-65,27,5,14,3,-34,-17,42,26,6,22,19,4,25,-42,20,-31,61,11,1,21,32,18,25,-107,2,-44,10,-15,6,7,10,25,39,-61,41,42,12, 
  /* [1][0][][] */ -10,-6,-24,-60,-12,26,14,-21,-3,-43,11,41,15,-56,-16,-58,28,-68,22,-44,-39,24,4,-1,53,-57,-88,16,20,15,36,-38,7,-8,8,29,-8,-49,50,44,-121,7,-17,-7,-12,22,5,25,0,-25,-16,-10,-78,-8,47,-15,-1,-20,-51,34,-81,-10,65,-31, -29,-1,21,16,55,-99,9,-25,-21,-39,14,-19,11,16,6,-9,-20,-83,-20,-91,-32,4,-76,1,-65,-69,-21,39,-28,-13,-23,-22,-14,-116,12,-49,-63,-26,49,-27,-2,20,-16,17,-109,-4,26,97,12,-37,38,57,-15,-21,27,-4,-70,24,-61,-8,-46,7,-47,-43, -37,16,32,-37,-42,-46,-98,29,4,-117,13,-17,-7,-4,-12,2,-51,-118,12,58,-9,56,64,-14,-3,-127,-29,59,-21,-33,44,9,-6,79,10,38,-54,-23,-26,15,-14,-7,39,6,-27,-3,-31,76,8,-124,-43,65,-39,-65,-68,1,19,-3,-20,60,-11,50,3,-16, 
  /* [2][0][][] */ 3,0,-21,-41,-10,103,14,4,-1,11,5,13,0,9,20,7,20,-34,-28,35,-6,49,10,-2,-59,-4,-72,30,30,4,19,-38,24,63,24,5,37,-28,34,36,-127,-32,3,50,75,18,32,5,3,48,25,0,99,18,27,61,1,8,-11,-21,-8,68,15,-23, 3,9,-30,-21,37,-104,-13,-11,-4,-38,11,-12,-25,6,15,4,4,18,12,-40,-50,0,0,-24,69,23,-29,-57,28,21,-29,-74,21,-46,-14,39,-61,-31,49,-10,-77,8,-10,-31,-26,-34,31,-3,-9,-36,29,22,39,-108,3,-9,-63,-7,-49,-12,-5,-111,-49,5, 48,0,18,-38,-5,-12,-6,4,-4,-61,11,-1,-22,-25,0,31,-52,-66,-2,17,6,49,7,-14,-39,-67,-57,38,-15,17,23,-87,-11,15,-17,28,-70,4,7,11,5,-22,-10,7,-72,7,11,15,-14,-84,-11,29,14,48,-14,-2,3,-57,3,1,-14,22,32,6, 
  /* [3][0][][] */ -11,17,-69,66,19,85,-123,-4,-2,-14,-8,16,-9,12,-2,-50,8,13,28,-87,30,-14,21,-13,47,-8,-90,-122,-16,37,22,-1,25,-4,29,-36,8,35,-49,70,-72,-49,-67,29,-6,89,-17,-14,6,20,-68,-45,33,-15,57,-38,20,-26,-33,-20,10,-127,84,1, 9,30,29,-58,67,-71,42,-7,13,-29,-3,0,27,18,-29,-30,20,29,-35,-123,-27,-46,-5,-27,35,26,-10,45,21,-3,-74,-40,10,13,17,28,-31,41,9,-22,13,73,12,-7,-51,-44,40,81,5,-24,39,-39,-44,-7,-28,-69,-3,0,-70,-65,-22,40,-72,6, 7,31,36,8,-16,-39,-18,31,-14,-15,-9,10,-12,-37,-12,-54,-60,49,10,77,-52,45,38,10,-23,-87,9,44,6,6,28,-49,-3,41,13,29,-12,-3,-36,-1,33,-3,54,-20,-56,9,-42,68,12,-48,45,45,-45,41,-79,3,61,29,5,34,-4,74,-33,49, 
  /* [4][0][][] */ 3,-16,-81,-12,18,98,31,24,11,37,19,-24,-18,-8,-14,-46,27,61,60,0,27,32,17,14,77,31,-22,44,16,17,13,-18,-26,1,-11,7,16,-25,6,76,-127,37,-10,1,15,-5,-2,55,0,87,6,-34,24,10,73,-6,41,-8,-52,-5,7,38,-3,2, -15,13,18,16,22,-98,-15,-43,3,-10,6,-48,-4,20,-12,9,9,12,-25,-33,-1,-80,-44,-13,-51,11,23,16,-19,11,-32,-23,-1,-20,-31,-18,-64,47,-29,-25,69,24,-6,-55,40,-38,24,66,10,19,-12,-16,10,21,2,-71,-9,2,-45,-11,60,-17,-37,-54, -7,-1,-56,-9,-13,-35,-28,8,0,-50,10,34,4,1,16,-15,-57,-86,-5,16,-42,27,26,-2,-45,-39,21,5,10,4,-2,12,-8,40,3,50,-59,-36,-17,-2,44,44,25,20,-9,9,-19,28,19,-40,41,27,18,33,-30,-44,11,-2,-73,-14,30,52,22,-2, 
  /* [5][0][][] */ -21,-5,-5,48,12,55,-2,-20,12,64,-13,-12,-2,-15,5,75,-37,107,-56,0,-6,-27,46,8,-35,-40,41,-27,-6,9,-41,65,-40,-19,-32,9,90,2,22,-43,16,9,-9,4,83,-10,-12,9,10,64,54,38,-39,65,-115,-60,-14,-25,34,-18,36,-21,-19,15, -7,3,31,6,-14,-14,-12,3,-13,-47,-37,-1,11,20,30,10,12,17,-76,20,67,-22,-56,5,-103,67,16,-51,33,-13,9,89,-12,-66,-50,-18,-16,-66,-19,-24,-57,-20,-3,23,53,-66,-19,-54,-15,44,-89,47,41,-75,124,-33,14,-53,117,-33,-35,1,-29,44, 53,22,1,-78,-87,112,-62,-9,20,57,20,127,-9,-47,1,-12,-2,58,-32,-59,-52,2,-126,-4,21,-39,-51,-31,20,3,77,-2,-2,13,-8,32,23,51,-49,-15,-80,10,-2,103,-4,7,-17,-9,2,37,-105,9,-28,49,45,-40,-24,-49,51,64,-27,-14,81,13, 
  /* [6][0][][] */ -14,11,11,-20,38,5,5,7,23,-55,42,1,19,-7,-3,-21,10,-35,-31,-74,21,-2,-10,-11,33,-21,-17,-72,17,-16,25,-20,8,12,-3,-30,-3,-26,-40,5,-55,28,-25,25,-17,-15,16,32,25,17,-27,-13,12,16,1,37,-15,-7,-45,38,43,-24,0,-15, 7,-8,-5,29,-23,-6,15,30,7,-46,-12,-9,-7,5,7,2,-15,8,-11,18,10,24,25,12,-72,34,-32,43,-3,1,-6,-68,-3,58,-18,58,-14,-52,0,-11,7,-16,16,24,0,-6,-11,-1,8,-41,25,-10,43,-44,-56,21,-4,18,10,-3,-46,78,-40,-15, 21,-8,-19,-42,7,-13,-127,10,10,-49,8,7,-28,-2,22,-16,1,-80,36,-9,-43,-20,78,-11,40,-17,-40,-96,-5,6,-21,-30,-9,-15,25,-42,-8,-7,31,18,-53,6,-9,-44,-57,10,-4,-47,-10,-59,-45,3,-32,-19,5,41,-41,6,-57,-19,26,-53,-63,-5, 
  /* [7][0][][] */ -25,9,9,10,3,-6,38,-22,11,-21,-50,-9,13,-32,4,-22,-33,-14,-30,-61,-23,-80,-9,-7,-44,24,-22,2,-9,-17,8,-38,-20,-8,8,22,-17,-57,-18,-14,-36,10,10,-8,10,-30,-7,-40,8,-11,38,-24,-22,13,1,-17,-27,-29,17,8,-31,1,2,4, -9,-20,18,-8,-84,-16,-40,-72,11,-8,-20,-14,-24,-25,-15,1,-64,-34,-52,12,-48,-2,10,4,-54,-54,35,1,15,5,-38,-103,11,-62,-3,4,-38,-127,12,11,-55,-30,-49,-8,-41,-77,-13,7,-9,-32,-14,67,-9,-22,60,-7,-39,-12,-83,-11,6,-30,-20,-15, 7,-2,-71,5,-10,-64,22,-23,15,-53,73,-28,-9,-21,16,-49,10,-54,35,-13,-38,57,-125,-16,-28,-28,-8,-2,-30,-4,43,19,9,-16,-19,-66,-21,-25,-6,-21,-34,28,9,-42,7,-36,-20,-14,-11,-21,-43,53,-30,-61,26,-39,-108,-59,-54,-71,-80,51,-30,-17, 
  /* [8][0][][] */ -16,21,36,-18,-26,-9,42,-10,10,25,17,40,23,17,23,53,-7,16,-70,-7,2,13,18,25,-64,-55,16,11,-5,20,-22,-39,1,74,17,-44,21,6,-46,-32,40,-31,7,64,68,-37,-12,58,22,2,-43,-1,-21,127,-94,1,-29,-18,-32,-26,71,49,-26,17, -7,-12,-1,42,26,22,-29,15,-13,-18,-6,7,11,30,4,4,-13,-29,26,41,15,-21,22,3,-16,14,11,5,-7,-11,25,20,-11,-3,-38,11,11,-84,19,-40,38,46,-28,9,40,-33,-5,-4,-3,33,-23,43,2,-26,-1,-57,10,26,32,9,-14,17,-25,21, 15,11,-20,-47,-52,25,-2,-8,18,38,-1,24,3,-9,2,-55,35,58,-48,-11,0,-5,-91,-3,9,25,-42,1,12,-5,39,2,-9,-55,-2,69,35,21,-10,-13,-65,-65,22,44,-43,10,-10,-7,1,27,10,-45,9,20,-43,9,-11,-30,31,43,-21,-36,53,-3, 
  /* [9][0][][] */ -3,-2,8,77,44,108,-9,-11,25,27,19,-27,-25,30,4,0,3,45,29,-49,-57,-49,-30,-16,53,25,39,-7,-2,16,-35,64,13,-50,-8,68,53,-6,66,-36,45,-37,-9,-45,-18,33,-3,15,-11,20,15,73,17,-14,-125,22,11,57,-8,-43,-26,-42,-63,-33, -33,-23,-2,-40,-53,-1,6,-51,14,-16,-50,-17,-10,-34,-8,31,3,0,-39,19,-25,-73,43,17,-6,-3,26,-40,26,1,1,56,-36,19,-8,-22,-2,-57,17,-42,39,-8,15,-52,-46,-91,-1,-32,-5,-23,-30,47,0,-45,-79,-80,-59,-46,55,-12,-21,-29,-5,-22, -17,-1,8,23,-15,-56,-3,-20,-1,-19,-31,10,10,-2,-11,-25,17,-64,10,-34,8,21,-92,1,-39,-25,-14,-51,-5,-2,33,-32,-4,-22,-19,-40,-127,-30,25,25,9,-29,-16,16,5,-12,-22,-29,-17,52,-10,-51,-12,-115,12,-65,-36,-35,-24,-24,40,-70,66,-26, 
  /* [10][0][][] */ 21,1,-48,-78,57,45,-13,26,22,-6,5,32,13,-19,13,-36,-25,-48,-6,24,-35,27,-7,8,31,29,-97,24,15,3,1,-48,-11,62,12,73,-9,-24,-8,30,-78,55,-26,47,-2,62,6,7,10,-24,-8,-40,13,-40,3,39,37,-1,-20,-30,-36,59,-8,0, -23,-14,18,-45,32,-45,-15,-14,13,-36,-6,3,-14,-9,1,-4,27,-77,-14,-74,-19,-127,13,-11,-54,-12,-72,-74,-9,15,-56,-46,-19,-16,-14,-61,-5,35,-22,-38,-33,7,-19,-46,-25,-60,15,7,-3,-60,-17,-58,-27,-85,16,46,-81,-20,-6,-55,-11,-98,-26,-2, -38,-15,-26,6,-9,-51,-3,35,-14,-18,-3,15,-7,0,-24,-37,-32,-4,16,1,13,35,4,19,-6,-52,-41,0,-22,14,6,-24,5,59,-2,-19,8,35,-65,0,30,8,-42,8,-46,97,-12,17,13,-17,-2,78,-30,19,-30,35,27,19,1,54,11,-1,-7,17, 
  /* [11][0][][] */ -5,-14,-21,-12,-37,1,9,-34,-4,5,-67,-23,-5,-27,-12,-10,-13,-4,-26,-44,24,14,17,-7,-57,-13,-37,-3,-1,-16,-4,23,1,1,-3,12,10,-5,3,-19,-43,1,-54,25,4,9,6,-40,-7,-19,-6,-43,10,3,-4,7,-11,-7,5,-19,-9,11,2,-6, -2,-4,9,0,-6,-11,-12,-20,-8,-23,-31,-15,-12,-23,-15,-14,-2,4,-3,-2,-46,-41,35,5,-44,-14,-16,-8,-4,-19,-23,-19,-15,-19,-7,8,-17,-22,-16,-22,-7,7,-10,-15,38,-20,5,-10,-11,13,-40,-43,-33,32,-30,-8,16,12,-18,-16,17,-22,-18,1, 1,5,-16,27,-29,20,19,-17,-1,43,-10,-16,12,39,-1,-1,30,36,-22,-23,2,-7,1,-4,10,28,8,6,-9,9,-5,27,-7,-31,-6,7,40,-24,7,-22,-22,20,0,3,127,-52,-8,-41,6,34,-6,2,79,28,-19,-5,5,-19,42,-30,-13,-12,-19,-6, 
  /* [12][0][][] */ -2,16,15,-45,31,-16,25,2,-1,-14,-38,-31,-23,16,15,82,28,27,-59,-45,-6,27,88,11,-79,35,59,4,-14,-34,14,25,-23,37,-19,43,6,-15,38,-25,83,-45,27,46,70,-57,-8,-12,12,18,50,-16,-54,74,-60,-23,-16,-30,55,-23,54,57,-21,20, 40,-27,18,16,-14,6,3,-19,11,0,-25,14,-23,-11,29,6,-46,31,-23,-2,29,-23,46,2,56,34,-41,-41,-13,12,10,-16,-4,-37,-15,89,6,-19,127,-34,0,-28,23,-26,-11,-54,-24,9,10,3,7,52,-41,-91,15,-49,-21,-41,20,-9,-16,-41,-9,37, 24,0,-60,-32,-1,69,56,2,2,3,-4,10,26,-14,23,-6,86,-17,2,19,-20,42,-38,13,-17,34,-7,4,28,6,43,38,6,16,21,8,1,5,-6,-7,12,48,-69,24,-68,21,-6,8,-13,-29,-78,-58,-28,-3,31,68,21,21,41,35,-63,27,42,24, 
  /* [13][0][][] */ 2,-30,-25,-77,-36,15,-94,44,15,19,41,-2,-17,-24,14,-62,-4,-8,41,-100,29,43,-23,-28,44,-11,-100,-105,15,-20,49,-31,-8,-39,12,-74,-18,2,-19,79,-117,-35,-58,-55,71,19,28,27,1,88,-42,-22,81,-12,63,-89,29,-34,-63,46,-6,2,58,15, 16,-31,39,-50,0,-45,6,-14,-25,-47,-28,-48,-11,-39,17,14,5,-19,-79,-61,-66,-21,-56,-16,-29,-22,-60,14,9,-1,-23,-104,-22,-40,-22,-10,-19,-9,74,-27,-12,-46,-18,-4,-34,-91,74,66,42,-50,18,-43,-25,127,-49,-126,-73,20,-92,-30,-65,-25,-52,24, 10,-14,0,-92,-22,-10,40,32,-9,-18,26,-59,-3,-42,-14,-8,-64,-15,-26,35,-44,28,45,17,-21,-65,-46,88,0,-35,-6,-49,13,74,57,21,-27,-10,20,-11,37,-54,11,16,-12,21,19,69,1,-82,6,-2,-9,57,-87,-11,49,-1,-34,3,22,112,-24,39, 
  /* [14][0][][] */ -29,-11,-16,-31,8,18,5,-14,2,-7,-21,-29,17,8,-6,-27,-2,-9,-11,-5,9,-46,83,10,16,10,-15,-7,-7,-9,4,48,1,-59,-22,-30,50,-18,-5,-15,8,1,-22,-20,69,-11,1,-42,-12,48,-55,-12,76,6,-48,-9,-26,-46,4,-10,18,-36,-10,13, -20,-5,-10,-26,-4,-7,13,-10,-2,4,-14,-4,-25,0,-20,-9,19,1,2,38,19,-58,6,5,22,-19,29,11,13,-22,13,-8,-28,17,23,4,-3,-14,0,-34,-125,3,2,-35,-35,-51,1,-10,-12,-13,-22,19,-59,-25,-11,-30,-38,-58,23,-42,25,-25,-67,10, -11,-2,2,24,-23,-37,-29,-9,8,-41,-2,65,36,-10,-4,-33,27,-68,-3,-45,-19,28,-127,-2,-5,1,-6,-72,-4,-22,4,24,-21,-7,19,6,-74,-19,25,1,-48,-22,-10,-2,33,-19,13,-15,4,12,-33,-16,-18,-68,-8,-25,-49,-33,-28,-26,12,-58,99,-16, 
  /* [15][0][][] */ -26,-9,5,-36,-37,43,46,-16,-13,25,-50,-57,-33,17,-12,-36,18,67,-19,30,-47,-57,1,7,25,28,20,55,22,-14,8,25,13,-62,-5,87,54,-9,-19,-26,-12,-7,29,8,48,-24,3,-35,-4,2,28,-34,5,9,-79,-33,-31,23,110,-22,-45,23,-38,20, -5,9,-20,13,-4,-58,-38,-19,-10,-9,-45,-24,5,47,-8,-10,9,-24,-47,32,12,-22,-127,-15,-56,-14,6,-37,-2,10,-17,34,9,-25,-38,-70,-30,-27,-52,-18,-99,15,-42,4,-50,-60,-7,-24,3,2,-100,17,-24,-62,32,-17,-26,-36,53,12,-2,-35,33,-5, 3,-13,-38,21,-9,64,-102,-10,-1,-16,-29,62,-15,-16,-5,-39,-4,-69,-3,4,-52,12,-71,-12,-60,-8,-24,-47,-6,23,20,44,-17,38,41,-40,-85,2,-30,27,-106,-10,-23,48,-59,-19,4,-28,21,-47,-62,-59,-10,12,-15,-11,17,11,-11,-22,-30,2,62,-15, 
  /* [16][0][][] */ 22,-1,-3,21,19,26,3,-6,-2,-23,-21,24,20,13,-7,-4,3,-5,2,-24,24,-7,-22,-2,-22,-12,13,21,28,-5,14,7,23,12,8,-96,25,-53,4,-12,-25,-9,35,32,68,-31,-18,-16,3,47,-43,-19,-19,20,23,-51,-5,-42,36,16,1,-41,-9,8, 4,13,-31,-34,60,60,32,-11,21,66,20,67,-24,12,-15,-15,40,34,-31,-70,8,-26,-59,-16,10,4,48,-4,-17,11,-13,-10,-18,-50,54,28,54,38,0,9,-47,-44,10,0,-43,36,64,-13,18,21,-28,8,-23,67,8,46,-16,-11,62,-30,-4,-9,-9,13, -4,17,6,38,2,50,-46,-10,-1,65,-3,-49,-5,10,-5,-2,35,5,11,-37,37,-38,10,-14,2,-47,4,-80,5,-9,14,51,-8,-41,-23,-127,60,32,-20,22,-43,52,-10,-64,21,-5,22,-43,-5,72,-64,-69,41,41,57,-26,-74,-6,41,-50,-16,-73,-5,36, 
  /* [17][0][][] */ -43,-16,17,-30,-5,7,-52,-74,32,43,43,-45,-51,-3,-22,35,-15,9,-14,14,25,-27,-58,-17,-32,-35,-17,36,-39,3,7,-18,29,-51,43,-33,11,-88,-12,35,-28,37,13,-43,-61,-15,32,-52,-33,-36,-20,-38,37,-41,-71,-49,-8,-76,7,9,-41,-5,23,55, -68,25,20,-2,-103,-41,-87,-80,-7,-39,-112,-1,9,-64,-47,-26,-69,24,-68,-35,28,-9,-23,-24,-84,-22,-72,-117,-67,-86,-2,-21,-27,8,-81,-110,41,7,-10,-25,-1,-50,-48,-34,-40,-53,76,-83,-51,-81,-104,-96,-49,-38,-53,-33,2,-69,-59,-127,-49,-14,-23,-54, -46,30,18,-51,-14,-58,-72,27,-42,-24,5,33,-71,-2,54,-35,-57,36,-111,-104,17,37,26,4,25,-27,-64,-125,65,-77,-69,-29,-80,-56,-56,52,-17,-17,-4,11,15,-15,-63,-59,-59,-45,68,-95,48,-47,9,-58,-38,-30,-51,-52,1,-66,-12,5,-22,-53,-65,6, 
  /* [18][0][][] */ -1,17,-28,7,5,81,16,17,-14,32,-3,-15,-1,26,-10,11,-5,3,18,17,18,-17,-20,1,-43,-9,-20,7,18,18,18,30,4,17,-9,-72,46,-1,-27,2,-85,-17,-22,32,31,29,-19,24,5,62,-68,-35,-5,-6,8,47,20,10,107,-16,-9,46,-7,3, -3,7,-44,-64,50,-25,-11,7,-2,3,-12,70,-12,-3,4,8,-3,82,-9,-69,-41,-58,22,26,30,32,24,-38,14,28,-49,8,0,-34,43,19,13,3,-14,-15,-85,-23,-38,16,24,-3,16,-34,-14,51,-19,-57,-21,-22,-27,37,-41,-7,-18,-64,-15,-45,-17,-16, -38,8,47,-5,17,-27,127,-9,-11,62,-36,-30,-15,-11,11,-13,30,50,-2,-14,10,-55,-30,16,34,76,20,57,-9,26,-36,13,18,-55,15,86,12,-31,23,7,-45,29,-4,-27,100,14,33,25,-13,33,57,-9,7,-20,66,61,-13,-30,48,-56,-37,12,-27,11, 
  /* [19][0][][] */ 10,12,-20,-49,-44,-38,-51,33,-30,-5,-5,-2,-21,-5,-29,-54,26,13,-9,-4,-18,-20,-88,10,-91,-42,-54,-25,11,-28,-22,-3,7,-16,-4,-76,-64,21,25,-19,-3,9,-32,-47,-50,-21,-1,-9,13,21,3,-62,21,77,-25,-23,-73,-12,-42,0,-58,-34,-6,14, -32,-19,15,-75,-58,-44,-30,-68,-7,-19,-21,-34,3,34,3,-66,-57,18,-38,-83,-3,-40,-38,18,-126,71,-108,-53,-10,15,-42,8,6,-35,15,-9,12,-53,46,-16,-36,4,-49,-59,79,-42,2,-30,8,15,-36,-11,-22,39,-41,12,-44,-32,-13,-79,-30,-50,-34,4, -37,9,-7,26,-52,53,26,-11,1,92,11,-5,9,127,-20,34,81,84,-52,-27,-37,-19,13,-14,36,99,-38,-32,-24,-4,-51,1,-15,-40,-26,40,15,-3,11,-44,-17,-16,48,-3,29,-32,-34,16,12,-64,12,11,64,-20,-46,-16,-37,-56,85,-7,-42,-32,-27,1, 
  /* [20][0][][] */ 23,-2,-54,-38,113,45,8,17,-2,-12,34,-8,-13,54,-8,-38,20,1,90,-39,-42,-51,109,-8,85,-52,16,52,1,21,-4,48,22,-40,20,-108,57,-17,-45,9,-26,68,-35,-48,13,43,-49,23,-19,3,-118,2,-14,6,7,72,-4,15,-17,-29,-4,-2,-62,-16, -3,-5,4,-11,-21,45,4,-15,-12,30,-63,-25,12,18,-5,21,-17,55,-2,35,-37,-106,66,-47,9,15,52,-16,11,-11,-57,56,11,-50,-7,68,60,37,-29,-47,89,56,-38,-27,-22,-54,-19,-37,-10,15,4,8,36,127,-99,-96,19,-15,31,8,65,-46,-71,8, -14,13,-4,-3,-46,-52,11,-13,35,-7,7,35,22,13,26,-9,94,-26,-9,11,72,-36,3,-12,-27,49,41,-38,37,9,43,90,-28,-95,10,-3,-31,-88,20,-10,-5,13,25,7,-24,-92,-34,-31,34,53,5,-35,92,-5,37,-37,-95,-57,86,-7,8,-79,21,-17, 
  /* [21][0][][] */ -19,-21,18,-7,-5,57,33,1,13,-8,-29,-58,-6,-2,-12,22,14,105,-6,-18,-16,-80,-6,16,-3,43,9,-35,-8,-10,-44,2,-20,-74,29,51,66,0,-44,-18,-40,75,32,-14,81,-26,-13,-29,10,82,-10,-40,88,15,-86,-31,14,22,70,-23,-15,-34,-94,5, -19,23,-24,38,-27,-15,24,4,-8,-29,-22,16,-15,-13,-4,18,-15,33,-54,-12,62,-15,-48,8,-58,-38,31,-72,5,15,5,53,-5,-92,-34,-60,-36,-32,-64,-43,-127,15,-15,-57,5,-88,-10,-71,0,71,-23,6,62,-50,25,-89,-61,-66,80,-20,-1,-51,-10,-29, -35,-4,-19,-63,79,58,-46,-9,-5,15,-40,47,10,-24,-8,-36,2,-83,23,-62,-23,14,-48,-16,59,-36,-73,6,-13,36,43,-20,6,23,-7,-16,-94,9,30,19,-38,-6,-2,83,-64,35,39,-14,-5,-90,-71,-14,1,-64,21,39,-15,-20,-26,6,-11,19,80,-1, 
  /* [22][0][][] */ -11,29,20,44,-36,-53,20,-6,15,-18,46,-33,27,21,-6,-11,-48,-60,-48,-103,48,24,-69,-20,-119,-88,-2,12,-7,-12,-25,-47,-22,52,-35,-85,-110,30,-87,-16,-10,-70,-24,15,-36,-30,14,57,12,-55,-65,14,21,58,-20,-45,-51,44,-44,-5,73,5,14,6, -21,17,-44,20,16,-27,-65,32,23,-7,-22,43,8,41,-31,18,-10,-47,23,46,4,-22,45,19,-26,-2,37,-18,25,-10,-31,-52,-10,26,-1,26,11,-85,-16,-38,11,64,-101,12,0,-45,-21,-2,2,52,-12,11,36,21,-113,-42,22,29,-14,-1,-21,3,-27,35, -14,21,-11,-13,-42,9,-15,-4,2,19,-34,10,-16,0,8,-3,46,58,-44,-12,27,-2,-22,-9,-69,127,-19,43,-9,19,32,-3,8,-20,-5,103,8,-24,110,10,-28,30,41,4,-28,-43,4,19,9,36,72,-5,-30,-24,-21,-48,16,-24,8,-8,-91,-23,0,21, 
  /* [23][0][][] */ -1,-64,-27,-18,7,-4,-20,-7,-41,40,-42,29,-58,-22,-12,-63,-1,-39,-31,-24,-16,-8,20,44,-62,-46,-6,-21,26,-75,-52,37,-42,-49,-49,-20,32,-54,42,-38,-27,-13,-33,6,-38,-23,33,10,30,25,-11,-22,19,-19,-33,-23,5,-18,46,-60,15,-14,-68,47, -2,-32,32,-48,-7,15,-81,-62,-44,-66,-78,-43,-40,29,-2,-61,22,-36,-74,-94,-39,-7,-71,30,-54,-34,3,-2,-37,-17,0,69,-59,3,20,-32,10,-102,-47,-21,-27,-20,9,-53,-66,-1,-58,7,3,-3,16,2,10,-19,-39,-75,-48,-59,-28,-7,-100,-44,-21,-37, 2,-21,8,-36,-27,-23,-127,-34,-58,-26,-36,-60,-51,19,-15,-36,-76,24,5,-52,2,-15,22,2,-37,2,3,-19,29,-3,-54,18,36,1,14,35,-51,-71,-39,-74,-1,2,13,-16,-6,-54,52,-74,-7,-32,-13,-39,-2,-16,-91,-41,29,-56,32,-9,-49,-41,17,43, 
  /* [24][0][][] */ 8,4,-33,3,-12,42,-36,-10,-3,-40,-27,-13,21,-9,1,-29,0,-11,-50,-68,13,-127,-31,-13,40,66,-50,-85,14,-11,-29,-21,-11,-42,25,9,9,-55,-24,-23,-63,-13,-28,-24,-26,75,-23,-90,-17,-8,26,-15,-29,-99,16,63,-81,-43,-50,-2,62,-88,31,25, -37,27,12,-31,-11,-25,30,-53,-19,15,12,18,-25,-91,-11,-6,0,-87,-27,22,-9,14,-50,-22,-73,-38,-24,-7,-12,-11,-1,-36,-13,45,-1,-17,-20,-25,1,1,21,-26,15,-22,-30,-33,14,37,8,-31,-9,-13,-65,-33,-46,49,-10,-33,-34,-56,-81,62,-30,33, -11,-14,22,-55,50,-94,-5,9,-13,14,37,-27,-5,-5,-14,-30,-34,-78,55,0,-41,-8,20,-2,105,-20,-74,-5,2,12,54,15,-1,-122,-20,-46,-1,-43,83,-16,4,19,22,-21,-64,-10,6,15,-12,13,30,50,-39,-95,87,31,-47,-43,4,-20,-30,24,-25,20, 
  /* [25][0][][] */ -43,10,1,27,-14,-4,-19,-33,-13,-35,5,-61,-29,7,-3,2,-23,-57,-29,-79,-9,-31,-85,-18,-58,-15,-47,-64,-7,21,-31,-13,-13,31,-33,-29,2,11,-97,-8,-56,29,-5,-22,-42,17,-25,2,19,-97,29,30,55,-75,-31,-88,7,19,-87,-17,0,-42,6,16, -27,19,-4,-16,-45,6,6,43,-24,2,-2,-10,-41,-21,-33,-48,-12,-71,63,-10,-12,-1,45,2,23,-37,-37,22,-22,-15,-31,8,-5,-35,-14,80,-18,-76,-126,21,-55,7,-26,50,52,-76,-39,13,18,-59,35,8,-10,29,46,-93,-7,-45,-50,20,-74,35,-40,5, -40,-9,21,-7,-38,-85,11,-14,-4,-44,10,-33,-19,-64,26,-64,-73,-93,-92,-75,34,-114,-104,-23,-11,-120,21,27,-13,-31,-30,24,-21,2,1,-73,-29,8,-44,-37,28,-89,-74,-69,-90,-66,-21,56,-11,-127,-119,-28,-3,91,-77,-71,-83,-8,-52,11,-28,127,34,27, 
  /* [26][0][][] */ 16,2,4,29,-29,-11,-11,-41,28,-4,1,-11,59,2,37,65,2,-47,-79,-53,9,10,87,25,-117,-111,-7,-41,54,0,-35,19,-11,28,-39,-72,-5,-4,-97,-39,-14,50,-66,-15,127,-42,-2,56,28,80,17,-48,-5,111,-42,-90,-49,-20,17,-14,83,-49,46,-10, -39,-10,33,67,-14,53,35,20,-13,-29,-46,57,-2,-6,23,-26,-35,8,4,44,6,-27,79,-3,-48,50,-77,55,-12,-22,-17,-60,20,6,-10,117,-15,-103,65,-46,29,50,47,74,-67,-22,-21,-21,-6,12,79,33,-16,-7,34,-4,-6,-25,-56,-5,-95,72,-20,44, 8,21,-79,-85,-39,78,-64,4,32,42,6,-62,-33,5,9,-36,37,16,-5,-1,-116,43,6,-16,87,-6,-20,-68,-2,3,52,40,6,30,11,-98,-38,97,79,20,-73,-32,-97,21,-103,95,1,-108,-13,7,-121,-23,-60,11,-124,81,40,-14,59,38,53,-40,36,43, 
  /* [27][0][][] */ -7,-1,39,-88,-50,49,-121,14,-20,-114,-20,-17,-24,-25,29,-4,54,-9,-42,-7,-73,-4,41,-85,-78,-39,-70,-86,46,42,-51,47,41,0,76,-55,43,8,59,-127,53,-25,35,4,-66,35,-99,18,-101,29,44,7,-97,-22,-68,-23,-81,-37,58,24,-21,31,-29,85, -118,-98,-118,-22,-82,-80,-71,-78,-58,-110,-96,-64,-38,-26,-54,-98,-3,-68,-40,-76,-60,-62,-35,-27,4,-38,-73,17,-73,39,-91,77,10,2,9,28,-96,41,47,-75,-107,-8,-96,-68,-16,10,21,-45,69,-68,-62,-127,36,-32,-35,42,-117,-99,-122,-51,-11,-16,26,1, -19,-56,58,-3,-81,7,-60,-77,44,-25,-1,18,-20,-4,-96,-69,-15,54,1,-95,-61,53,-85,-63,-109,-25,-50,-67,-38,47,-117,81,31,51,30,-18,0,47,12,-68,46,-89,38,-48,-75,-106,0,-57,-74,19,5,18,-41,5,14,-89,-111,51,7,-54,-28,32,41,-56, 
  /* [28][0][][] */ 7,-49,47,-6,-54,-7,-37,-17,23,-62,-4,19,1,-47,18,98,-1,-43,-82,-19,-11,51,-17,32,-127,-83,-10,-53,16,-58,-60,25,10,-32,25,3,-10,-28,28,-20,-11,2,-5,-30,29,7,19,19,-27,60,-33,33,-58,34,-17,-36,-64,-15,22,7,-37,-29,-20,14, -27,-23,-35,-106,18,-50,-82,-59,17,-29,-15,-52,-6,-39,10,-44,-105,-25,-9,-61,-54,-49,-65,9,-2,-41,-49,-52,-42,-3,-36,-26,-4,-35,19,0,-60,-38,-91,-21,-65,37,-24,-61,2,-55,18,-32,29,-22,-51,21,21,-72,-49,-23,-87,8,-16,-56,-11,-85,-21,-12, -8,-15,17,-43,-73,-100,27,-40,-24,-22,-31,-19,-21,-25,-12,-24,25,-7,2,3,-54,-27,-21,-23,53,2,32,-59,32,-12,-80,-45,4,-69,28,4,-35,-34,29,-32,-17,3,16,-14,-15,-29,-15,-3,-36,-43,2,-32,17,-79,-27,-27,-38,1,44,-46,-63,44,-20,-3, 
  /* [29][0][][] */ -35,7,0,55,0,30,15,-25,-9,19,-25,15,9,-30,14,-23,-27,93,-30,8,-34,-9,-8,19,-9,3,8,37,3,1,-30,-26,16,48,8,5,54,-80,5,0,28,40,30,32,58,-49,-12,-16,-14,-4,13,-26,7,12,-121,-38,-5,44,62,-12,-19,19,-5,11, -25,4,12,45,20,-95,7,7,5,-33,-21,19,18,22,-3,1,-1,1,13,-5,35,12,-3,6,-60,9,8,-33,2,-20,8,17,15,-85,16,-20,-37,-127,49,-11,-26,-14,22,-4,-41,-70,-11,-6,9,-16,-33,31,-55,-81,65,-19,-73,-80,47,-10,-16,-59,6,-2, 12,6,-26,-46,23,69,-97,15,20,-26,-2,62,1,-36,9,12,15,-8,26,-17,-68,61,-48,-17,26,-37,-64,-19,-12,2,40,-12,-14,71,-6,-10,-8,29,-13,24,-14,-22,16,61,38,25,33,14,-4,-31,-69,-27,-14,38,26,7,17,13,-12,33,-3,-13,74,10, 
  /* [30][0][][] */ -8,-2,47,-48,10,65,-12,-10,10,-2,-1,35,-9,-20,-6,-28,-16,-19,35,-80,9,4,-91,-13,-50,-52,-49,17,12,-2,3,-16,6,-37,17,-75,-15,34,-20,-23,25,-31,-17,57,22,38,-5,-1,-3,16,-29,-2,-19,12,-10,3,-36,-50,-37,-10,-11,-5,22,10, -21,4,14,37,-29,14,28,-31,-20,14,-38,-10,3,27,-15,-26,-39,42,-13,9,-22,-79,4,10,-11,14,20,-5,0,-9,-19,14,-12,-16,34,48,31,-10,-25,-36,-3,-10,26,-25,37,-67,-31,-25,20,23,16,8,26,-31,-127,-27,-13,18,62,-34,-12,7,-67,-3, -31,8,-5,41,-1,-75,51,-24,-11,-39,-21,30,2,31,-14,-24,72,-10,-11,8,41,-20,-54,7,-58,59,62,-54,-2,4,53,63,-15,-9,-20,7,-49,-77,34,-21,-54,-10,45,26,27,-69,13,-59,-1,26,-13,32,30,-80,57,-54,-72,-97,39,-5,-24,-11,18,-40, 
  /* [31][0][][] */ -8,-4,-40,-34,-11,-8,-66,27,28,16,18,23,-17,11,7,-53,51,-2,-1,-26,-39,-8,36,-20,39,3,-55,-43,-2,3,-7,2,3,-69,19,-104,-9,-46,-50,13,-86,-35,-75,3,-77,-7,-26,-1,-7,38,-53,3,-35,-25,29,-25,-14,27,-78,-34,36,-12,43,4, 2,10,-12,-2,-12,-18,-16,-36,-1,16,-4,5,-12,2,17,-21,1,15,-43,-86,-1,-93,-62,9,-74,-42,3,-5,5,5,-72,-15,14,-67,1,-6,-18,39,-110,-18,38,1,-36,-22,-19,-19,53,16,-4,75,30,-64,41,61,-87,-16,-72,5,-40,-75,-23,-55,-6,-23, -13,27,-4,-109,-15,36,-127,-4,-4,51,1,0,-1,-14,-19,-39,-9,-118,23,-11,-5,-22,-5,11,-44,26,-33,13,51,-13,-46,-116,-15,-14,-9,-67,-97,-50,-85,-8,-11,-18,28,-25,66,-66,-9,23,2,-41,-1,25,0,-11,-55,-20,-14,-27,-46,-30,-58,-1,-20,53, 
  /* [32][0][][] */ -2,-5,-1,-7,-49,41,51,7,27,-30,-15,19,-14,-25,-12,-8,35,-49,-27,47,-2,44,49,3,-57,-11,-3,62,23,-9,11,-35,7,62,9,-18,-66,-15,22,3,-122,10,-4,64,27,8,19,-23,-6,5,17,-11,-43,-33,15,19,17,21,-28,-2,-40,63,13,-6, 19,-12,-6,-72,19,-113,-52,-18,-2,-9,18,-31,16,-12,-11,-40,-67,-127,14,-66,-41,2,-17,8,63,-76,-62,-30,23,21,-31,-45,21,-46,11,-32,-65,-18,47,26,-14,14,0,-54,-49,-8,33,-44,9,-85,16,32,25,-72,-13,-2,-63,-35,-53,14,57,-70,-46,25, 26,14,51,-60,-76,-13,-12,10,-8,-58,23,-11,16,-42,25,-10,-56,-72,-9,21,-12,-30,-51,-10,1,-31,-110,28,15,-11,-5,-86,-7,5,5,24,-67,-61,64,-6,38,-40,25,-17,-53,-13,-4,85,-15,-30,38,36,-8,-27,-12,8,-32,-31,-30,82,-54,2,20,36, 
  /* [33][0][][] */ -18,-18,30,-35,29,-86,-30,-29,-12,-13,36,6,6,-1,-11,-16,26,-28,-34,-54,-17,-5,-105,-2,18,-50,-43,-56,-1,-8,5,-36,10,-34,2,-24,-36,-18,25,-9,-8,4,-6,-1,-35,2,-5,47,28,-20,17,-16,-25,12,-19,7,-34,-8,-57,7,-4,-38,33,33, -16,12,-1,-7,-36,-57,8,17,-18,3,0,13,-15,-15,-19,-15,-33,1,-7,11,23,22,20,1,-91,-1,6,51,9,-5,21,-28,8,50,-15,46,-33,-4,23,-12,-6,-40,33,14,-6,28,1,-14,-22,-44,41,9,22,-31,-28,31,8,-2,-1,-24,-30,56,-12,-10, 13,19,-21,-64,-23,9,-127,-10,-10,-13,-11,-33,-4,-16,2,-12,-82,-90,19,-26,-70,4,14,-3,57,-38,-48,-81,2,10,-13,-58,4,-7,41,-75,-54,13,8,18,-52,-23,-50,-37,-97,23,7,-40,5,-74,-31,30,-44,-62,-25,16,-35,-10,19,27,-19,-29,-65,33, 
  /* [34][0][][] */ 17,-17,50,-64,-36,15,-58,-91,-98,-97,-71,-32,12,14,35,-77,34,-73,-29,-10,-42,-32,29,73,28,-62,-91,-90,14,43,-62,-28,-93,-40,-42,1,-91,43,-59,-62,-6,-64,3,10,-91,-71,-40,-12,-70,16,-15,-89,49,-81,-22,21,-25,-94,31,-90,-60,-91,-48,-13, 3,-2,-24,-42,48,-37,-77,-15,54,-56,-55,-48,16,-17,-39,6,-4,6,-84,-54,-89,-33,10,27,-50,-48,-16,6,24,-23,-28,-102,-48,-84,56,-69,-13,-4,-3,-30,32,41,-7,-14,-57,40,-44,-87,1,-33,-62,56,-41,-32,-71,-72,-7,24,-57,28,-127,28,-2,55, -33,-2,-38,16,21,25,-67,-26,21,-30,-83,-47,-41,-46,-89,52,60,-31,36,-109,-110,-41,-37,18,-82,-4,-51,22,-49,18,-3,55,18,43,-9,-31,-26,-105,-91,-36,-71,-36,-85,-88,-99,45,75,-41,9,-11,-45,7,-37,-33,-67,-73,-18,-8,-25,62,8,-44,-28,51, 
  /* [35][0][][] */ 22,17,-11,-11,-11,26,-76,5,20,-6,-22,17,-18,11,-5,-6,-1,61,31,-41,-12,-29,-38,15,53,-32,-41,-65,-10,-7,9,-9,-4,-12,2,-34,75,-10,-66,0,-72,9,-94,-17,126,43,-4,-51,11,74,-56,-26,72,87,31,12,-48,-33,-16,-27,-51,-39,20,25, 29,3,-32,-8,13,20,-17,-32,27,44,-14,35,10,13,-9,-5,16,39,-33,-53,-20,-24,26,-3,4,-14,-22,-83,28,6,12,19,11,-102,-15,-82,-3,12,-11,24,-127,32,-20,-28,-10,-4,-6,-15,2,4,-71,-84,-19,54,-25,-11,-54,4,-24,-50,-27,-51,-29,24, -12,8,1,-30,19,-51,-3,-24,20,-44,-14,-3,-9,-43,1,-31,-40,13,-4,-42,-37,-20,-110,15,4,53,-32,-30,1,-4,-40,-9,12,-51,-27,51,42,-67,59,-31,-79,12,42,-18,-51,-22,21,-42,11,-29,56,6,-38,-85,-44,10,-7,-9,49,-28,-70,-67,-30,-14, 
  /* [36][0][][] */ 30,-7,-54,38,6,-6,-45,53,-4,46,3,-77,25,27,-2,-25,-8,64,32,24,-4,-59,-15,-4,20,15,21,47,5,-5,-48,-1,0,42,25,-16,25,-26,-35,-8,35,-26,-20,-55,33,3,-25,9,0,-83,-40,6,101,1,-102,122,37,17,42,5,-9,69,-75,-10, 24,22,-24,3,-127,-55,-14,14,-12,-57,-27,-25,14,30,-5,74,15,-21,-56,-4,33,-24,76,12,-108,-34,-3,-21,0,23,-14,48,-7,-22,-1,-79,-58,-36,-50,28,54,-30,-89,-49,4,-73,-19,-14,-14,-31,-28,-37,22,-38,24,-46,-37,-10,65,-31,8,-44,-7,-21, 11,10,10,-25,1,61,-49,-15,5,41,-1,50,11,-47,-9,-6,-9,-25,29,-51,-54,-21,-48,-2,41,-26,-62,-10,-19,15,-1,-38,-4,29,5,-33,4,6,53,13,-66,-27,38,52,-36,18,16,-47,-2,-47,-42,-51,19,36,14,46,27,-18,-34,-86,-23,35,35,-48, 
  /* [37][0][][] */ 5,-15,-54,19,4,89,0,-47,-8,-2,-21,51,-11,-11,-12,7,9,34,-12,3,-14,1,-17,7,-57,-4,27,-39,0,3,-3,73,-4,14,39,50,51,-5,-73,9,67,-42,32,54,23,28,37,-55,14,3,38,-14,0,89,48,-7,20,65,30,-26,60,1,56,-10, -18,10,2,60,15,-19,-17,-9,-7,1,-63,26,21,44,-16,-15,-8,-11,12,-34,-9,-33,-40,6,-98,-38,36,13,23,-4,31,15,-2,-77,-20,1,3,13,7,-27,9,-21,38,55,69,-27,-29,-8,0,22,-40,9,-21,-28,-20,-22,52,-14,-1,-87,-19,26,22,-4, 6,6,-37,-35,23,43,23,-7,13,34,-9,-27,0,-12,16,-40,32,117,-35,-94,-39,-43,-50,14,41,65,-27,-80,4,-10,12,-31,11,-43,-4,127,-15,31,75,-11,-44,-33,-18,-54,-82,-6,43,0,-21,-25,11,-16,40,-4,-108,-47,-41,-6,-7,-1,-12,-88,-48,-19, 
  /* [38][0][][] */ -30,10,21,-4,-15,14,1,17,6,-11,16,-56,-16,-2,7,-41,6,-4,-60,-44,-24,-21,-72,13,-5,-8,10,-4,6,-33,-40,-66,-18,76,20,-11,-34,48,1,28,-10,-19,20,-35,-13,-30,2,60,-13,-1,10,42,26,73,-68,-81,-66,4,-41,16,-36,28,-39,-22, -20,-14,-20,-5,37,9,-48,34,-26,9,28,-14,-3,5,2,-37,-39,-127,21,34,21,-4,49,-13,5,-51,6,-8,13,-24,26,-19,-17,40,44,-51,-4,17,-15,-7,-6,3,-24,2,15,32,-23,44,-17,-18,-13,32,9,37,0,-16,13,-33,-21,4,15,25,-14,-38, -41,-11,-8,-4,36,-35,-7,-23,9,-31,13,35,21,2,26,-37,-31,-83,17,-2,22,-33,-28,-5,24,-24,-33,-18,1,-24,13,-35,16,-21,-36,-48,-69,-61,4,2,-59,1,-21,-21,-49,-22,-36,42,-8,-29,-56,-21,59,-25,33,-24,-20,-17,25,-17,-1,-4,-45,21, 
  /* [39][0][][] */ 4,-4,-26,17,-8,-33,-28,46,7,-55,60,-87,-3,-14,-27,-68,5,-30,104,31,-86,25,61,5,88,-78,-43,-17,-10,21,-1,-8,-2,-52,15,-52,-25,-35,7,31,-79,55,-4,-27,2,2,3,27,-17,-15,-127,47,-55,-28,81,-42,-2,10,-26,43,28,39,-45,-8, -19,12,12,-41,-10,-33,-49,-53,-18,-31,-16,5,8,-13,-15,-7,11,-85,-56,-48,-36,-14,28,-11,-85,-23,-6,-31,3,10,26,-30,-26,-61,1,-67,-98,9,-10,-27,66,12,-49,-30,-70,-26,-4,0,11,-53,-7,-12,16,6,-41,-48,-42,-6,-43,-26,52,-3,43,25, 24,-11,-21,38,-26,19,0,11,-15,50,-3,31,-5,31,-1,-45,18,6,8,33,-13,-8,5,5,14,-54,96,25,17,-6,6,52,12,29,-25,-16,-1,-1,-77,35,-20,14,0,19,97,-14,12,-11,-1,44,-25,5,29,-20,-26,-99,51,2,21,1,-6,8,-22,19, 
  /* [40][0][][] */ 25,-20,0,10,-4,15,13,-4,1,-15,-23,77,-15,-19,-6,-32,-22,-8,-21,-71,-36,4,-61,16,-44,-32,-34,-29,2,-6,17,-45,-26,-18,-3,-33,-2,-14,23,-22,-64,39,10,105,15,28,40,-85,18,21,-36,-15,-15,-35,15,20,-3,-26,24,35,-50,-13,65,6, -6,12,16,19,86,-1,15,-28,-11,31,5,-18,-25,-5,-1,-23,-43,45,8,-36,-26,-122,-35,-2,34,39,14,-47,-10,-11,-28,78,-14,-64,37,74,82,46,56,-8,-52,6,22,-21,43,14,38,-46,-13,14,56,-15,-4,-17,-127,35,-47,-58,69,-108,12,-33,-94,-31, -34,-1,13,-15,-16,-90,49,-34,23,-45,-5,-3,-40,5,4,-14,66,35,-22,25,30,-42,-12,-6,-58,80,31,-30,-18,15,40,21,-16,-37,-22,35,-11,-63,71,-35,-106,2,71,25,-2,-77,-21,-73,12,28,-7,77,12,-81,82,-88,-78,-23,93,-20,-11,-37,12,-40, 
  /* [41][0][][] */ 11,-13,-5,34,-3,-32,47,-7,1,48,9,20,12,32,3,33,-15,10,-33,31,-9,17,-31,-6,-59,-18,15,26,-21,-18,34,-26,0,22,9,37,-16,13,28,-47,56,-19,15,22,62,9,-19,6,5,-21,20,-8,-11,-5,-35,23,2,12,11,-7,-41,58,-18,25, -7,-7,-41,9,34,4,-36,-24,3,-21,11,0,-3,14,16,-31,-11,-7,24,-54,-34,-25,55,-13,71,13,-65,-116,14,-15,2,-59,-5,-62,0,43,-6,-24,38,-8,-51,13,15,-51,-38,8,10,-18,23,-74,35,13,-30,-61,7,28,-66,-33,-61,9,-13,-22,-43,10, -8,-19,39,-25,9,-62,36,4,14,-88,6,-41,-9,-18,16,26,-8,-1,8,8,20,21,-64,-10,3,-26,-44,46,4,1,42,-54,4,-10,-3,46,-6,-10,-19,-5,34,-41,25,22,127,-11,-4,55,13,-15,-11,-1,-6,-27,-43,20,-14,-23,5,24,-13,-7,-19,20, 
  /* [42][0][][] */ -23,17,-7,60,-21,-13,15,-29,17,17,-32,-51,-11,-2,-15,-36,-1,14,-20,-12,-28,-94,-19,7,-4,54,13,-22,-2,-14,-26,36,-23,-44,29,27,0,-17,12,-11,-28,2,34,-5,-24,5,-14,-13,2,22,17,-35,32,-17,-80,-27,-35,0,66,-13,-18,-59,-3,10, 37,18,-8,30,-19,-26,-36,17,2,-27,-1,21,17,-5,3,-24,3,-80,32,25,18,7,-93,13,-17,-41,1,-43,11,12,-10,62,-1,-24,8,-91,-74,-65,-34,-24,-76,16,-38,7,-34,-32,-15,-41,19,37,-64,23,-16,-74,51,-33,-38,-7,2,2,-17,-34,37,12, 24,4,-8,-23,-9,78,-33,3,12,44,-20,45,14,-38,8,0,-6,-15,14,-49,-27,-26,-70,-1,-8,-31,-31,-58,-11,24,-21,37,4,-11,19,44,26,20,-60,20,-10,-19,-42,13,127,31,-7,-54,-12,32,58,-61,45,89,30,28,10,-28,-67,-66,-5,-45,52,8, 
  /* [43][0][][] */ -10,11,-24,-28,1,-7,-67,-32,-12,13,-26,-17,3,-41,12,-6,-58,3,30,-31,-37,-20,-2,-14,-49,-42,-32,-40,5,10,-9,-55,-10,-87,-14,-24,9,-33,-19,-21,-33,-38,-31,-8,25,-84,3,-57,-6,15,-30,-17,-13,22,-48,-14,15,-25,-22,-13,5,-74,-3,-10, 6,-5,-28,0,0,13,-127,70,-4,9,-21,33,5,-65,0,-59,-56,49,-18,-28,21,-8,26,12,44,-21,-37,-45,-2,-5,45,-36,-21,20,1,-44,1,46,-69,27,-26,-16,-20,-111,-61,70,-12,61,-12,-44,-18,-11,-30,73,-4,-37,-6,32,-4,-10,45,-44,3,-11, -6,6,-14,49,53,-47,-67,-26,2,-48,6,-9,-1,-8,3,1,-29,-18,-44,-26,-2,-68,-14,2,22,-24,86,-88,-16,2,13,47,-20,41,10,-50,-27,25,-1,-45,44,-12,27,23,-39,14,3,96,9,-47,81,-20,-24,71,-77,16,-2,32,-4,-21,54,-15,-35,8, 
  /* [44][0][][] */ 37,2,-14,49,-10,-33,52,31,19,36,-36,1,-24,-4,16,-51,3,98,-8,24,-7,4,-9,14,17,127,-57,100,15,-25,-2,-18,-17,89,1,117,72,-21,39,6,-75,-16,7,35,-40,-12,-28,5,2,-4,24,-83,91,-45,-12,17,94,53,36,-54,-57,47,-24,19, 29,12,-45,-67,-14,2,-49,5,25,37,12,-34,-48,-48,-1,20,-13,24,0,-55,-66,-68,50,7,2,21,-13,-65,9,55,-13,-22,-4,25,53,-33,-32,31,-38,-3,-16,2,-110,-54,-49,27,15,38,-21,-23,-26,-70,21,-25,-112,98,-55,-42,53,-57,7,-43,-41,-11, -66,4,-26,6,1,-37,-23,7,-16,-3,-44,-37,-58,-7,16,57,-16,5,-28,-12,18,-31,119,-19,3,-15,-13,42,0,-15,-95,-35,-31,7,6,-76,-4,-74,5,-2,2,17,-66,-31,20,-69,-17,-23,-20,-7,19,-22,-4,3,-3,-62,11,-55,29,-73,34,27,-47,-10, 
  /* [45][0][][] */ 10,-7,-6,-46,7,48,-46,-31,-8,-20,22,65,38,-1,12,26,26,1,-17,-5,32,0,-18,6,-23,-32,-41,9,-4,-15,10,-33,-13,-9,-5,0,-12,18,-36,3,18,-1,-14,22,38,33,9,-33,-1,51,3,-28,-26,23,9,18,9,-46,-23,-12,22,8,34,-2, 19,8,36,1,4,13,34,-5,11,-12,-3,-14,-9,-20,8,-6,4,36,15,-32,-14,16,-4,-12,1,42,-12,22,-11,4,12,-33,-11,-42,-31,37,-2,16,26,8,12,-11,60,7,-68,-27,-9,-5,-23,-32,27,13,-1,45,24,-51,15,-13,-19,-19,-22,32,-31,-18, 47,1,-40,-28,-26,33,16,8,10,-44,43,-35,3,6,-3,-38,-18,-56,-29,-14,-20,40,12,-7,32,10,-6,-31,-14,-12,14,-8,9,20,25,-36,0,31,-11,-17,-17,-10,-97,-8,-127,54,-2,-22,1,-47,-40,26,-16,16,-56,53,8,12,6,50,0,-24,-13,4, 
  /* [46][0][][] */ -27,-38,-41,-28,-2,-70,-67,-70,7,-46,17,-27,6,-34,-14,-15,-49,19,-71,-106,-61,-26,-33,-5,37,-38,-81,-68,-22,-37,-79,-89,3,31,-1,-67,-36,-34,-41,-27,52,7,7,-23,-12,5,-15,-41,-10,16,-112,4,-21,86,-24,-18,-39,106,-49,6,127,-103,-7,-15, -17,1,-55,35,8,4,-89,8,-19,23,-31,-14,18,54,5,37,-32,77,-57,-42,40,-32,-119,-15,-66,10,17,-69,-22,6,-16,-124,13,-92,-13,-94,-20,-109,-59,-75,-35,-34,-86,-35,53,-68,-9,-102,17,88,-124,-44,55,-64,-124,-90,-47,-28,-57,-49,81,-64,-58,52, -51,1,-35,44,-20,-10,-34,18,-5,-1,-62,-11,-42,0,3,19,-14,-27,-36,-41,-45,-43,-20,33,-41,-23,-18,-51,-42,12,-71,58,-1,-72,-3,-57,-7,-49,-19,-49,36,-14,-68,-39,-31,-72,-4,-20,15,52,-90,-16,28,2,-82,16,-46,-80,22,-6,-42,-64,-29,2, 
  /* [47][0][][] */ 12,22,-13,10,19,3,15,1,4,6,8,9,-29,2,-11,-46,26,-127,-20,12,13,41,-2,-2,-63,1,-72,82,4,2,16,-7,9,60,2,-22,-50,-9,-9,1,-50,-15,14,42,-16,19,4,-31,1,17,-9,1,44,-26,23,17,18,-23,-21,5,-48,39,-44,10, 15,-9,18,-39,-12,-123,-11,-14,9,-72,5,-4,0,-3,8,-56,-4,-64,6,-59,-20,-27,27,-17,66,5,-87,-35,13,2,-29,-82,-3,-71,58,-39,-102,-10,29,6,-67,-24,14,-42,-57,-47,8,1,8,-88,2,33,11,-78,33,-2,-89,-2,-78,4,-50,-71,-29,-14, 0,4,0,28,-32,16,-2,33,-22,-118,21,-32,-4,-26,-7,-53,-22,-45,2,17,7,62,-54,6,-11,-29,-51,28,-13,0,27,-69,6,5,30,15,-86,27,-67,-41,15,-18,-34,-19,-23,25,-37,9,-17,-55,-7,37,14,0,-52,-8,-1,-12,-11,64,-24,-3,47,31, 
  /* [48][0][][] */ -23,-14,-1,-56,41,-19,-31,-40,7,-30,-16,-31,64,37,13,72,17,-10,-40,-8,22,-28,64,21,-43,-19,5,-34,-3,-22,-27,-21,-1,-65,33,-58,-4,-99,-13,-48,64,6,-6,-49,105,-60,-21,6,12,6,-9,-29,1,23,-39,-35,-10,-1,39,-20,-16,-24,-76,37, 4,-11,16,-17,-26,-40,12,-18,-7,-19,-57,-16,0,9,11,14,-43,8,-77,-53,-38,-43,-39,3,32,87,-68,-39,-4,1,-6,-66,19,-45,-6,112,-4,-29,85,-1,-39,9,37,-9,-67,-49,17,26,-17,-18,82,8,-14,-48,-10,-70,-11,6,-36,-40,-20,-28,-19,1, 11,24,-64,-75,-20,4,-17,27,18,-51,25,-57,-9,-35,-6,2,18,-41,25,27,-2,35,11,-16,30,86,-32,-19,11,-9,-3,6,-5,73,-20,-15,-36,-21,-10,9,-37,18,-86,2,10,26,-11,-32,12,-20,-58,-48,-3,0,-81,127,8,5,77,30,-50,-16,-46,19, 
  /* [49][0][][] */ -16,9,12,-68,-85,43,59,-85,42,15,-74,-67,-17,-35,39,-33,-8,81,-97,-56,6,-98,-47,-8,42,122,-1,10,-19,9,-2,16,-7,-61,42,5,65,2,-60,-12,-114,-45,74,19,127,7,-12,-17,13,122,17,-85,-25,73,-19,-71,-20,-121,46,-11,-17,-41,-32,11, -4,3,-21,56,-90,20,-15,-71,11,-5,-49,-19,13,-31,26,-80,-8,-29,-55,41,-31,36,-81,36,19,-15,40,1,-4,-30,-20,87,13,-37,-59,-79,-34,-1,-26,-24,-66,-25,-10,-79,-106,-19,-45,-40,-3,16,60,-52,-6,-94,-89,-57,10,3,-21,-37,-6,-39,-50,39, -34,-32,-33,-36,-14,-80,-18,-65,-10,-60,-81,-40,-41,-4,-5,-15,-16,-79,-89,-32,-2,-7,-100,18,-10,-2,-79,-18,-5,-25,-35,-8,-21,-81,24,6,-31,-41,25,29,7,-27,25,-68,-25,-47,3,-74,-14,-46,8,-74,13,-7,-52,-94,2,-67,-17,-108,-14,-50,-44,-33, 
  /* [50][0][][] */ 17,-1,-17,-19,23,46,-10,21,11,-17,25,-30,5,-9,-7,-37,7,14,66,30,-10,32,15,10,8,-10,-19,20,14,9,29,-14,-9,-26,-8,-46,-8,-33,-23,13,-31,30,-26,-21,-19,7,16,6,3,3,-26,20,-20,-19,43,-6,20,14,-16,20,11,35,-14,9, 32,6,1,5,-17,-16,7,-27,6,0,-2,4,5,13,-8,20,-32,27,-45,-17,15,8,1,3,-40,-26,17,11,-3,17,-6,0,-12,-38,-6,-32,-45,49,-20,-31,0,1,-17,-21,-48,-12,29,21,-11,23,5,-28,19,-8,-6,-24,-64,11,-5,5,54,-4,27,-9, 7,2,-19,-45,-22,13,-68,2,-9,-30,-8,16,-8,-5,0,-13,-25,-127,4,14,-22,-7,32,0,-17,-33,-35,29,16,-9,-9,-36,9,45,-15,-23,-16,-16,-2,3,15,14,-16,-8,-31,-3,10,10,4,-48,3,21,-21,-20,-2,-27,12,-15,-61,-1,-34,8,-15,15, 
  /* [51][0][][] */ -56,14,-28,-52,-26,84,-76,15,-11,44,-5,-22,4,-5,-10,-27,-7,-9,-30,-46,-48,-52,-127,24,-37,84,-67,-59,-11,5,1,13,15,-112,32,12,64,41,27,24,-68,-28,-33,4,52,23,0,14,-23,-40,63,-25,-83,61,-87,-71,-81,-58,22,-9,-72,24,-3,24, -50,-13,-14,-78,-88,-56,-31,22,-14,-39,-57,-12,-21,9,-3,-35,27,-9,-54,9,-28,-43,-7,14,-35,-89,0,-22,-14,-15,-37,-14,0,29,-17,-99,-6,-94,10,3,-13,4,-19,-8,5,-70,10,-49,16,-58,2,-73,-25,-11,-113,-46,-17,-10,-37,-49,-91,-24,2,-42, 0,-1,-32,-6,-52,-23,23,-60,-19,-38,12,-10,-2,-2,3,-22,-14,-36,-1,-68,11,-58,37,9,-56,1,-3,-41,-1,8,-65,55,7,-58,-42,-37,22,-60,-45,17,-50,-19,-55,-38,-23,-66,-19,-10,0,30,-44,-40,-16,101,-54,-17,-84,-38,-9,-77,-66,-83,-40,-8, 
  /* [52][0][][] */ -14,-8,-54,-29,-2,19,-42,-14,10,12,7,52,5,21,4,50,58,-17,-51,-21,13,5,-88,24,-90,14,-48,19,10,22,36,-45,-3,2,-6,-1,-20,25,109,14,34,-11,-25,52,50,4,-9,11,-17,41,51,-28,37,59,12,-33,-4,-28,-73,-8,-36,32,47,18, -12,23,41,-20,-6,-60,-18,-29,15,-63,-29,-42,48,0,4,8,13,53,1,-57,-35,13,-65,-10,43,52,-23,12,-4,-2,-38,-77,14,-127,-20,89,-49,-21,117,-6,-1,-39,32,-2,39,-49,14,10,-16,-45,58,47,4,4,43,-94,-39,-1,-47,-10,-72,-35,-29,53, 47,8,-67,-42,-21,3,21,15,1,-56,-7,22,-21,0,-9,-5,-35,-89,28,34,-13,49,8,-13,-30,-42,-40,35,-8,9,24,-91,11,18,46,23,-54,28,35,16,23,59,-77,-40,-55,59,-24,1,-16,-107,-35,-1,-38,-6,-48,41,61,27,20,67,28,-18,6,38, 
  /* [53][0][][] */ 25,12,-21,6,-2,22,-9,4,-6,25,20,21,-1,8,6,3,-16,4,-7,12,14,30,-15,-1,2,-70,13,-7,12,13,1,21,-19,-32,-13,-38,11,9,-39,-2,-12,1,-19,2,14,18,13,7,-4,49,-6,-10,5,67,0,-28,22,12,12,10,25,-2,19,20, -9,17,18,9,-14,48,-37,5,-12,54,-32,-14,16,24,2,-10,-16,74,-10,-15,-27,-8,-4,8,-51,20,13,-22,-5,-19,9,20,-12,-42,-34,-67,48,-1,-42,-17,-16,-3,-58,-14,127,-30,5,-22,3,73,-63,-10,80,8,-11,-34,-1,-38,1,-5,-32,-14,-26,43, -7,1,-20,17,12,-19,57,-1,-13,9,-14,-16,-8,-18,14,-7,-24,101,-31,-20,-2,-14,-43,-3,88,63,20,-35,2,4,-12,64,-2,-4,9,15,26,16,-22,-28,-60,-25,37,-23,-5,1,5,2,15,45,-35,-14,75,27,-28,-21,0,-30,104,-1,20,-57,-39,0, 
  /* [54][0][][] */ 44,-19,0,62,63,6,33,-1,18,50,1,35,-18,11,-14,-20,-41,-43,47,46,-28,7,-27,2,4,-60,5,-59,-16,-19,28,-8,8,10,21,-61,51,5,11,-22,8,12,14,-46,1,-10,-13,10,-4,-57,-41,64,27,-9,-3,32,3,21,22,8,35,-42,-36,7, 9,15,-24,19,-24,31,-54,3,1,-31,22,18,7,-6,-13,-26,48,-6,23,-9,-36,-10,-10,1,-34,-15,19,-60,7,2,24,-85,-16,-42,39,-19,4,-10,30,10,-73,2,5,46,9,63,27,-22,6,-21,-93,2,-65,-82,-14,22,1,23,-28,7,-36,-60,40,18, 41,16,-16,-22,60,32,9,-18,6,-2,-24,-6,2,-14,-1,-59,5,-28,-14,-69,-33,9,3,4,-24,0,-45,-38,22,-15,-25,-44,-4,-72,14,3,69,38,30,34,-68,20,3,-24,-15,-8,19,-53,0,-1,-37,-46,-25,-4,-57,-43,-56,-17,-33,-127,-3,-48,-34,-21, 
  /* [55][0][][] */ -35,-2,22,-22,20,-2,-53,-6,10,-4,-18,-73,-11,-57,8,-47,-53,-35,11,-93,-63,-39,-60,-1,5,66,-92,-38,-17,-5,-13,-52,-23,-84,12,110,-33,18,35,6,22,-2,-3,-35,-127,18,6,-27,-11,-45,13,-18,-99,16,-27,-45,-24,-12,-53,-78,-83,-72,-15,51, 8,-5,1,-11,71,3,14,41,29,-29,17,-50,6,-23,-12,6,10,-46,35,-57,9,16,-85,-2,21,20,-31,13,6,-2,-2,-36,24,-50,16,-33,34,18,-41,38,46,13,-9,-15,57,-5,-14,18,-5,-15,1,-10,-64,22,22,-40,-2,13,-75,1,28,-5,37,42, -13,9,22,-10,6,-21,3,7,-6,-7,-3,-57,-12,24,12,13,21,11,-8,-48,6,-41,-38,-9,-76,0,56,7,3,17,-48,2,-2,55,15,16,-64,39,-46,-17,-20,38,-23,-61,-124,-23,-14,55,-22,-29,77,-2,6,-20,-23,8,-27,4,-41,21,39,23,-36,47, 
  /* [56][0][][] */ -33,4,0,53,-55,42,52,-35,-13,43,-44,-11,-21,2,-1,-42,21,78,-21,-18,-23,-119,17,-14,-17,49,26,6,-17,1,-8,38,9,-79,20,54,59,45,-4,-54,-15,-67,70,-22,69,12,26,6,-10,-18,46,27,17,25,-111,-17,-7,-1,124,-30,-43,-28,-45,7, -15,6,-18,77,-41,-82,-20,12,9,-31,-37,-1,5,21,14,-17,43,-28,-32,26,54,-24,-127,-12,-69,-8,43,-56,20,5,4,57,-14,-58,13,-116,-29,-78,-15,-2,-60,-7,-50,19,-34,-86,7,-38,19,11,-18,-9,29,-90,64,-16,-34,-23,65,7,-2,-42,-16,-8, 10,-7,-38,-25,-20,70,-76,16,18,59,-20,62,7,-30,6,-40,-16,-71,7,-95,-38,10,-47,3,36,-61,-82,-1,25,-6,7,43,1,58,26,-25,-12,18,-11,24,-72,15,2,77,-6,39,27,-41,-10,-30,-88,-66,-18,68,14,25,10,17,-37,-49,-57,28,75,15, 
  /* [57][0][][] */ -5,-5,16,32,-17,26,-5,-3,-29,-54,9,-38,-2,40,4,-53,20,-78,24,47,14,36,9,-7,-41,-42,-55,19,11,5,44,22,72,-58,-5,-36,-46,-41,28,-74,-11,54,10,-35,16,-71,-2,1,12,-46,13,6,-41,-59,51,-10,-4,-49,9,2,-14,-21,-57,8, 32,16,-35,-20,-13,64,-34,2,6,20,0,5,15,-42,-8,-13,-25,0,-21,-36,6,2,-34,16,-27,-34,-6,-64,-14,26,7,-21,-37,-15,-18,-41,0,30,1,29,-26,-56,-13,12,36,68,-15,-17,16,9,-26,-3,-7,35,-18,22,-4,-6,15,19,-12,-37,18,19, -44,8,-44,15,39,-11,-48,-31,-7,58,-29,31,-26,39,0,-28,21,58,-20,-76,-20,-99,-47,-16,0,-34,23,-95,-1,6,-51,-5,-9,-72,-1,-46,46,-12,-15,1,-79,10,-39,-93,127,-4,0,-69,-1,57,-45,-21,-2,-21,-47,40,-13,-24,-33,-78,13,-74,-61,-3, 
  /* [58][0][][] */ -13,11,16,38,14,-27,17,-18,17,53,16,-14,-25,24,-17,7,-60,24,-23,-21,23,20,-50,9,-10,-46,40,-11,-11,13,-35,-20,2,69,-8,-7,-4,-25,-46,-10,43,41,19,-8,-1,-36,-1,77,11,-81,-19,42,-29,17,-122,10,-13,36,53,-31,77,23,-44,-35, -20,-4,-16,0,-62,-21,-42,31,-17,0,-13,23,-18,30,-20,45,1,0,-41,59,37,-39,81,-4,-80,3,-7,29,-2,10,27,-59,6,-84,-14,45,47,-99,18,-14,1,52,-62,10,97,-47,-27,-48,8,19,-4,-14,-40,21,44,47,-2,-33,28,-8,4,43,-45,55, 56,11,-59,-64,15,105,-2,-38,12,-30,-25,-39,26,-2,11,-3,-11,100,5,-63,-4,33,-42,17,78,44,-56,-64,8,12,58,15,3,-34,6,22,-8,72,3,-4,-55,14,44,16,15,42,32,-30,16,48,-61,-18,-31,2,-127,18,1,-2,8,35,-33,-80,69,-46, 
  /* [59][0][][] */ 11,10,5,-16,25,13,-9,5,8,42,8,12,7,50,23,-9,-28,5,29,-24,27,-23,-4,15,-25,-13,-9,-18,-4,24,-14,32,3,-25,15,-49,57,19,13,-31,5,4,-18,-17,53,-13,-12,-5,12,19,-37,1,-16,51,-48,12,-11,-8,46,2,15,-5,-40,-15, -10,2,-38,-20,-10,17,-24,12,-4,-5,-5,11,19,20,29,-12,24,23,-40,1,-6,-28,-22,14,-73,8,0,-2,13,-15,-16,-26,3,-11,4,-34,-26,-42,-12,20,-43,-3,-5,22,66,-9,12,-57,8,-3,-17,-52,24,-41,-31,-31,27,21,-20,-11,-38,-24,20,2, -12,0,-39,-51,40,-10,-17,-20,-24,20,-4,15,24,-23,24,-46,-10,-17,4,-100,-42,-66,-26,-13,-58,14,-57,-62,0,1,-51,10,-2,-36,23,-2,41,35,-32,-13,-54,-4,27,-12,22,-4,4,-32,-3,30,-21,-48,-11,10,-26,37,-66,-41,-8,-127,-25,-55,-49,7, 
  /* [60][0][][] */ -13,-2,-4,15,-15,21,-8,2,-9,15,4,-21,26,47,-8,-6,15,15,25,54,34,-39,-24,-11,-54,-56,10,-7,1,20,22,33,17,-124,-29,-72,21,-60,-40,-41,-33,47,-40,18,-22,-87,-8,-25,23,47,-35,21,-21,-56,40,-10,-31,-97,74,-19,15,-53,-2,11, 27,26,-20,-30,35,89,-116,-39,-15,-60,-4,0,21,-7,-21,-59,-20,7,7,-55,8,10,-16,-18,-1,-8,-37,-68,-9,5,24,-65,-3,23,-30,-52,-3,20,-24,-5,-127,19,-34,-11,-22,56,27,-94,24,0,-76,-28,-67,66,38,17,-55,-18,-27,-1,-2,-103,74,2, 6,-16,-41,-25,55,-71,97,-23,-12,26,-19,-97,25,-8,2,-41,-16,-34,-8,4,-29,-90,-33,-17,-84,44,26,17,34,-10,-68,27,25,-26,3,86,124,31,-50,21,-62,46,17,-18,-33,39,19,-116,-15,48,71,-110,-57,30,-77,46,-50,67,0,-114,-5,-58,-56,92, 
  /* [61][0][][] */ 10,13,-10,14,-16,-7,41,9,-18,56,-15,27,14,-23,14,8,-17,-7,-43,33,-28,39,3,-7,-64,31,-11,44,-13,-17,2,-55,-8,70,18,32,-20,-10,20,-11,-55,34,19,36,-47,3,-22,-14,11,-36,-11,-16,-42,-48,-17,22,36,33,-6,3,-44,73,-34,3, 23,38,-25,-32,37,-40,-79,-1,-3,-4,8,-36,-19,-19,-12,-14,-6,-21,43,-10,-46,-30,33,7,65,0,-38,-127,1,3,26,-48,12,-68,45,-93,-53,-19,51,-3,-51,-11,-36,-46,-72,-12,-5,-49,-10,-18,-37,41,-1,-83,16,-1,-50,-33,-61,-7,16,-97,-49,-5, 10,9,11,-43,-15,-6,41,-23,9,-4,-35,-5,-18,-12,-5,60,-28,-12,-36,9,1,5,-15,-15,23,-34,-61,9,-3,6,26,-69,10,-100,-17,-59,27,10,33,4,25,-15,-50,23,53,12,-39,-23,-5,-3,-85,-40,-9,-73,3,-42,-10,-31,-48,26,39,-48,67,-7, 
  /* [62][0][][] */ 25,-34,-21,13,14,-32,-25,-45,2,26,-5,-20,18,-32,-32,-43,-16,13,-28,1,2,8,22,-11,-14,-32,-18,-10,16,-45,-11,1,5,25,-12,-27,-14,1,14,-3,0,26,-54,-46,-17,-18,-35,-42,-12,-22,-4,7,-5,-13,-6,-21,-11,18,0,-31,-48,3,-5,21, -11,-16,-17,29,-30,-43,18,-7,9,-5,-11,15,-3,-39,31,-51,15,-15,-27,-8,-16,-49,-14,10,-23,-24,-22,-9,-13,-20,-33,30,-22,-42,14,-8,5,-52,9,-17,3,-26,-26,1,-7,-48,-14,-10,-6,-24,-24,-21,-26,-22,-62,7,-23,-16,9,11,-7,-20,14,-14, -10,-32,-58,-27,-46,-4,-27,-13,2,-34,-42,-7,3,10,17,-30,28,-23,-32,-20,17,13,10,-26,-41,14,20,-4,-24,-11,-44,57,-24,-12,-9,-26,-1,-41,-25,-3,-3,-21,-127,-18,-22,-29,19,-25,-24,-34,6,2,-23,-23,20,-49,-10,-18,-15,-23,-4,-8,-17,-29, 
  /* [63][0][][] */ -6,-12,16,-3,-24,-61,-13,8,2,8,-3,-5,-5,2,-3,-7,-32,0,-13,-55,-17,-11,-58,-8,-7,30,-83,-13,1,22,-36,-77,10,8,-34,0,19,13,-33,29,-42,-13,-8,-23,19,-23,-13,18,-5,-30,-13,-19,0,10,-10,-44,-37,-7,-62,-10,5,-2,-19,4, -26,0,-25,-91,-29,-39,-42,7,-1,-17,20,7,-2,-23,-21,1,-5,-127,-10,7,-2,20,34,4,8,-42,-43,15,4,-5,19,-28,-3,18,-19,-5,-53,-5,-9,6,-31,13,-43,6,36,8,2,-8,10,-61,-12,28,-13,-21,14,-12,2,-14,-58,11,-17,19,9,3, 23,17,32,40,-17,-49,37,6,-8,-44,-9,-18,8,10,5,7,-40,-99,-4,15,12,2,-67,-8,-57,-50,-12,52,-7,-16,3,-5,0,20,-10,2,-88,-22,40,-11,-39,-23,1,-3,-73,-63,14,43,9,-48,28,-17,-43,4,42,-37,-22,-29,-16,8,-28,17,-17,10, 
  /* [64][0][][] */ -50,28,-3,-30,-33,4,-42,-19,-14,18,-53,-51,-24,12,20,19,-1,-26,15,-45,-45,-57,-31,32,22,-11,-1,-16,0,-49,-33,25,-51,-42,15,-14,22,16,-43,-5,-25,-40,-8,14,-18,7,-20,6,26,-19,0,13,-28,-15,4,-11,15,-15,2,13,19,-17,-1,-6, -62,4,-88,-21,-45,-45,-41,-28,-8,-33,-22,-21,-22,7,-52,-37,-20,34,-46,-64,14,-46,-29,20,-28,-30,-34,-42,18,-54,10,17,16,-43,18,16,-38,-16,-33,1,16,15,-96,-13,6,-1,11,-1,-23,0,-29,-40,-18,-56,-88,-17,-11,-31,-55,-10,-43,-72,-55,30, -72,25,-62,12,-82,-32,-40,-27,-51,-41,-36,6,-39,42,23,15,-5,-24,-29,31,-56,-7,-11,-13,-73,-35,-1,-46,-4,-24,7,-31,11,-20,27,-37,-25,-41,-19,-3,20,-49,-61,8,-53,-30,43,-73,-31,-20,3,-127,25,-102,-64,-27,-35,-24,-57,-53,-25,-68,-8,29, 
  /* [65][0][][] */ 17,1,-32,-10,-8,-23,-20,-39,-23,10,5,-34,8,29,11,13,-58,-19,29,7,6,-41,14,8,-10,-6,-27,-18,-11,-10,-31,9,26,-34,25,-84,3,-54,-56,-39,-23,31,1,-28,-11,-60,-15,-31,0,35,-59,12,12,-31,24,18,-26,-62,25,-8,7,-83,-93,13, 47,14,-15,-41,-25,40,-56,20,6,-15,30,-2,1,-22,9,-46,-17,-31,35,-22,-3,21,-7,13,15,-48,-30,-39,6,-11,2,-28,9,-34,5,-73,-28,15,-59,15,-5,-27,-80,22,-64,36,-25,-88,-10,-30,-41,-33,-40,-9,9,35,11,17,-54,36,20,-29,13,12, -27,-3,8,-39,27,-12,16,3,-14,66,-8,-29,7,32,8,49,50,3,-47,-26,-16,-127,-1,15,-33,-1,-6,-33,4,9,-47,-13,12,-103,19,-24,56,19,-29,-8,111,-26,8,-56,117,-6,5,2,29,63,12,-2,9,90,-13,30,-16,-27,-2,-93,10,-26,-51,19, 
  /* [66][0][][] */ 16,-27,37,-6,27,-88,-69,-32,-18,-105,2,-69,7,-53,12,-8,-65,-93,22,-65,-24,-23,-52,-25,7,-85,-127,-69,-11,-5,-35,-100,7,-60,-10,-19,-111,-76,36,-40,-39,8,45,-9,-61,-64,-21,-39,-14,-102,-1,4,-8,-85,-55,-42,-78,-16,-30,-17,-89,-73,-85,56, -61,10,7,-56,-11,-7,-23,-6,27,-105,18,-43,22,-43,-4,-56,23,0,-27,-80,-59,59,-103,24,-15,-1,-54,-46,-18,-38,3,-68,-15,-22,15,9,-81,0,33,-5,85,-26,-18,16,-88,-36,-14,35,-13,5,29,-27,-3,6,-22,-31,-6,-13,-91,32,0,-34,34,60, 38,-32,7,-2,-7,-41,-23,36,-26,41,18,7,-17,4,-26,-4,-75,-23,18,-5,16,35,-48,1,8,-58,18,21,-16,-26,-6,-41,-13,7,0,-19,7,-13,39,-25,-33,-16,36,-52,-87,-23,-17,28,4,-69,-13,8,-96,-26,-41,-8,15,11,-43,33,-29,33,-76,24, 
  /* [67][0][][] */ 22,-18,-19,-28,20,-48,37,8,8,-93,31,-76,-1,-21,9,-8,-9,-66,-5,-5,21,-8,10,-15,-74,-82,41,-11,2,10,10,47,9,24,-36,-24,-98,71,-102,8,-35,36,18,-6,-4,31,17,11,4,15,-1,-26,11,7,17,-22,-92,-14,-5,43,34,-10,45,6, 13,4,2,59,2,-15,4,24,5,-31,-7,-31,-1,11,-2,4,-46,-110,16,-5,22,-15,-5,12,-90,-22,-30,34,11,3,-9,-26,-6,13,-5,-41,-111,-13,-36,-29,-10,40,-91,23,-20,-70,-4,-16,8,-65,-71,-83,-33,-104,1,-56,6,14,-87,-49,-37,38,24,4, -1,-4,38,86,-39,-59,14,-2,19,-33,-40,-35,-14,2,-17,-28,-5,12,-14,22,-56,-27,6,-1,-72,-7,80,45,5,-31,-62,74,2,67,-14,36,-37,11,-22,-7,21,-22,2,-20,-36,-60,1,-9,7,-13,-17,-39,-46,47,-103,-86,32,21,40,-127,-34,33,-25,28, 
  /* [68][0][][] */ -11,1,-75,51,83,-68,-8,11,12,16,37,-72,10,12,-27,-16,17,-30,27,50,12,8,2,-2,73,17,-9,43,4,-36,-36,9,-13,80,29,-80,23,-93,81,-4,-66,52,-38,-13,9,0,-19,-3,-39,-38,-15,28,-48,-30,-83,68,51,24,18,-24,-3,47,-98,16, -26,0,-3,-33,-75,-40,-98,-10,-22,62,-11,-47,2,-1,0,73,-50,-22,-108,-27,-14,-75,-14,-8,-72,18,-48,-62,14,4,-66,-16,-25,-22,-13,-2,-12,51,-22,-22,69,-47,-48,-14,51,-12,-25,-13,14,-67,15,-72,58,-2,-127,-4,-27,-38,-2,-5,-1,-58,-3,-7, -33,20,-10,-58,-83,-48,62,-1,-25,-21,14,11,-7,10,-23,-41,59,19,-19,-32,24,-38,19,-3,-47,42,17,-43,2,9,0,31,-3,-13,-5,-14,-32,-66,-30,-13,-124,32,29,-31,23,-94,27,9,5,-8,-44,-42,26,-50,-19,-79,-52,-19,64,-21,-37,-12,-87,-44, 
  /* [69][0][][] */ -36,-47,-77,-58,-110,-23,-115,-55,8,15,-36,-88,-30,-21,-23,-11,-112,-91,-21,-70,-18,9,2,17,-89,0,-11,-6,-11,13,-57,23,22,-19,-13,-40,-41,67,19,-1,50,-21,-127,9,41,44,19,-66,24,45,24,-109,-21,65,-5,-4,-53,12,11,-4,59,-14,4,27, -48,-8,-21,-98,-94,-2,-50,-99,-27,-32,2,-30,22,-35,3,-28,-76,-25,-38,-38,-61,-71,-23,6,-15,18,-91,-21,-4,-41,5,-80,-4,-17,-20,-14,-89,-113,-26,-2,-37,8,-10,45,12,-47,-5,-21,-30,29,11,-47,-16,-40,-8,-11,-50,-53,-6,-43,-50,-73,85,-23, -31,9,-33,-46,-56,7,-66,-47,-15,-31,-46,3,-4,-3,19,38,-75,-94,-30,-40,-66,-56,-7,-21,-28,9,-71,-19,-3,-13,-2,-4,-33,-95,15,21,-10,-19,11,-57,4,-34,-17,-29,1,-29,-9,-13,-20,-57,2,-15,20,4,-38,5,-24,-30,16,-38,4,-33,-27,-30, 
  /* [70][0][][] */ -18,-21,-20,22,51,56,9,43,-15,-31,47,-16,-12,-15,3,-41,65,45,94,19,-41,38,40,24,67,27,-37,41,-14,-11,39,-10,9,-52,39,-98,-35,-31,3,45,-101,19,67,-34,-15,12,16,38,25,49,-91,37,-40,10,70,-15,37,49,-55,24,8,-1,-53,30, 112,-10,15,-27,16,-2,27,-56,-11,-5,38,-6,7,-33,16,43,-69,-49,-56,-94,27,-56,-4,2,-62,-78,-40,-9,19,8,-17,-2,-31,-92,4,-34,-83,90,-92,-32,88,-98,-15,-21,-84,27,18,25,3,56,37,0,-36,75,-75,-14,-91,37,-54,-33,61,-75,0,-3, -20,20,-24,-6,10,-30,-42,30,6,-36,-50,80,-26,18,-3,7,-48,-82,3,48,-53,21,67,-5,-35,-127,78,-6,9,-46,-50,-3,-8,53,-13,6,-68,-78,-52,10,-8,-27,22,25,48,-91,25,0,14,-10,28,78,-15,-67,-39,-85,8,18,-104,14,-48,41,-20,61, 
  /* [71][0][][] */ 16,-5,-41,-41,-10,-21,-34,5,-11,-12,-27,1,20,6,-1,-7,-17,-28,-14,-1,-46,17,-19,-13,52,-1,11,-16,-28,-26,12,6,-16,16,9,-27,8,-21,8,-5,-20,-30,-16,-8,22,10,25,-22,-32,-35,23,-16,28,-6,3,-38,6,-38,26,-22,-21,-31,-20,21, 7,19,-8,-2,-41,7,-104,2,5,-42,-38,-34,20,-21,14,15,26,-4,2,-99,-14,-69,0,-8,-27,-50,0,-119,8,9,-22,21,-23,-108,12,-51,-8,-56,-44,-87,2,-28,-16,-17,-63,-17,12,-54,3,-15,-16,-5,11,-92,-20,-56,-97,-15,-24,-3,-42,-85,-56,27, -18,-8,-34,-58,10,-55,-83,-11,-9,-6,-48,-24,-13,-30,-7,9,-55,-37,6,-127,-32,-90,35,-11,-37,-63,-45,-40,-35,-6,-38,-53,-38,-73,15,59,-18,-102,12,-31,114,-2,-50,-58,13,-71,-4,-33,31,55,90,-73,-4,-22,-28,-74,-86,6,-51,-63,-42,-32,-68,12, 
  /* [72][0][][] */ -56,18,16,-13,-84,-71,-22,-79,-30,17,-86,-51,-4,-45,60,-1,-30,-22,-42,-119,-36,-54,-33,0,-42,-69,-76,-64,-67,-47,-58,-29,39,-53,-76,-8,-21,-43,-31,-29,-18,-10,-33,-68,6,-82,29,-37,10,-14,-77,-9,-42,3,-81,-8,-127,29,-3,13,-10,-84,4,-28, -1,-29,6,9,43,-32,-18,-69,-82,-9,11,26,-77,-74,-66,-41,-62,-17,-55,7,35,-79,15,-57,18,-45,-42,29,32,-70,22,-33,-20,-63,-31,-57,-73,20,-77,-35,-51,-38,-33,21,-10,-21,-31,-4,29,-40,-58,-19,-86,-26,-83,30,-29,39,3,-4,-45,13,16,-22, 40,-72,-40,-71,-72,26,-101,-36,-22,-10,-74,-7,44,47,15,-8,36,26,-21,10,-21,-70,-18,-37,53,-75,44,30,-42,-13,22,-4,32,-15,-70,21,-45,-13,41,21,-24,-50,-16,-67,-8,4,-30,-16,-27,20,-43,-109,-23,-11,-84,43,-7,-7,49,-59,31,-45,-59,-60, 
  /* [73][0][][] */ -6,8,3,-39,-4,-5,-4,1,2,37,12,-17,4,25,-7,-11,16,-23,-36,-72,-8,-26,-32,-1,-51,-23,-27,0,-2,-13,-9,-39,8,0,8,-52,2,127,-40,-6,-10,-2,-11,-31,12,-3,15,8,-10,47,-9,-9,23,60,-59,-50,-37,-13,-13,10,-50,7,-21,15, -36,7,-10,-9,7,-8,-22,19,-14,-43,15,14,-15,-4,3,-36,7,-73,31,22,14,-13,18,-19,39,20,10,16,-13,-11,2,0,-11,30,2,-23,-18,-8,-13,4,-31,36,-25,30,-65,26,0,33,-12,-20,2,31,-3,-9,40,2,-5,8,-48,8,-52,23,-21,-41, -20,-10,7,25,36,-65,68,12,-3,-14,3,10,-14,-6,-14,-39,-24,-59,-1,8,15,-9,30,2,-50,-51,0,50,-10,-9,21,-6,-5,1,8,-5,-47,-36,11,-4,-51,39,15,-6,-64,-4,-20,45,9,-28,9,11,22,-8,27,12,28,21,-13,-15,51,33,-14,-22, 
  /* [74][0][][] */ -11,9,15,22,-34,-8,41,-23,4,-22,-19,-4,-11,-11,0,-23,14,32,-36,15,-18,20,-10,5,2,52,-1,15,4,-3,-4,-30,-22,28,-23,70,2,-3,56,-1,-12,-48,41,3,-15,-3,-13,-7,-7,-36,36,27,29,-20,-26,-15,34,43,14,-10,-51,41,-21,20, 5,-6,-20,17,41,6,6,6,-11,-22,-3,-50,-4,13,1,-18,-43,-12,35,-3,-8,-12,-37,5,47,-62,-3,-33,-2,-15,-13,18,-29,27,11,-13,-19,2,27,-10,-41,4,-35,-22,-127,6,8,-4,-8,-10,-6,-25,-14,-12,-40,42,2,-8,-4,1,26,-9,-74,10, -46,10,-21,-33,28,-29,-6,-14,4,-11,4,-10,3,-48,-13,4,-8,30,1,-23,-9,-38,38,-9,46,-30,-45,-24,-3,-35,-43,-5,-3,-61,-8,11,38,-26,32,-4,-9,-27,-4,-43,-13,-36,-5,7,-4,39,48,35,-42,-12,-51,-20,-44,-28,-2,-12,36,-24,-41,6, 
  /* [75][0][][] */ -8,-3,21,23,55,-39,27,18,-15,44,38,-31,-21,31,-14,12,-39,53,72,56,-41,-61,0,5,28,-37,63,-10,5,-9,-57,5,1,-8,30,-26,16,-50,38,-60,9,62,49,-53,46,23,-15,17,18,-46,-48,51,-21,-35,-105,52,-19,30,47,-23,-16,18,-102,28, -8,-32,-23,-44,-57,12,-31,-8,26,-58,-1,-58,-2,36,29,39,39,-9,-72,12,11,-1,18,40,-127,-2,37,-25,11,-15,-1,-22,11,-94,-2,-39,-5,-33,-33,20,-12,11,-94,23,9,-4,-32,-58,11,1,-51,17,-38,-6,23,-24,-27,-8,37,40,29,-56,5,28, 33,23,-38,-29,23,51,7,-20,5,65,-17,-17,-15,-9,-11,-25,-3,68,24,-100,-31,12,-106,-2,17,75,-49,-97,10,9,12,29,8,-19,-9,30,-8,39,4,33,-79,-11,64,36,106,26,10,-97,6,51,-16,-43,23,33,-44,48,-28,-42,123,-43,-47,-38,32,-4, 
  /* [76][0][][] */ 20,-8,14,-9,12,29,25,-8,6,-15,26,-50,-9,71,5,55,16,-1,54,12,28,9,29,22,-21,-23,-11,-35,21,27,-8,46,10,-45,30,-102,20,-20,-12,-39,-38,-13,-1,13,47,-69,0,2,8,59,-39,29,-43,32,27,12,-37,-32,47,-30,-4,-127,-95,-14, 49,10,-42,-19,28,50,-88,17,-8,5,-2,-19,-13,-13,22,9,-12,33,-10,4,11,37,31,-34,-74,-21,-1,-31,11,17,21,-53,3,-34,10,-58,2,56,-26,17,-70,-4,-77,18,-47,37,30,-54,-10,30,-65,-70,-68,33,-26,18,-18,-11,-38,63,-23,-70,55,-15, -43,5,7,-25,-10,-61,78,-10,17,15,-23,-3,-13,-21,6,11,-34,37,-50,-79,-12,-65,-64,-12,-69,-3,-22,-39,25,2,-31,13,24,-47,4,34,72,3,-9,-31,-62,2,51,-19,-13,-20,-8,-88,5,55,-20,-37,17,-73,-57,4,-12,-14,89,-115,-24,-66,-55,-13, 
  /* [77][0][][] */ -19,-6,-45,10,-13,-29,-56,-39,-9,-58,-69,-9,4,-26,2,12,-49,-16,0,-21,-12,-75,46,20,-59,22,-17,-14,20,-16,2,-41,13,-56,2,-27,14,-61,11,8,4,7,-31,-40,-27,-20,-15,-46,-23,10,2,-33,-13,15,-47,-22,-23,-24,-28,-67,-40,-59,-50,10, -22,5,5,-25,22,-40,-18,-31,11,-16,-22,-28,-6,-70,-7,24,-52,17,-6,-7,-48,-66,-39,-18,9,12,-36,-40,-4,7,-30,-13,-27,-12,-9,25,0,-17,25,-20,-6,6,12,-43,-26,-59,-10,-64,7,-30,-7,-59,19,-7,-28,20,11,41,1,-19,-66,-34,-64,0, -20,-16,7,-71,-62,-3,10,1,5,-6,-107,-32,-2,-63,12,-37,-127,-24,-37,19,-63,39,-25,-14,-25,6,-13,19,1,6,-24,33,-14,-13,-5,44,-12,-30,6,-25,-15,-12,3,-74,-22,-62,0,-11,-11,-8,43,-63,-3,-20,-59,-50,-14,1,-5,-39,4,4,-49,-12, 
  /* [78][0][][] */ -12,4,31,74,-22,-19,47,0,2,35,0,29,-6,17,5,34,0,88,-29,0,16,15,-6,-15,-31,85,29,33,0,-22,1,-34,-5,-12,5,127,3,-35,69,-21,17,-36,59,-1,58,-44,-8,-25,-11,-11,36,27,97,-46,-10,7,-7,23,48,27,-68,27,-8,-40, -12,-19,-45,-6,28,20,8,3,2,11,36,-28,-31,-4,46,15,8,40,0,-43,-62,-36,-22,4,29,7,-10,-106,21,7,-27,-67,13,38,34,68,35,-18,83,22,-22,-12,-16,7,-43,38,-15,-16,-5,-64,3,13,31,-21,-86,32,-15,20,-2,0,-34,-71,-24,-25, -16,23,27,6,-1,-45,-6,0,-24,7,-18,-21,-46,-9,37,32,-46,25,-45,-55,-22,-54,63,17,64,16,-27,53,-2,8,-37,-23,-6,-32,22,82,38,-76,1,15,2,-34,-38,-7,-27,-52,19,4,-8,2,-2,-28,-42,-43,-9,-27,-35,-17,11,-77,-8,19,-43,-2, 
  /* [79][0][][] */ -6,-1,-49,-41,11,12,-21,4,-7,-41,21,15,-7,-8,3,-42,-4,-20,12,14,7,4,-15,15,28,18,-28,-20,9,-12,3,-29,11,15,2,-23,-33,-39,10,48,-127,-17,-38,20,-36,3,7,-21,-18,19,-48,-7,-10,-57,27,-1,-7,-8,-24,-11,-23,19,44,4, 9,3,29,29,22,-56,35,-40,-9,19,4,-27,2,9,-17,-22,-29,-22,-34,-77,-2,-26,-11,-14,-15,3,-6,12,6,-21,-49,-6,3,-6,-8,-51,-4,49,4,-13,-47,-17,-2,-47,-13,-34,47,33,8,-18,21,-31,27,-38,13,-21,-46,3,-23,-64,-18,-66,-57,-24, 36,-5,-27,19,-38,41,0,38,10,28,17,52,-16,-24,2,-14,-39,-94,27,9,-14,18,2,0,35,-3,-65,17,6,-7,27,-53,13,28,2,58,0,17,-20,-5,16,-32,26,-2,-14,36,-1,24,16,-81,80,23,-28,32,-31,1,9,1,-26,30,-35,10,-1,12, 
  /* [80][0][][] */ -45,26,-101,-48,-54,-45,61,-43,8,-46,-12,-4,1,-9,29,27,1,-66,-67,1,76,-14,-28,-30,-64,-12,-47,35,5,-20,-37,24,-31,8,-7,-12,-18,-18,7,-44,26,1,-106,12,-28,-16,26,-63,6,2,-30,1,-35,98,18,12,6,-14,16,-9,30,31,-8,-39, -37,-33,-57,-41,-25,-49,-52,-15,14,-81,-60,-24,-3,-8,-6,-35,-49,-5,-15,-46,-36,-72,-29,-24,23,-46,-37,-78,-33,-51,-12,-34,23,-81,-34,25,-19,-127,43,-35,-21,-16,-40,-39,-35,-81,7,-15,-32,-60,-49,-22,10,-49,-19,-55,-95,-18,-35,-82,-40,-78,-74,-21, -44,-2,-32,-9,-18,6,-62,-47,2,-23,-50,28,-52,30,31,-40,44,-41,-80,-19,23,-29,-37,-34,27,-85,-48,-76,-47,-71,-26,21,12,-61,9,43,18,-53,-51,-40,16,21,-16,-8,-21,-6,-12,45,-7,-25,-34,-45,-29,6,-52,-57,-80,-97,72,17,-21,-22,10,-37, 
  /* [81][0][][] */ -12,-13,12,6,5,18,26,-4,13,25,-31,-17,-30,15,-13,6,-44,-20,8,-93,-52,-107,-25,-2,48,10,-12,-5,6,-33,-37,-27,-6,-108,-14,58,14,-70,74,-29,-20,-15,34,-26,127,-69,14,-9,14,37,28,32,2,-18,-52,-60,3,10,-31,-41,-28,-43,-22,-19, -23,-34,19,-4,-32,-11,16,-11,-10,12,-47,-12,-10,27,10,-13,16,31,-29,31,9,-24,-79,1,-45,2,28,-26,-14,-8,12,26,-13,-16,-5,11,-12,-32,-30,-27,-91,10,-14,4,0,-52,-15,-12,7,7,-32,17,-9,-17,16,-23,-49,-38,52,-2,-5,-9,-22,17, 15,0,-18,27,-1,22,-6,5,3,38,-16,47,3,-8,9,-29,28,2,30,5,21,4,-93,-4,-3,2,5,-22,8,7,8,12,5,-13,25,-2,4,2,-34,29,-38,39,17,40,-3,38,6,-44,-10,26,-9,-52,-13,22,14,24,20,-9,5,-23,2,-38,90,7, 
  /* [82][0][][] */ -2,90,34,82,-126,84,12,39,-21,-82,25,16,11,18,48,-7,29,-17,-88,-17,16,16,63,34,-105,-67,-18,-89,-41,-29,-89,-45,-20,-47,-1,-85,-90,81,-88,-74,-75,51,-81,-46,40,-90,87,6,-52,-96,-3,-57,37,-68,-85,-52,6,-38,-7,-102,3,-77,-57,9, -33,-93,22,-83,30,-13,-49,-33,-30,48,-117,-20,-45,19,-5,-14,-76,-35,-56,8,-40,-26,3,26,-41,-113,-8,3,-39,2,-127,38,-15,-3,-66,83,83,-59,-58,46,-118,9,-82,-109,-46,-46,-63,-101,32,48,8,-17,35,-78,-59,10,15,6,-65,-61,-3,-24,-99,55, -14,-24,36,-39,-4,-75,-29,-60,-63,-12,-43,-60,31,-63,8,-43,-16,-16,2,-74,-48,-9,-60,49,-35,-72,4,-73,-14,-31,-74,54,-90,-4,-47,-5,-77,-36,76,-82,64,22,-16,-47,39,10,19,-66,56,-49,-19,-33,-32,6,-62,-57,-24,-59,-73,36,-42,-50,-5,-43, 
  /* [83][0][][] */ 1,7,-38,11,10,2,-5,41,2,37,34,-27,-33,2,-24,-18,21,6,60,42,16,28,31,-9,44,53,-23,17,-22,2,-26,-48,8,16,-10,-11,-2,-15,-25,20,-80,-31,-25,-45,-65,24,-2,10,-10,-18,-23,44,-62,-8,5,-21,23,26,-34,-11,26,24,-49,9, 6,20,-3,7,-36,-4,-2,-27,-21,-11,-13,-13,-21,23,-15,3,9,4,-55,-57,16,-73,11,1,-41,-70,-14,41,-14,-3,-26,-49,-22,-15,3,-73,-67,36,-19,-3,-31,5,-29,-24,-55,-71,10,30,2,34,-33,-22,-37,-4,-39,-19,-29,14,-28,-59,77,-9,25,6, -9,0,-19,-3,-14,18,-66,-10,-16,8,-8,8,16,-9,-14,-40,-39,-127,0,33,-15,1,18,-5,2,-110,37,32,-11,-15,-58,-1,-23,39,-35,9,-36,-6,-21,-6,-34,27,-14,2,24,-7,9,-18,-7,-63,3,0,-36,-75,7,-7,20,-10,-40,-2,-20,35,-20,30, 
  /* [84][0][][] */ 3,3,-44,27,75,-17,-90,45,13,46,20,-48,17,36,-4,-23,5,-1,22,80,9,-28,-2,3,45,19,35,22,0,33,-18,-23,14,64,28,-16,52,6,-50,16,-26,-48,-75,-29,-71,29,-4,-17,10,-15,-92,2,-28,-65,-92,65,44,56,-30,-37,-9,32,-105,-11, -18,0,-10,-27,-30,-21,-102,-4,-9,39,-48,-36,0,-23,-23,14,2,35,-87,-71,-14,7,29,-2,-21,-55,-44,-51,13,4,-60,-9,-7,-38,-3,15,6,18,-98,10,40,-36,-127,-36,39,-111,-2,-7,10,35,-69,-61,-29,40,-44,-82,-57,-26,-20,-69,39,-17,-18,-34, -26,-3,-53,-42,20,-62,-76,-21,0,-90,-9,31,-2,-36,-14,-9,-28,-90,27,-24,-63,-22,33,17,2,4,-86,-32,-17,1,-73,-84,1,29,9,-43,-37,-52,23,-21,-18,25,24,-70,0,-84,0,-6,-17,-35,-21,-51,-39,-22,-15,-95,-15,5,-64,-21,23,-33,-36,-37, 
  /* [85][0][][] */ 12,-4,-28,-29,10,41,-25,-34,-6,18,-3,28,22,18,-2,44,19,65,-20,-50,-18,-15,49,6,-67,-9,23,-9,-7,-35,22,27,-5,-46,0,-49,88,30,-37,-119,49,20,-15,7,98,6,-5,-27,-12,53,-64,-3,9,45,-5,-17,8,-91,21,-24,-20,15,-11,5, 5,2,-1,-10,-8,-1,-7,5,4,-33,-31,-1,-6,-4,4,9,-22,36,-24,-24,-3,-39,-1,5,6,26,-4,-79,-6,-12,7,20,8,-61,-30,38,48,-60,51,-21,-78,-43,-6,-49,-9,-15,32,-8,-5,19,14,-7,-21,-80,-67,-15,-6,-21,-36,-25,-45,-66,-52,5, -38,20,-5,-23,-65,-10,51,44,0,6,-17,-1,-7,-17,2,-18,-12,73,6,-11,-7,16,-23,13,29,47,-45,66,-8,11,-11,-69,16,39,13,127,17,-61,12,4,-40,-33,-8,40,10,-13,-14,35,-14,40,41,-49,20,2,-33,6,-9,38,15,-3,-32,31,-21,16, 
  /* [86][0][][] */ 11,0,-20,-37,-13,-49,14,-8,29,-54,-10,-55,4,18,-2,4,23,-21,-46,11,-13,-48,-51,2,-47,-22,14,31,19,29,-46,-2,-37,-23,21,30,-14,-31,18,-19,1,-42,-20,-43,-25,-54,-14,-32,-21,29,-19,-30,-27,-35,-2,-36,8,-20,20,-41,-59,-17,2,8, -16,40,8,-19,-94,-73,4,-37,-30,-68,-36,-72,-35,-77,-6,24,-22,-42,-15,-43,8,16,28,40,-62,-30,-4,-12,-34,-71,-36,3,-33,-8,21,-44,-79,-86,14,-47,-51,-28,-6,5,13,3,55,16,-52,-53,-6,-1,40,16,-54,-58,0,12,-76,-16,-127,-53,15,-49, 25,-48,27,15,4,37,-16,-66,-42,-1,-63,5,49,-40,-37,-10,-32,-21,-47,-50,-61,13,-9,-22,-84,-35,-64,-6,4,-31,-60,-61,-41,-33,14,-31,-25,-44,19,25,-74,-20,11,-40,7,-32,1,-50,23,-15,-37,-1,-18,66,-57,-21,-54,-31,-42,-54,-46,-42,-36,-34, 
  /* [87][0][][] */ -51,-10,-47,-72,-18,-86,-14,-26,-9,-47,-15,11,-14,84,8,3,61,-98,-65,2,-40,-24,-66,-21,-55,-23,-9,-18,24,-22,-24,-53,18,-24,20,56,-41,-65,63,-37,60,-7,-2,-90,-25,-29,18,-28,9,5,34,-127,-27,81,-35,-83,-44,-4,-117,-17,-67,-74,-25,-10, 11,-6,-38,-66,-9,6,-29,-58,9,-12,-51,-22,13,-11,-7,-29,-51,-21,3,-94,-1,-115,-50,1,-26,-10,-80,-38,19,-38,-5,-33,-14,-15,30,-29,4,-16,11,-14,10,-7,-65,-28,4,-54,27,-17,-32,-21,-20,-26,-27,-13,-20,-26,-50,-31,35,-52,-63,-83,1,-3, -60,18,-1,9,-54,-6,-10,-39,-41,-7,-2,-45,3,-48,-43,-14,-37,3,-32,-64,-71,-33,-29,-3,-42,-10,-22,-72,-22,-12,16,5,9,-69,-31,-38,-37,-74,8,-14,-4,0,-23,-19,-44,-4,1,-70,-33,-10,-13,16,-12,-32,-104,-51,-14,-41,-5,-28,0,-79,-34,15, 
  /* [88][0][][] */ -23,-34,-26,-42,14,-13,-33,-38,-40,14,-12,12,21,-35,17,-37,-32,-5,-34,-9,-29,-14,-15,-31,-37,-24,-45,11,14,0,-9,-38,16,-13,-36,-16,7,-20,6,-4,-44,7,-26,-26,-12,-18,18,-33,-22,-30,10,-6,-41,-22,-9,5,-39,7,3,-13,-60,-5,-18,-14, 40,18,-96,-16,-60,3,-86,-64,-38,-9,-68,12,10,9,-27,-25,-56,-49,-45,-17,-12,-15,-39,-6,-15,-65,-38,-59,19,-39,-47,71,-6,-80,-4,38,2,-21,-48,-27,-15,-5,12,-34,-36,-30,11,-88,2,-65,-37,-74,-11,-39,-57,-39,-41,-81,-10,-57,23,-87,-26,-18, 21,21,-25,2,-68,-21,-10,-46,4,-20,-46,67,-31,-29,-15,-13,55,-12,-76,-63,10,-16,68,27,-32,3,-16,-68,5,-26,-49,127,-26,-24,-5,67,-55,57,16,-1,-61,-17,18,-13,16,18,-24,-10,15,26,32,7,-17,-6,14,-45,-77,-32,8,-43,117,-64,-22,-10, 
  /* [89][0][][] */ 11,-18,-9,15,38,-28,-21,9,1,-60,41,-7,11,50,-3,-48,25,-31,-2,-49,0,-29,-127,-16,-3,-36,1,-32,-4,5,-29,33,15,55,3,-52,13,33,-33,29,-39,45,-43,-39,-39,-5,-21,22,-1,-2,-48,-9,-34,-32,-72,-37,-27,30,-75,42,60,-18,-33,-12, -31,-3,38,-3,-24,-39,-41,19,-9,-21,-20,-44,8,2,9,-33,-11,-2,-32,4,-8,14,38,-5,-21,-12,-41,-4,7,-13,-24,-29,6,4,-15,-13,-30,-44,17,22,-70,6,-7,27,-32,0,-20,27,-16,-64,-3,55,10,57,8,-82,-9,-16,-28,-4,0,28,-27,-72, -2,5,-21,-21,-12,-5,-26,14,-19,-50,18,-20,2,-38,-26,-16,-52,-60,-5,-5,-48,8,17,9,21,-24,-32,5,15,-19,-26,-39,4,0,26,-11,-79,-33,2,-35,94,7,-61,-23,17,42,-16,0,-20,-19,-88,-19,-11,34,-124,17,6,9,11,61,8,10,-44,53, 
  /* [90][0][][] */ -14,14,-10,-49,-14,4,-21,11,-5,-39,5,-47,-9,-25,-17,-2,26,15,-45,-63,-16,6,-65,-22,18,-43,-52,-74,-6,6,-35,-39,14,-75,-6,-32,8,-82,-16,-26,-56,-26,-7,-39,20,-43,-5,32,6,4,-9,3,-70,20,17,-7,-39,14,-60,16,26,-21,13,-5, -3,-15,13,-26,-16,-34,73,30,-12,50,-13,11,-5,-26,-5,-5,-8,11,-45,13,-31,33,44,9,-44,81,-17,49,-12,-20,-61,-37,0,29,9,59,27,-38,32,-25,-48,-48,19,29,-11,21,-42,-9,-3,-25,23,11,1,-19,-41,19,-1,-6,19,-28,-100,90,-35,14, 37,30,-63,-38,37,-33,-127,17,-15,-69,50,-26,-47,-28,-4,0,-60,-95,32,-17,-103,-25,55,14,46,-61,-56,-124,28,12,-28,-73,33,9,35,-68,-36,8,30,15,-72,15,-54,-52,-109,46,8,-37,-9,-48,-67,36,14,18,-3,66,13,-10,-43,18,18,-83,-68,-9, 
  /* [91][0][][] */ -24,-1,7,9,6,51,-48,37,5,46,26,-30,17,11,-5,-30,74,29,72,20,41,23,66,15,106,3,-25,41,-3,23,-11,-55,18,-27,8,-120,42,-29,-1,26,-81,7,4,-14,-31,42,5,-10,7,44,-116,54,-16,27,35,-8,18,-6,-28,11,24,0,0,-7, 5,20,-6,8,1,17,-79,-29,0,34,1,46,-10,-10,-15,30,1,29,-52,-77,28,-47,38,-9,-74,-35,5,-9,-15,3,24,-54,5,-48,10,-10,-22,77,-72,-18,73,-50,-49,-11,-87,8,60,20,-8,88,10,-27,8,127,-10,18,-29,-17,40,-5,50,-64,7,-12, -66,29,-20,43,-20,20,40,10,15,-7,-4,-1,17,-23,-4,-43,-6,-19,0,13,9,-8,5,-17,9,-46,76,30,11,-10,-68,49,0,37,-15,-27,-6,-10,-26,-22,-46,-9,26,-1,41,-1,-11,23,3,7,-52,-8,-9,-77,-47,-47,21,-17,-27,9,-17,10,-6,59, 
  /* [92][0][][] */ -6,-6,-8,-14,-19,-7,35,-11,0,-27,-11,-13,7,-22,-11,-17,24,68,-36,-32,29,37,-5,-9,86,102,1,-7,10,7,-3,-17,-1,-59,-5,67,13,-48,42,10,-71,-1,5,-8,-18,8,10,-42,4,4,19,-18,-1,-3,-51,-37,-6,38,-16,20,-8,32,-19,1, -8,5,-4,9,29,-6,-6,-28,7,11,10,19,-17,17,24,27,6,-24,-8,-1,-4,-17,-56,12,-61,-29,37,-11,5,7,-25,-27,11,30,-11,-36,10,-18,-7,-5,0,9,-28,-22,-6,14,17,7,-4,14,-21,-7,-37,4,-48,63,8,3,-6,-7,-38,3,-53,-9, -7,-2,47,45,24,-79,7,5,-15,27,-2,13,-3,-44,5,-5,-47,-31,20,-15,-41,-22,71,9,127,11,-65,34,8,4,-25,-45,13,-80,-27,70,27,-30,27,26,-45,-28,12,-43,34,-64,-38,6,-8,-14,27,23,11,-48,88,-45,-67,13,-41,-53,4,6,-30,-5, 
  /* [93][0][][] */ -18,-30,-9,-17,37,-60,-1,18,-7,-72,5,36,2,-32,-9,-7,-83,55,31,-16,-51,0,-28,5,-20,-44,-59,-6,-16,0,16,-116,15,-17,-6,-24,-37,-42,24,-21,-63,-13,-5,-13,-8,-17,-26,-47,-15,-13,22,47,-18,-116,11,29,-7,6,-73,10,-23,8,-65,12, -63,-17,-33,-25,-45,-35,-73,27,11,-105,4,-38,-11,-9,-3,39,28,127,87,32,-35,25,81,-10,32,57,-58,-56,17,21,21,8,16,-96,23,18,-67,-9,-34,26,-1,-28,-89,-13,110,-7,-33,24,1,-41,52,14,20,45,95,-95,2,50,-96,42,26,-29,10,39, -74,-3,-14,18,-24,-117,-56,4,25,-85,20,-26,-7,-33,5,-12,-34,-65,-77,-104,-5,-82,-33,-13,8,-68,-30,-40,-2,1,-101,-83,-16,-49,-27,-25,-13,-125,-18,-42,51,-10,-45,-95,-39,-35,-29,51,-11,-64,9,-33,-21,66,-73,-54,-71,-36,-107,-6,27,-53,-51,22, 
  /* [94][0][][] */ -55,-51,22,21,-29,-40,25,51,16,-6,-20,-39,-46,24,22,7,-56,13,8,-28,30,-23,-82,28,90,-45,-50,25,-2,45,-40,-32,21,-71,31,22,-31,-71,-34,-2,63,27,42,-2,81,-35,5,16,-48,-46,-82,21,35,120,-52,4,-81,-31,23,6,72,23,-23,35, -3,-42,-46,-54,-24,-40,-72,39,-57,-69,-61,18,-64,-3,44,42,-23,-45,-77,-10,-24,-29,104,24,-113,1,-57,-32,22,-21,-7,-57,-51,-1,-42,22,-11,-98,-28,1,88,38,-120,-9,-2,-14,-3,-49,54,-19,-26,-1,5,-22,-46,-18,17,-75,-109,-7,-31,0,15,-32, -4,2,-8,24,27,-13,-1,-28,-3,31,9,-28,-35,-41,28,-2,38,-71,-60,-27,-5,-88,15,-31,-30,23,-34,42,-7,-54,-55,-8,28,20,1,25,-7,52,78,-10,-127,-41,4,-12,101,21,32,-15,-11,39,28,-11,-17,-104,-49,-38,-10,-24,82,-20,-80,1,-53,-92, 
  /* [95][0][][] */ -14,-5,-12,23,-11,-35,-47,-6,-20,28,-34,-19,5,-21,17,-52,-89,-8,-66,-5,35,-68,39,-11,-43,7,17,-41,4,-26,16,-2,-16,10,-15,-14,49,20,6,-11,73,23,13,-32,26,-29,-5,-31,10,16,86,-46,21,94,-33,-24,-25,56,2,-13,97,-57,10,-4, -28,-3,16,127,28,-67,27,-35,3,-38,-17,-6,-7,9,11,19,-45,4,-65,-14,6,-24,-1,17,-11,46,88,-38,-3,-40,-56,7,-17,-43,-26,11,6,-79,25,-24,-29,-11,40,38,73,-61,28,-19,21,45,10,-13,3,-98,59,-34,-6,-31,0,-57,68,-54,20,43, -23,10,-24,-7,-29,14,6,13,20,26,-18,17,6,5,-11,2,-30,14,3,49,-55,32,-82,2,13,-31,-24,-38,3,8,-7,-26,-6,48,9,-24,46,8,-44,5,-36,-5,-16,15,-34,43,18,38,0,-22,-110,-18,-25,-27,-41,48,-1,0,27,97,-59,-33,-10,8, 
  /* [96][0][][] */ 15,-4,-25,-32,0,38,-13,-11,3,-19,-22,72,3,-27,23,-2,19,-1,-21,-78,23,-56,-40,8,69,72,-62,-76,12,-7,-6,6,-31,-84,-9,29,24,-14,1,7,-58,9,9,-13,32,-6,28,-58,11,110,82,-25,64,19,-25,27,4,-4,-26,-33,-8,-48,32,9, 24,-9,-3,70,-26,14,17,-22,5,31,-57,-66,15,39,24,-23,-5,6,-22,12,-28,-19,-49,7,-28,-22,49,5,-3,3,-57,9,-5,12,-24,23,1,-26,-53,-30,-7,-67,31,-5,-112,-49,-4,32,6,8,-52,-80,38,-5,-110,19,36,29,-20,-35,-26,37,-74,-13, -35,5,-31,-42,48,6,-127,20,-2,34,-1,-2,-10,-31,-13,-29,-13,18,29,-4,-116,-105,67,0,65,-9,-41,-39,-6,22,-30,-78,-21,38,22,-96,39,4,24,33,-21,8,-87,-96,15,5,-16,-26,-7,-26,-100,-38,31,45,-53,67,-10,-40,19,-57,9,-10,-90,17, 
  /* [97][0][][] */ -79,-3,-34,-54,25,-51,36,51,5,-18,11,-46,1,-47,6,-61,-29,-19,114,-32,-63,23,88,-6,93,-33,-67,62,-17,7,-85,26,-15,-25,0,-17,7,-39,-56,23,-73,38,7,-51,-8,9,2,62,5,-92,-49,41,-38,-26,79,-48,2,59,-92,17,18,37,-65,9, 47,-25,52,10,-56,102,-53,-54,3,-15,21,-61,5,13,-9,37,-85,-12,-57,-67,17,-41,-38,-11,-72,-119,24,-35,8,-10,5,-56,-27,-6,-31,-67,-127,112,-19,-48,45,7,-74,-70,-5,5,0,41,-15,-63,-13,40,-11,39,-85,-33,-28,-72,-59,46,29,-46,-1,-8, 29,30,-62,19,7,-16,14,-16,-22,23,18,43,-19,33,6,-16,-15,-111,20,28,-65,-16,61,-6,-5,-45,9,28,5,-11,-34,51,0,37,5,-33,10,-68,-37,19,-1,79,-27,-21,26,-2,-1,29,12,-20,-64,76,16,54,-56,-43,-4,-15,6,39,-1,16,-59,44, 
  /* [98][0][][] */ -1,8,-20,44,-11,90,12,-26,-2,35,-6,29,-3,-6,24,-14,39,84,-18,-17,23,37,-28,26,-42,40,28,14,-14,3,5,10,3,4,0,26,54,53,-59,25,-44,8,-33,44,26,40,3,-53,22,58,-12,-16,9,35,11,-3,8,-30,33,-5,-34,43,27,4, 24,-5,-25,-22,20,4,2,2,-15,33,1,17,-23,-12,-7,-16,6,9,10,-47,18,-23,-38,6,-98,-69,7,-62,20,4,-44,76,5,-15,21,-8,51,8,-26,7,-44,53,26,-33,16,7,15,-47,21,21,-33,-19,-12,-11,-23,5,-22,9,85,-38,-32,-27,4,-38, -10,14,-17,59,5,15,-29,1,-6,20,-28,50,-26,17,-1,8,21,127,25,-81,10,-30,-66,23,79,89,-5,-77,20,-14,-41,7,28,-1,-33,90,19,46,65,3,-47,-22,-25,-24,-25,32,38,-30,-18,11,-26,-63,-5,8,-107,47,-42,28,-9,-3,-24,-78,-3,-55, 
  /* [99][0][][] */ -19,-11,20,3,25,-31,19,27,34,21,-14,-89,-16,-23,-17,-45,-19,3,-10,-22,-72,-6,-9,-6,-24,-27,9,45,8,-35,-28,-8,42,35,12,52,-13,-55,-8,-20,-14,2,16,26,36,-64,-17,-12,11,1,7,4,26,-33,-93,-36,2,32,12,22,-14,26,-100,15, -31,-35,-17,-45,16,-10,-30,-39,-16,-23,4,-18,-59,-55,-21,32,-75,-35,-34,-41,-80,-56,13,12,-1,-49,-84,-66,2,-21,-27,-17,-16,-15,32,-55,-4,8,78,-48,-64,-4,-8,-27,-54,-10,-47,-24,-16,2,15,-13,127,41,-26,28,-54,-20,5,-21,-57,-39,-57,-8, 1,-4,26,-81,38,-28,30,-37,-2,57,-14,-3,-36,-37,37,14,-65,5,21,-43,-43,31,23,-13,84,10,-59,14,-14,-25,7,-40,11,-51,-23,45,64,-32,106,4,61,-15,6,-41,44,-4,-6,47,-20,64,55,21,37,67,9,-85,-28,0,-46,-23,26,-22,-40,-9, 
  /* [100][0][][] */ 60,12,16,52,38,42,14,-10,-17,90,13,-70,19,63,21,-8,-45,64,81,25,40,-110,91,-30,77,2,49,-44,-14,4,-46,58,28,11,29,-27,86,1,-37,-40,-96,-42,-48,-64,57,-35,20,-40,8,54,-75,70,2,33,-92,56,-8,-30,92,23,82,-29,-88,-28, -26,30,-34,2,-30,34,15,6,5,-22,12,17,-3,-15,-21,-9,82,78,-18,24,53,-36,78,8,-68,32,62,21,19,-25,47,-39,-33,-66,-34,-9,23,-52,-52,53,-88,-5,-11,50,94,-59,11,-119,12,54,-13,-48,-66,2,75,-41,-39,-9,38,14,-78,-31,80,18, 5,22,40,38,45,37,-53,-19,14,127,12,-9,-2,-37,0,-39,-49,-44,-26,-117,-51,-45,-117,7,-15,-100,-25,-68,32,3,-22,107,8,3,-16,-123,84,90,-32,4,-94,28,-2,6,-32,67,-18,-30,17,37,-84,-55,-36,41,-10,29,-15,20,-21,-127,-46,-12,-23,-18, 
  /* [101][0][][] */ 31,-1,25,68,-40,-34,37,41,6,-33,5,19,-30,14,-9,14,5,50,5,51,-36,10,-30,13,-83,-5,24,65,0,-11,-5,43,-9,30,-9,-5,-3,10,-21,5,-32,-24,13,46,-5,-7,-13,-3,-14,-11,-20,-6,83,-49,-31,27,40,31,47,8,-50,93,6,7, -41,31,-32,-11,20,-8,-87,11,18,-23,8,-47,-11,-18,-11,16,-72,-111,63,-40,-69,-70,44,11,14,-5,-71,-96,20,-12,-48,-37,0,-25,7,-30,-15,-17,24,16,-118,7,-58,-33,-48,13,15,10,7,-53,13,2,4,-53,-22,14,-44,-23,-1,-47,15,-26,-82,-1, -53,3,7,-127,-34,-46,-14,-2,6,-74,-45,-32,1,-67,12,63,-114,-67,-33,4,-22,-4,7,4,32,2,-88,42,-15,-54,-10,-49,-24,-60,-17,-32,23,-24,13,8,-12,-15,-121,2,2,-24,-16,-15,17,-49,-65,-53,16,-72,1,-57,-11,-16,-56,30,-47,-9,2,46, 
  /* [102][0][][] */ -18,9,-10,-5,6,-61,4,-12,8,10,-34,-18,-17,-22,9,40,-55,-100,-23,23,-45,-27,96,10,-90,-23,35,-11,-20,-3,-23,4,-30,-42,22,-47,-37,6,-12,-9,127,7,-42,-34,20,-34,7,-55,-23,13,-77,-17,-42,21,-20,-46,-47,-48,-89,-12,-6,-37,34,10, 3,-4,0,-53,-46,10,-86,11,-17,1,-9,5,11,-12,8,-71,-17,-73,26,-29,-60,-24,-7,16,-34,-20,5,-16,-23,-14,-40,1,10,13,-13,-13,-12,-19,-19,-2,11,-6,6,-24,-47,-5,-4,-37,-7,6,4,-20,-77,-30,-88,-29,-1,-30,-61,-4,-66,-43,-30,-52, -21,-12,-30,11,9,-17,31,-41,5,-20,-23,7,-46,-10,-8,-70,12,-10,-69,-44,7,-29,84,8,-41,-31,12,16,-20,4,-20,97,-28,-8,-59,16,-70,-31,-88,-12,-85,-22,-20,-30,67,-42,12,-58,9,75,-24,-28,-15,-7,17,-61,-75,-66,66,-31,57,4,30,37, 
  /* [103][0][][] */ 34,12,5,14,-9,45,-76,-12,-3,-52,11,35,-9,7,-12,46,-30,-86,-5,-64,-65,-1,-49,-4,-110,-76,-36,-16,-26,7,-45,-19,-13,62,-15,-37,-74,59,-83,-44,12,-111,8,-19,9,-22,47,55,14,-38,-23,-19,-35,-38,-58,-94,30,-3,-37,-12,12,27,-9,-28, -32,-18,-69,-6,-91,19,-8,16,26,-12,-57,34,-7,44,-28,-20,-8,51,18,49,-11,-6,6,14,-82,-26,-20,12,-30,-26,-14,-29,-27,14,-5,-15,35,-20,-58,-30,-46,-11,-120,-11,72,-35,26,-76,-10,88,-127,55,4,7,-55,-45,-33,-24,54,-16,-4,21,-57,-54, 20,33,-75,-42,10,16,-21,-29,12,34,4,58,-9,0,7,-13,-5,49,23,-99,-8,-51,-32,15,55,-10,32,-52,4,7,1,15,8,-57,11,-34,-10,-44,74,-5,-69,7,-18,29,119,-21,-6,14,-5,47,-1,-98,7,-43,-30,20,-11,-4,-27,-50,-57,-45,3,-26, 
  /* [104][0][][] */ -17,5,7,-48,-31,24,64,-62,-7,-40,-22,-30,-4,-46,0,-22,32,-27,0,3,8,-52,-44,8,9,-33,-7,-19,-1,-4,-38,-37,8,-23,-8,-63,-29,-8,-56,-46,-44,34,-12,-45,-44,-19,-14,-32,-1,0,-47,1,24,-27,17,-19,-59,-68,-29,-23,-23,-52,-29,7, -72,-9,31,23,24,-30,-68,9,4,-29,35,-88,2,-2,-6,-30,33,53,50,-31,1,5,-13,-12,35,-27,0,-44,5,-10,-6,-10,0,-37,-1,13,-29,11,-43,14,34,-1,-2,-49,6,17,-20,16,-11,-27,-33,23,49,17,52,-26,-125,32,-13,30,10,-37,38,2, -41,1,15,17,36,-19,-55,32,-1,-6,18,21,8,-43,-5,-15,-20,-20,-54,-38,24,-32,3,-5,-68,29,-11,-44,-12,-22,-21,-42,0,-25,-12,-45,-37,-16,-21,-45,1,-31,-17,-39,-86,6,-6,23,1,-50,9,10,-34,127,-21,-45,-63,-3,-45,-20,74,-35,-4,14, 
  /* [105][0][][] */ 3,-15,-16,36,-45,51,7,-9,15,90,-20,14,24,-1,0,-8,19,90,-18,8,34,-31,1,12,-38,5,37,-13,-12,7,0,88,-17,-10,11,5,65,-21,-37,-33,-30,16,-17,-4,4,-28,20,-49,27,55,-77,-35,2,55,-19,-19,-26,-54,111,-4,40,8,-1,-13, 4,-8,-17,18,16,-5,-19,-12,-19,16,-19,28,25,-3,36,22,22,35,-10,-49,25,21,-69,14,-83,-9,25,-6,7,-17,-39,75,9,-11,2,60,-33,-66,-13,17,-111,57,14,48,15,-35,-14,-31,18,57,-36,6,48,-52,7,-10,-35,-21,-19,-47,-62,7,-10,-10, 80,-14,-26,-11,13,66,-25,-32,10,127,8,-93,-10,-15,15,-70,13,92,-34,-73,-15,-11,-23,6,-9,-7,-26,-104,27,10,-35,65,-2,24,-20,-44,79,87,0,-18,-37,-11,-19,-3,-5,36,6,-67,20,57,-84,-23,70,72,-113,51,18,-39,29,-19,-34,-55,-43,31, 
  /* [106][0][][] */ -75,-45,-67,0,12,15,0,51,-21,-78,-46,-3,-94,75,-79,45,-71,29,15,5,44,-79,-76,-12,15,41,-46,-54,-23,-94,18,-31,-29,28,11,49,39,-23,7,-78,-15,-66,-70,41,-84,-77,15,-38,61,36,-39,-20,-5,-81,-3,-6,40,9,-77,-51,-93,-54,-36,2, -2,42,-78,-36,-14,50,6,-90,-59,55,-64,7,-61,56,-24,-98,13,-31,-27,-26,-18,-75,-34,-48,-127,-84,-27,-28,-100,-100,-86,-50,-67,-39,14,23,-85,-59,-62,45,21,15,19,3,-25,-101,10,-65,32,-21,44,-21,25,-51,-104,-13,-87,-54,-107,-49,4,-71,-76,-73, 25,-88,-46,25,-39,-7,-1,-98,33,-54,-63,-22,-2,8,-49,-82,-15,1,-48,-23,-32,-103,-18,60,-37,-76,-64,-14,5,51,-38,-45,20,-71,1,-76,32,11,-78,-85,-10,53,-56,18,53,33,14,-71,57,-38,-66,-82,-19,-57,-86,23,-3,45,-80,-69,72,40,-48,2, 
  /* [107][0][][] */ 25,-17,4,-3,63,-45,58,-54,-1,-47,31,0,-27,30,22,8,10,21,-56,-63,12,1,62,-13,54,-50,-15,-19,4,-23,-61,-60,-1,-47,-41,8,23,-63,-26,-28,-91,19,-5,22,12,-8,-4,24,31,-12,58,-20,-86,-17,-86,-10,5,30,-54,37,61,2,22,-5, -27,20,-2,64,-5,12,53,56,22,56,9,-1,-14,-8,2,-43,-63,-5,-8,44,-17,23,54,19,-18,77,-35,54,-7,-4,-50,-19,-4,111,10,119,-25,-55,103,-3,15,3,-25,18,14,-13,-25,-49,-16,-21,5,-53,-22,-72,-89,88,43,-19,57,15,-41,87,-50,4, 51,11,-15,-19,-3,-50,-127,-37,-13,31,-21,3,-16,-13,-2,44,32,17,26,-33,-62,-73,110,-6,56,-39,-33,-70,-9,28,-10,49,16,-26,24,-113,19,-9,2,36,-36,-52,-21,-48,-5,-13,-13,-88,-1,26,-38,-22,-47,-43,58,0,22,-5,-32,-61,15,-76,-50,1, 
  /* [108][0][][] */ -23,-24,33,-16,-37,28,4,-23,-16,41,-32,-76,6,14,3,-27,29,53,-34,13,3,-84,54,1,2,55,10,48,11,-27,-6,28,-3,-96,7,52,38,24,-15,-21,-14,6,20,10,50,-35,-16,-2,7,29,27,7,-8,54,-21,-49,-34,-72,96,-9,-3,-41,-87,7, 0,-18,-15,10,-61,-53,28,-11,6,-4,-41,34,24,38,-8,-24,29,30,-19,0,37,9,-93,-12,11,-9,29,-56,22,16,-2,52,-1,-31,-51,-42,-43,-45,6,-12,-95,-15,-55,2,-18,-77,-20,-3,12,33,-22,57,-45,-25,17,-127,-53,-48,91,14,18,-63,29,19, 20,0,-36,-19,-12,101,-91,-18,16,52,-20,45,4,7,-6,-4,4,-62,28,-65,9,28,-104,6,40,-4,-56,-51,5,32,20,37,4,10,-8,95,-25,19,-65,26,-89,30,-22,36,-26,24,-33,-38,19,-22,-12,-42,-41,28,31,-9,10,24,-42,-29,-20,-18,34,17, 
  /* [109][0][][] */ -64,-16,-8,4,36,-42,-21,-43,-18,14,-15,-18,-9,15,12,22,-21,51,-49,-45,-54,-11,46,-5,-44,-18,23,-58,10,-39,-58,-38,-4,17,34,8,16,-79,-9,-18,10,0,-46,-41,62,-35,-11,-61,9,18,-63,-39,49,-40,-97,-12,-63,-15,-24,-22,-15,-18,-44,2, -25,3,31,-1,30,-70,14,-5,7,-106,-44,9,12,7,-12,-36,-36,65,-60,-10,27,20,-15,-12,69,58,-66,-58,14,9,-40,-75,-11,-127,31,100,-90,-124,76,-8,-40,-45,29,22,-44,-71,-25,-39,-12,-30,68,-1,43,-61,4,-50,-59,-14,-11,-33,2,5,-25,-1, -8,14,-88,-5,-11,26,95,52,0,31,20,-18,2,-15,27,-30,98,-57,4,46,53,78,-66,26,-25,14,-16,37,19,22,52,-14,-7,67,-24,-34,43,24,-13,24,-44,-35,-75,27,-22,21,-22,-15,16,-37,-15,-76,16,-5,44,106,43,9,113,62,-35,17,36,-13, 
  /* [110][0][][] */ -47,-36,36,-42,-69,-20,24,-96,10,-55,-120,-51,-50,-69,-31,-12,-23,31,-34,-77,34,-50,-86,-13,-74,23,-45,-21,-44,-11,-63,-16,36,22,29,28,-77,-44,-13,34,-50,-33,45,-52,42,12,-44,-55,18,12,2,-30,-5,-12,-64,31,30,-76,46,5,-28,-75,-75,61, -23,-8,-16,27,25,-40,-64,-65,-57,1,8,-62,-32,-50,-15,3,-1,-5,-53,-60,-47,-53,-47,-46,-35,-79,-34,-7,-41,-94,-25,-52,-45,-42,-6,-76,20,-52,-51,-65,-62,-86,-59,-73,20,-39,33,-22,36,65,-48,-56,45,-38,5,18,27,-62,-35,-69,-35,29,47,-46, -68,11,17,-71,-109,-56,-4,-78,12,-53,-126,-35,-74,16,1,-38,9,-82,16,-115,-91,9,14,21,-40,-81,10,-127,-83,64,24,-30,-37,-12,-118,31,19,-104,-63,-45,-84,-27,8,-105,1,-60,-38,-46,-4,-23,-48,-29,35,13,-55,-61,0,30,34,-3,-92,-27,-103,39, 
  /* [111][0][][] */ -24,-6,-22,-17,2,11,22,-65,-18,3,-76,48,-29,-19,-4,1,-23,-17,-108,22,0,-49,-90,18,11,-32,4,-92,5,34,9,61,15,-40,-28,-22,-13,-31,-70,50,-98,-37,-52,-7,-9,35,-17,-101,-11,-28,-14,-35,-10,-45,13,80,-79,-23,-61,-34,-2,-46,49,-9, -32,-1,-31,-26,-2,21,15,-30,0,-2,-66,-9,0,-42,18,-41,0,-52,-44,-127,-18,-22,-31,11,-83,-10,-102,-30,4,8,-28,-25,-5,64,13,5,-13,-48,5,-11,-59,-54,-44,-30,-23,-4,-9,75,1,-28,-11,-14,24,-56,40,80,-23,-7,-42,-8,-11,26,-34,-8, 14,-6,-87,-20,14,-58,9,-7,5,30,-32,4,-18,-31,6,-36,-4,-14,32,10,-34,-11,-1,-8,78,-1,-103,-20,-13,-18,12,-39,-10,-67,-14,5,15,-21,-20,9,-93,-46,-102,-16,-49,-4,-18,-61,7,-23,-17,86,15,-19,74,-32,-20,4,-39,-19,87,9,-16,15, 
  /* [112][0][][] */ 6,-11,-19,98,31,-10,-32,4,-9,-5,-18,-28,-22,7,10,-14,-25,10,1,7,5,-45,3,7,19,16,61,-10,-2,-21,-4,80,13,29,-16,33,7,-12,22,-10,4,-30,20,-34,26,-2,18,-85,8,-36,25,-65,-1,-38,-106,0,-53,-22,57,-33,11,-16,-86,-17, -4,-14,13,62,3,-52,24,-12,10,-18,-28,-19,-12,15,-12,-17,-15,15,-32,19,20,0,-81,-17,-39,-33,24,-40,3,-9,-21,5,-15,-72,9,-87,5,-56,5,-38,-121,49,-28,-40,-24,-48,-11,-25,16,-12,-62,19,-38,-127,39,-21,-43,-3,66,-28,37,-29,-11,-16, 45,20,-27,-48,-34,53,-71,0,2,44,-13,50,16,3,-11,-49,45,-11,-15,6,-28,15,-56,8,-20,-3,-61,-21,19,-16,10,2,16,14,11,-63,41,44,-26,22,-66,6,-55,47,45,5,-10,-12,4,6,-66,9,-14,54,-18,18,-1,-19,-17,45,-14,-5,44,22, 
  /* [113][0][][] */ -53,19,14,-115,33,2,-36,-75,28,-15,-13,8,29,34,-10,45,76,-20,-60,-59,14,-27,8,32,-6,-86,-47,-66,-11,-17,-34,-52,-12,-5,5,-33,-4,-83,47,-24,40,37,38,2,43,-68,3,16,20,20,-21,-25,-1,73,-83,-57,9,-1,-48,-40,79,-75,-54,17, -33,42,37,-30,-42,-40,38,-46,-3,-75,-69,27,16,-15,0,-34,21,59,-52,-29,0,-27,0,1,-9,92,-27,-3,31,-5,-8,-74,18,-13,21,75,-13,-30,72,-19,-9,-29,36,12,-13,-73,39,-15,-36,-3,60,-4,42,-114,8,-59,16,21,-74,-23,-39,2,-20,15, -1,3,-107,-42,-1,24,-80,17,0,-27,31,-60,-31,-26,-10,27,2,-64,-27,-9,-47,20,24,-11,62,-2,-9,-77,-10,-3,1,-88,-4,54,22,-78,44,17,12,18,-14,40,-96,-13,-49,86,-15,-46,17,-61,-112,-7,-6,22,-127,117,12,-4,10,41,-31,-5,-60,20, 
  /* [114][0][][] */ -6,1,-5,32,-14,3,-14,-12,4,36,6,9,11,-2,-18,34,-22,-24,-37,-38,-34,-22,-16,4,-89,-92,38,5,-21,31,-42,27,7,-9,-39,-60,-1,54,-127,-21,-56,-9,35,-26,21,8,13,0,37,5,27,-17,-79,15,-80,-24,8,12,2,-7,7,-12,-9,10, -33,-19,-35,-35,1,-37,-22,5,-6,-4,-60,42,-11,32,-8,-9,18,-70,-18,24,-16,-13,-57,-19,-119,-23,-15,36,15,-36,-59,-49,22,-37,-26,-60,-61,-87,6,-26,-24,26,-116,43,-24,-21,-7,-49,36,18,-76,-29,-63,-50,12,-26,-21,12,-58,-2,-87,36,-12,33, 17,-16,-20,-37,-13,68,-55,8,2,59,-20,-26,7,27,39,-51,7,43,-27,-29,-30,-35,12,16,-26,0,-35,-64,5,1,2,30,-14,-11,-9,-22,87,12,-7,17,6,25,24,20,92,-40,10,-6,11,16,-24,-58,12,42,-39,-19,-31,-5,-21,-64,-54,-70,1,-8, 
  /* [115][0][][] */ -39,10,2,26,-29,-19,11,-28,-9,17,-22,-41,-9,9,14,17,-5,25,-34,18,-12,-85,-13,-12,-30,9,21,-19,0,-10,-23,32,0,-48,17,17,30,-66,16,-15,-39,-44,7,-29,30,-48,-22,-47,21,2,35,11,9,-84,-61,-56,-35,-1,85,-23,19,8,-13,8, 7,-19,-20,-3,-29,-20,-47,-29,10,3,-12,46,-8,-23,-13,30,31,-21,-3,-21,14,13,-71,-4,-79,-8,2,-27,-13,0,-1,6,-4,-43,-7,-50,-45,-64,44,-10,-16,36,-7,19,17,-34,2,-29,0,-5,-18,-4,-41,-73,57,-13,-12,-56,29,-28,-27,-33,54,8, 9,-4,-22,22,47,54,-74,7,17,69,-2,54,8,-17,35,-9,4,4,43,-79,-6,-31,-33,13,-26,1,-52,-93,-4,-3,-35,16,3,30,-2,21,73,45,-25,10,-46,-43,47,-6,111,22,-10,-42,5,13,-15,-14,60,127,22,10,3,15,-5,-77,-28,-5,-2,-8, 
  /* [116][0][][] */ -12,3,-16,38,7,30,-34,16,25,14,40,53,9,42,11,-20,53,-2,84,28,-48,-3,37,5,52,-14,7,-37,23,4,40,12,12,-26,8,-127,4,-70,14,12,-98,-36,-28,8,-29,-27,-10,13,3,37,-93,53,-17,16,106,-47,-54,-54,1,19,19,-29,-13,2, 49,-11,10,-41,56,47,-40,-70,16,24,14,-45,18,-21,20,40,-14,3,-38,-69,17,-42,-24,-10,-55,-76,-18,-63,-5,8,17,5,-7,-44,-12,-44,29,58,-103,-29,94,-27,-19,38,-12,56,8,-26,2,69,13,5,7,19,-34,-12,-31,4,3,-8,-18,-96,61,24, -62,8,-6,-11,0,-31,44,1,12,3,-26,-16,48,3,15,-11,1,-38,22,24,22,-41,11,-5,-6,-2,64,-7,30,-46,-61,38,-27,15,-47,-10,-29,-18,-17,-22,-42,56,20,0,-9,-52,3,-25,30,77,-25,29,60,-41,-49,-74,-39,-25,53,30,-34,17,-46,28, 
  /* [117][0][][] */ -2,-7,-2,-6,7,22,-31,-14,3,33,-2,-7,3,-22,-5,-16,-23,-49,6,-9,-10,-87,13,-22,-48,17,-34,-33,-1,4,22,-1,-10,-32,5,7,-15,12,-46,-41,64,9,28,-4,-13,0,-2,-40,1,5,-23,1,-23,38,-18,-30,-28,-29,7,-57,-32,-69,27,-16, 18,-8,16,50,-15,18,30,-63,-10,-21,-42,2,-11,-14,2,12,24,52,4,24,-9,-35,18,0,11,9,71,17,7,2,-33,62,8,23,9,26,-8,16,-4,-28,4,44,50,-37,-1,-34,8,8,-3,-11,31,26,-12,28,-64,-35,16,51,21,1,20,-54,-42,-8, -3,-9,-5,33,6,-60,-14,-15,5,-48,1,40,-2,35,0,18,4,-21,-15,7,37,3,-23,10,-8,-13,-15,10,4,-12,-6,-16,-3,-63,-11,-28,-45,-41,-71,13,-21,23,9,48,52,-26,20,-11,5,7,-44,13,10,-127,15,-47,-45,-30,4,-3,46,-9,73,11, 
  /* [118][0][][] */ -19,7,-20,-18,57,-54,-6,-23,22,11,-8,4,14,15,-7,9,15,-7,-18,-3,-17,-8,81,0,-22,-29,26,-51,-5,-17,3,-29,4,-23,-3,-40,30,-45,-35,-18,18,20,-42,1,32,-58,10,-4,12,13,5,-15,40,9,-78,-11,-30,-29,-20,-12,11,-32,-47,3, -6,-7,23,-6,-2,0,13,-15,-10,-66,-31,7,-20,-24,-29,0,-5,73,-32,-25,23,-3,41,-17,5,8,-82,-19,17,-10,-17,-59,3,-82,16,57,27,-54,34,-8,8,-29,14,19,20,-75,6,-12,21,15,35,-10,12,-10,23,-57,-23,-2,-27,-13,-31,27,-19,-15, 4,-6,-27,23,-21,-21,23,13,19,-22,16,-31,3,-6,15,-7,34,35,20,22,-34,14,-5,14,19,87,-30,-20,-14,-11,10,17,-6,63,21,-37,18,-22,-38,4,-59,2,-66,30,9,50,12,-4,-11,33,-74,-58,-13,-15,-65,127,34,8,57,7,-52,1,-13,-16, 
  /* [119][0][][] */ -61,-15,-20,-29,-12,-27,44,-46,9,-57,-26,-48,0,-81,13,-19,-28,-52,-29,-18,-57,-6,-30,5,18,-4,-10,-8,-2,-13,-14,6,-7,-31,4,17,-56,-54,5,-43,-77,-38,-29,-4,-26,-26,-13,-77,-5,-95,10,-19,-10,-123,-28,-10,-23,-10,75,-4,-45,8,-61,-3, 26,9,-10,-55,36,-26,-31,-23,8,-16,-2,-27,-14,-29,1,38,-6,-23,-35,-34,-14,-6,-7,10,-21,-34,1,-41,0,-23,14,2,-17,-22,4,-17,-22,-29,41,-43,-27,1,-41,-10,4,21,13,-11,8,5,-47,-31,11,-21,-19,67,-37,-17,24,-41,-1,-18,-2,4, 18,-17,24,-65,32,0,63,-9,11,19,9,-1,0,-65,-16,5,-28,20,34,-19,-43,16,30,8,127,19,-50,63,14,-12,21,-46,5,-11,-17,31,-14,-61,31,3,-67,-1,19,-42,-8,-60,12,-8,-22,-31,26,-2,34,-67,64,-40,-25,15,-20,-74,-1,11,-3,31, 
  /* [120][0][][] */ -32,8,-68,10,-29,42,-36,16,-19,9,-1,26,-25,25,1,-16,34,-37,34,-47,13,-5,30,-8,60,5,-26,-22,30,0,23,9,3,-92,6,-60,-27,-22,9,30,-105,-34,-12,17,14,-19,-19,-30,-17,73,-112,-32,-24,5,74,-18,9,5,17,10,41,-33,26,-8, 73,22,-42,45,20,59,-30,-8,21,-19,-20,-7,25,13,-16,8,41,84,23,-100,22,-72,-84,-14,-84,-33,46,-52,-17,8,21,119,-1,-47,-25,10,7,22,-84,-22,18,76,0,-26,23,14,34,-11,19,98,3,-32,-11,93,-41,4,-28,-15,127,-76,2,-63,-37,-30, -51,-3,-32,23,1,1,-19,4,14,37,-32,68,-24,4,43,-39,88,-33,-8,46,43,-38,-1,-2,-79,32,85,-31,-13,-26,-44,64,-14,18,-12,-41,-65,-62,-43,-2,-30,49,-50,10,26,-52,-9,-25,1,81,-47,50,18,-85,60,-32,-4,6,8,-2,-14,6,58,16, 
  /* [121][0][][] */ -8,2,-24,-23,-5,-44,-37,-2,-22,9,18,-55,19,-15,6,17,11,21,9,-97,-34,17,-127,9,17,27,8,-11,-14,0,-51,-47,-5,-43,8,44,-51,53,14,-38,13,28,-22,-24,-48,64,5,27,-22,-19,-12,-31,1,52,-39,-53,-100,-18,-74,26,-72,36,-45,-11, -14,-21,17,-83,10,-45,-20,29,-10,-10,25,-48,9,-2,9,-10,-72,-72,51,-35,-41,19,24,-3,15,-11,-85,3,-13,2,-33,-28,-6,10,-1,-15,-60,14,-107,-5,22,20,-7,-28,-23,4,-2,45,-5,-70,-14,24,-64,-2,-2,-42,11,0,-76,17,-18,-4,-29,-11, -33,-13,27,83,36,-64,82,8,3,-45,-1,-67,-2,17,2,-19,-8,-34,-33,-24,19,-35,9,7,5,-45,84,-11,3,5,-30,69,20,26,-7,-40,-82,25,5,-20,39,-3,-15,-7,-122,1,4,64,-10,-36,20,-25,40,90,-69,-32,-87,-12,-8,-3,51,18,-12,3, 
  /* [122][0][][] */ 14,-30,53,-28,69,-58,-53,-47,-3,27,39,37,-44,2,-33,-3,-10,-20,36,-69,65,-12,-23,36,47,-5,-32,-100,3,-16,48,-54,50,-103,28,-56,-21,-127,32,-35,-48,-23,-3,-33,58,-91,-14,9,0,39,-37,22,26,-9,32,-31,-116,-40,-42,1,-55,-97,-24,33, 27,-3,36,10,-25,42,64,-16,-11,-69,-46,-8,-15,-37,-3,12,-13,60,-31,-31,-34,29,-46,-3,-9,74,-57,39,-25,-62,-8,-82,-31,-44,-13,122,-11,17,25,-30,16,-103,85,51,28,-84,-31,16,-29,-6,44,-28,-37,-6,-25,-76,20,64,-26,15,-88,-6,31,-1, 38,35,-100,-14,-32,67,-86,7,-18,-5,32,0,-9,4,8,-10,12,-60,10,-9,-93,5,52,-14,26,41,8,-88,-2,-14,-26,17,-42,96,7,-58,-16,18,14,-57,-88,25,-100,-7,-75,12,44,-103,9,-57,-59,-3,-67,50,-112,103,34,14,-22,34,-3,-36,-74,8, 
  /* [123][0][][] */ 6,-13,-14,-43,-2,-57,10,-7,-13,-49,23,19,6,-26,26,-47,-6,-64,-21,-36,-14,30,-86,2,-11,-24,-43,6,-11,7,3,-21,-7,56,-45,11,-96,33,9,63,44,13,30,15,-83,24,13,11,22,-40,30,5,-21,3,58,-46,-6,16,-51,6,25,49,36,14, 5,24,63,12,-4,-54,36,-7,22,-76,-25,-50,31,-5,0,-36,-24,-4,25,-9,-2,56,22,8,-23,-42,-25,50,12,-7,15,-30,20,31,-23,-38,-56,-7,9,23,-68,3,38,4,-46,-29,-26,48,6,-78,2,62,29,-39,23,-7,15,23,-60,-2,-50,72,-38,-29, 37,19,-21,-56,-37,32,-56,30,9,-98,46,-54,-17,-39,12,27,-31,-4,53,37,-33,34,28,24,40,-27,-75,-1,0,-7,25,-99,24,-8,17,39,-71,72,0,9,-43,96,-112,16,-91,98,-29,3,-22,-10,-93,14,-32,-33,-12,26,-8,-23,-24,127,30,-44,0,-22, 
  /* [124][0][][] */ -7,0,-19,-7,-15,-3,-53,-12,15,-43,-8,-42,-1,9,-2,14,-18,-14,-4,1,-9,-16,28,-3,-19,-28,-2,-20,-3,-17,-28,7,-17,-51,4,-1,-7,-82,-25,-31,-38,1,-58,2,-16,-39,-2,-14,13,-25,-7,-20,-25,-37,0,-66,-36,-6,30,0,-52,-45,3,0, -15,-10,-37,-29,-6,55,-79,-49,-13,48,-10,20,8,34,12,94,12,-52,-27,-49,-37,-3,26,10,30,-60,-32,-41,4,-25,-6,-30,-22,-62,12,-39,54,-23,28,-31,91,28,-66,-34,61,-71,8,24,-8,11,-70,-58,59,10,-80,-53,-6,28,-84,-26,-65,-48,-49,11, 5,8,43,-28,-32,-20,11,22,-18,39,-2,11,-2,-18,-25,67,1,8,-3,-66,-76,7,-124,20,32,39,-113,48,-7,2,-60,-102,-9,-111,17,127,-7,-78,23,-23,57,41,-12,23,-86,-29,1,106,-2,-46,78,-6,-17,-1,17,-41,-26,26,-32,-59,-100,20,-16,-17, 
  /* [125][0][][] */ -41,10,11,-30,-5,0,87,37,-8,-23,7,4,10,-17,-22,-11,27,9,79,-9,-1,27,-6,-11,39,-12,-54,84,16,3,-69,34,16,-52,-25,-21,-68,-12,-90,-33,-60,7,35,-37,-34,-4,17,59,-16,52,35,32,-58,-29,43,-36,-44,-16,-46,20,1,41,-11,6, -54,-20,25,-62,-25,-19,-50,-20,23,-51,-4,4,9,-22,6,17,-71,-116,-66,-103,-2,-117,-60,-15,-98,-100,-102,14,21,-5,-35,33,-13,-17,5,-86,-103,-45,-80,-24,30,-61,-47,-78,-82,2,-13,45,5,-7,-71,10,53,26,-71,-22,-46,-59,6,38,9,-3,20,15, -35,21,-15,-11,18,-3,-23,-4,14,-15,1,15,-2,4,6,-21,-71,-107,52,51,-26,-29,31,16,-12,-30,81,1,32,-42,0,-37,7,84,-34,-68,-50,15,-85,15,14,-47,-26,-14,42,7,2,-11,13,-64,82,107,-32,15,-33,-127,22,44,-49,22,28,11,-33,52, 
  /* [126][0][][] */ 31,-5,46,-14,-3,-49,-8,-33,-22,-85,-40,-2,-12,56,-3,-52,-31,-27,-66,72,-31,-19,49,14,-75,-31,13,29,-4,-30,-72,29,-36,42,-11,-6,-26,71,-74,23,-49,1,-7,-67,-2,-44,-31,-17,-8,-61,-9,-98,12,7,-18,10,52,-10,14,-76,-15,-2,-60,-2, 41,6,-32,5,-31,-20,-49,-45,-15,-61,-23,14,-13,-11,-7,-9,-60,-110,-55,-4,-56,-34,-32,-1,7,-18,-84,-15,-3,-24,-6,9,-8,-109,21,-27,-55,-37,-61,-14,-33,-18,-75,-12,-42,-4,-2,-81,-13,-127,-51,45,-12,33,-70,0,-40,-8,-61,27,-25,-33,-50,14, -34,-22,-11,-1,17,-11,-13,-24,-5,-14,-37,-25,6,-28,-7,-13,-16,1,-24,-59,-42,-62,-4,14,26,-31,-16,-23,2,-17,-8,-41,10,-26,0,-33,-11,-53,14,0,-30,8,-32,-32,-36,-37,-6,29,-10,19,-26,26,-18,-33,-43,28,-33,-43,-24,14,-1,-61,-21,9, 
  /* [127][0][][] */ 1,-18,6,-80,-39,-4,-17,-88,22,-20,-16,73,27,-13,-12,-32,85,-49,-83,-15,63,-10,14,44,-17,-23,-11,-63,22,-13,25,-9,5,-6,-53,-90,-45,-51,-16,-50,11,61,-56,15,-46,-48,-3,-61,-15,55,-2,-48,9,-50,18,-16,-46,-80,-59,-10,2,-28,-3,4, -8,12,32,-18,1,-66,27,-15,12,-16,-44,40,1,-21,7,-12,4,14,-36,-83,-58,34,-95,15,0,35,-55,31,4,22,-24,-53,21,-91,5,51,6,-61,53,-21,11,-50,51,43,-4,-97,12,10,-5,7,22,11,103,6,28,-63,-22,-4,-51,-27,-56,16,-33,14, 6,19,-5,-2,-11,-13,-23,65,-1,-28,9,-7,-31,-22,26,-51,-58,6,8,66,-60,70,27,20,-2,-69,-61,28,-24,-1,35,-127,11,24,50,-16,-11,4,75,-40,-5,-2,-7,5,-24,22,-4,-1,-16,-14,-15,51,50,-45,-42,23,43,-36,2,81,-4,44,-19,20, 
};
const TfArray<4, int> tensor_dimension13 = { 4, { 128,1,3,64 } };
const TfArray<128, float> quant13_scale = { 128, { 0.0052006598562002182, 0.0045137214474380016, 0.0047834371216595173, 0.0042370925657451153, 0.0050043170340359211, 0.0039548235945403576, 0.0065791257657110691, 0.0043625063262879848, 0.0056316088885068893, 0.0053216493688523769, 0.0052288989536464214, 0.0085768615826964378, 0.0046541043557226658, 0.0034856128040701151, 0.0054303882643580437, 0.0049141324125230312, 0.0048046503216028214, 0.001583647564984858, 0.0056347819045186043, 0.0039773695170879364, 0.0041564293205738068, 0.005019086878746748, 0.0048391460441052914, 0.0017352295108139515, 0.0039292317815124989, 0.0041216355748474598, 0.0036863149143755436, 0.001147232367657125, 0.002723001642152667, 0.0056668641045689583, 0.0057167033664882183, 0.0045728874392807484, 0.0052194446325302124, 0.0061157466843724251, 0.0013522310182452202, 0.0045605082996189594, 0.005881049670279026, 0.0056502870284020901, 0.0047482722438871861, 0.0054927831515669823, 0.0053285863250494003, 0.0052471724338829517, 0.0057519860565662384, 0.0057777883484959602, 0.0044830497354269028, 0.0070840534754097462, 0.0031228768639266491, 0.0053888070397078991, 0.0053467592224478722, 0.0030459610279649496, 0.009278186596930027, 0.0031430493108928204, 0.005238210316747427, 0.006029441487044096, 0.005381598137319088, 0.0046981680206954479, 0.0050518009811639786, 0.0060704043135046959, 0.0049378704279661179, 0.0053783454932272434, 0.0037551675923168659, 0.0061767017468810081, 0.0037144694942981005, 0.0083186393603682518, 0.0024035307578742504, 0.0061043626628816128, 0.0037640754599124193, 0.0053781247697770596, 0.004938698373734951, 0.0031312382780015469, 0.004889228381216526, 0.0032333156559616327, 0.0015593796269968152, 0.0076353163458406925, 0.0080748749896883965, 0.0045222239568829536, 0.004231646191328764, 0.0048928642645478249, 0.0053417114540934563, 0.0062785428017377853, 0.0024130255915224552, 0.005354719702154398, 0.0016942931106314063, 0.0063581857830286026, 0.0055354316718876362, 0.0066502699628472328, 0.0020846300758421421, 0.0030173189006745815, 0.0031356206163764, 0.0045831995084881783, 0.0052609797567129135, 0.0051937098614871502, 0.0062361988238990307, 0.0045302817597985268, 0.0023972084745764732, 0.006117427721619606, 0.0050897849723696709, 0.004743495024740696, 0.0044601070694625378, 0.0051855426281690598, 0.003701323177665472, 0.005315353162586689, 0.0045199822634458542, 0.0037209668662399054, 0.00693465955555439, 0.0038355085998773575, 0.0013074782909825444, 0.0041568679735064507, 0.0048219291493296623, 0.0044616083614528179, 0.0015216951724141836, 0.0044828136451542377, 0.0054368930868804455, 0.0053799403831362724, 0.0035267425701022148, 0.0058252508752048016, 0.0047458144836127758, 0.0089614083990454674, 0.0057668811641633511, 0.0066440002992749214, 0.0035450574941933155, 0.0051689790561795235, 0.0044276085682213306, 0.0046674162149429321, 0.0049856696277856827, 0.0042702369391918182, 0.0051406179554760456, 0.0041937641799449921, } };
const TfArray<128, int> quant13_zero = { 128, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data14[64] = { -3551, -2506, -1176, -1814, -1297, -1216, -3255, 1811, -1642, -393, 120, -2537, -1859, -2255, -2697, -2354, -1481, 389, -170, 1649, -1191, -170, 487, -3848, -127, -2838, -2108, 501, -3700, -2735, -2205, -2394, -3589, 2263, -2467, -2837, -373, -195, -2610, -788, -1662, -3218, -3571, -2394, -1160, -1202, -2680, 2008, -1713, 1018, -1567, -1088, -2594, -407, -2366, -1546, 785, -2936, -2472, 717, -1253, 1950, -2401, -4562, };
const TfArray<1, int> tensor_dimension14 = { 1, { 64 } };
const TfArray<64, float> quant14_scale = { 64, { 6.7288994614500552e-05, 3.921305324183777e-05, 8.2158971054013819e-05, 9.567207598593086e-05, 8.652297401567921e-05, 9.8995522421319038e-05, 6.9605644966941327e-05, 7.6739546784665436e-05, 4.77325011161156e-05, 0.00010779469448607415, 7.2716647991910577e-05, 0.00011494153295643628, 4.6109897084534168e-05, 5.287898238748312e-05, 3.0361996323335916e-05, 7.7390111982822418e-05, 6.5901906054932624e-05, 0.0001512873568572104, 0.00015040756261441857, 9.2508293164428324e-05, 8.2550352090038359e-05, 8.0875004641711712e-05, 0.00010753716924227774, 3.4148950362578034e-05, 0.00011027891014236957, 8.2320402725599706e-05, 7.2370778070762753e-05, 0.00010389183444203809, 3.1503685022471473e-05, 4.2700430640252307e-05, 6.4571220718789846e-05, 8.6861327872611582e-05, 3.9088445191737264e-05, 9.0938730863854289e-05, 4.7311033995356411e-05, 0.00011779987835325301, 0.00014174052921589464, 8.250962127931416e-05, 0.00010570540325716138, 6.7868924816139042e-05, 0.0001103149916161783, 8.4345905634108931e-05, 6.4033294620458037e-05, 9.7644398920238018e-05, 9.6364710771013051e-05, 8.8554028479848057e-05, 4.4839725887868553e-05, 7.5813390139956027e-05, 2.8897682568640448e-05, 0.00010091531294165179, 0.00013170903548598289, 9.497965220361948e-05, 7.044043013593182e-05, 9.5611816504970193e-05, 0.00012083720503142104, 9.9388380476739258e-05, 8.7610613263677806e-05, 6.4098137954715639e-05, 0.00010557097266428173, 9.4929644546937197e-05, 9.3349488452076912e-05, 8.8779917859937996e-05, 0.00012480349687393755, 4.9534031859366223e-05, } };
const TfArray<64, int> quant14_zero = { 64, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data15[64*1*3*32] = { 
  /* [0][0][][] */ 9,-56,-16,-19,14,-79,47,-30,-5,37,-62,36,18,-34,0,54,50,0,-26,-89,26,-29,65,-30,13,-43,-35,-22,52,2,-66,-11, 127,-11,-4,-58,-35,-8,17,-9,-44,12,0,52,-32,5,-35,68,36,-54,22,25,34,-10,-27,-48,-17,-121,20,-36,41,-15,-92,-88, -27,15,-73,9,-13,-30,-3,10,-46,1,-7,67,-51,31,-55,-63,19,2,-21,5,-78,-38,-8,-4,-22,-97,-55,-52,-104,-63,-78,-31, 
  /* [1][0][][] */ 17,-9,9,8,-74,-47,-84,-13,-8,-55,44,12,22,32,-48,-9,-11,-10,-17,-13,-60,-47,-51,39,-9,-33,34,-5,8,4,27,8, -74,-52,-41,-95,-12,-9,-36,-36,-58,-46,-103,-59,0,13,26,35,37,-2,-74,-74,-127,-40,-21,-5,9,23,4,3,24,-103,-59,-20, -9,-3,-64,-61,-27,6,-2,-41,-64,-98,-50,-63,-4,27,-53,-7,11,-74,-82,-7,-75,2,-3,-26,25,-31,-40,0,-46,-62,-100,-59, 
  /* [2][0][][] */ 18,77,-12,-1,-14,-22,-13,16,9,3,30,12,-24,32,-28,-15,-13,15,-34,-50,-4,-76,21,-28,-18,24,-20,18,19,-20,7,-18, -20,-35,-22,-64,-59,-127,-44,-18,-8,-70,57,-15,34,-14,-37,17,-53,-48,31,-80,-24,-29,-43,-7,3,-35,-104,1,38,-31,39,-13, -15,-9,-27,-29,-31,91,-27,82,46,-73,92,12,-89,-9,37,-33,-95,-32,-42,-22,-47,-4,-29,4,-42,0,48,8,-12,-14,-24,-10, 
  /* [3][0][][] */ 106,8,-12,8,53,17,-51,-12,-17,57,-35,24,-14,-15,-57,-57,15,55,96,114,-38,-50,-9,20,-6,-40,23,-45,-30,60,21,-35, 81,-43,-33,-33,30,-19,28,36,-53,23,1,18,-6,22,-2,-3,15,76,40,-3,-12,34,10,-16,19,-63,35,-21,-48,-17,-49,5, -36,-51,10,-36,-44,-127,-78,-27,-28,-25,-22,32,-13,7,-13,32,-39,-50,40,9,-53,-57,-38,-34,-1,-63,-27,-22,-53,15,-20,-13, 
  /* [4][0][][] */ 14,7,40,12,51,-106,-13,37,33,42,22,-20,-54,-14,16,48,17,33,45,-24,-68,24,-13,2,-5,-127,7,-84,2,-36,-27,36, -6,-25,-56,-51,-86,-2,-45,-46,31,-18,-33,-46,2,21,-39,-7,-19,-56,-18,-2,-2,-95,52,9,-22,70,-5,2,-80,-46,-9,-25, -17,88,-41,-12,-76,8,9,-29,-35,-59,-17,-14,-46,-11,-38,30,-70,-57,-63,-26,-1,18,-34,-13,-88,45,2,39,-3,8,2,-6, 
  /* [5][0][][] */ -34,-25,-11,-31,25,-44,44,-18,24,10,-21,46,45,-20,1,50,36,-7,35,-27,41,16,4,-20,74,-28,-8,-44,-10,-56,-69,12, 107,9,31,-56,38,-18,-105,21,-28,15,39,29,-112,2,-2,26,-12,-45,21,-3,-79,51,-66,-14,-78,-119,29,-4,-1,0,-87,-4, -88,-5,-44,21,74,76,-21,-1,-43,48,-24,-27,-36,-17,-62,-127,33,15,3,22,-43,-12,59,-29,21,63,-84,-28,-107,28,-13,-110, 
  /* [6][0][][] */ -82,-19,-51,-29,41,-83,-35,-83,-38,94,19,-62,41,-29,-127,28,73,-54,19,-85,-37,26,34,-39,-2,53,-19,-39,36,-23,-77,12, -110,-41,47,-36,-45,-103,-84,1,-50,-77,-48,-27,-49,21,-17,1,46,-109,121,11,-42,-34,-87,42,-13,104,-36,24,-19,72,125,-33, 110,-96,16,20,-48,-33,-43,92,44,17,70,-14,78,21,48,84,-69,-82,-22,-81,-13,-8,-14,-23,-23,-57,98,-7,30,-88,-10,42, 
  /* [7][0][][] */ -23,-38,-77,10,2,-47,-111,-58,-3,-16,-47,-16,-48,-47,-11,-45,-43,-59,-50,-79,-84,6,-115,-15,-38,-23,-14,-8,11,66,52,-23, -9,-26,10,34,-51,-3,52,-23,58,-4,12,-31,55,-38,57,59,-31,-4,-62,-4,21,-11,-55,30,-16,-30,-24,75,-12,-38,0,41, -95,72,-1,-59,-36,32,57,81,-5,-127,-57,21,-87,-11,-57,-53,-57,-68,-43,-22,-58,-50,80,-33,10,41,12,-4,-98,-11,37,-33, 
  /* [8][0][][] */ 42,-37,-52,-5,-67,-21,-33,-31,-58,-16,31,-38,-2,-37,-69,-19,-17,-63,-20,-18,-21,36,-49,-22,20,-127,-2,34,16,-52,4,-30, -50,26,21,-40,-10,-43,-49,-5,-3,-3,-5,62,-25,50,-56,10,-90,-68,-50,36,-24,11,43,-17,-11,-63,-17,-118,-59,22,-52,4, 10,-28,-42,-82,-38,-31,-36,-45,-59,17,24,68,-66,54,30,15,27,-20,-49,-71,-5,-9,69,-3,-8,-21,-51,25,-41,10,-39,-13, 
  /* [9][0][][] */ -20,-27,40,-4,42,-83,62,6,-18,4,-17,21,38,13,27,-1,15,26,51,-6,15,47,42,-15,44,-57,-11,-25,22,-2,-14,-13, 69,-15,3,-59,30,30,-72,31,23,-69,-24,2,-27,-8,-35,-36,9,-26,33,6,-63,-52,16,-76,-22,-67,6,-4,-127,-27,-93,-34, 15,5,-40,-9,56,18,-32,26,-18,6,-18,0,-62,3,-53,-35,52,8,-15,16,-50,-1,11,-75,0,-37,-43,-38,-86,10,0,-46, 
  /* [10][0][][] */ 12,-91,42,4,-70,41,-2,-4,49,-5,51,1,-14,-30,31,115,-90,-81,-41,-10,33,-2,-17,-38,-23,-101,21,-53,20,-43,-76,10, 7,-21,-112,-2,-119,-53,-60,10,-16,-12,14,-47,14,11,-11,-28,-13,-100,-9,23,-25,10,9,-67,4,22,30,-31,-6,-23,-32,6, -19,8,29,31,-127,17,-16,-41,20,-49,-27,13,23,0,-39,3,-59,-19,-29,-29,38,-46,31,-8,45,-55,-7,52,-33,35,77,24, 
  /* [11][0][][] */ 40,-10,-1,-24,34,3,22,-30,9,18,15,4,43,-12,1,-52,26,36,39,-53,21,78,40,25,-30,2,-43,0,-9,-11,-57,-55, -60,52,-13,22,-83,-70,37,11,-27,-28,-25,0,9,-5,-11,-34,39,-21,81,-10,19,23,51,-15,11,-127,-60,20,-35,-26,-29,4, 40,44,15,-28,100,-26,-71,34,-14,9,-34,50,-61,-15,10,-2,55,48,36,-79,-87,33,42,-49,-22,-66,34,0,-28,-35,-24,-41, 
  /* [12][0][][] */ -27,-11,-30,-72,38,-36,39,-3,-76,10,39,-43,-53,60,-69,19,-21,-29,-59,41,-46,23,42,16,-24,-10,-116,-15,38,-83,0,30, 31,14,-53,-19,-96,46,-43,-60,-25,9,-70,-71,-7,-29,-80,38,-36,-80,9,26,-87,-59,88,22,0,-1,-60,-127,1,-56,-22,4, -16,10,-45,-43,-58,-36,13,-29,3,-116,-19,12,-42,27,-88,-34,-55,-51,41,-63,42,-8,-36,33,-42,-4,-27,-64,45,-65,-59,5, 
  /* [13][0][][] */ 49,57,-111,17,78,111,-69,23,-21,88,-39,-12,-62,-7,-4,-22,-28,36,1,83,31,-59,11,-46,-28,-78,43,-5,-32,5,-48,40, -67,-22,-24,-120,70,4,9,-50,-39,-59,25,38,-23,-14,-23,-37,36,-63,-14,-83,-46,-12,-38,-37,-13,-87,-48,-14,-47,28,-113,-2, -112,-37,-21,17,29,-44,54,-8,-73,-38,-33,43,-19,-44,2,-57,72,32,68,-2,28,-127,-19,-20,8,-116,-29,-9,-74,-125,-94,-78, 
  /* [14][0][][] */ -91,77,-16,-35,-24,99,-6,-29,-48,70,-11,-62,46,-63,18,-67,-50,33,-24,-110,-81,-8,74,6,-4,-101,86,-4,-23,-34,-81,4, -5,41,-91,-120,0,-62,-25,-11,-124,-36,-30,64,-92,-20,43,-19,-4,-65,-44,30,-52,51,-78,-60,-10,-41,-101,34,-76,37,-76,8, -36,-63,-1,-66,-20,-36,-27,-43,35,-68,13,61,-38,-28,-78,-85,-52,-99,-7,49,-38,58,-55,-73,6,-47,-23,-52,-109,42,-127,-57, 
  /* [15][0][][] */ 60,66,-14,11,-33,126,-32,-91,-25,-64,-53,-20,-30,10,-31,-6,-62,7,-29,-51,-34,-31,-75,-18,-22,26,-56,-29,11,-9,40,-20, 19,-62,-68,-35,-28,-66,-40,-66,-57,-23,45,36,-65,12,-63,17,10,-21,-30,-90,-23,30,-84,-27,-72,-62,-23,-114,62,-63,-84,-30, 0,-35,4,10,51,38,-37,-57,23,-50,13,18,-46,-21,-36,-21,-13,-6,24,-14,-9,-9,-64,25,-127,-42,5,-105,-21,-22,-28,45, 
  /* [16][0][][] */ -66,-17,-39,9,44,13,13,31,-73,-16,-32,11,-45,34,-67,-71,127,-58,2,16,3,11,63,-30,-2,-56,-17,-21,-108,47,-65,-2, -18,-5,8,-74,35,25,6,-21,-4,52,-49,-34,-7,26,-35,-21,32,22,-35,14,-73,-37,-63,-1,-16,-33,-16,-6,-3,-5,-53,7, -52,25,1,24,15,-50,82,11,-57,-123,-78,41,-2,1,-37,-37,31,-104,39,-23,40,47,107,21,38,-58,-55,18,-121,-69,-123,-56, 
  /* [17][0][][] */ 0,-41,-31,-50,46,-21,-61,10,-19,-6,-7,-27,-19,-8,-31,-15,44,-85,-13,-20,-58,-37,-38,-62,-2,-4,33,6,-127,-45,-59,-69, -22,-39,-71,-1,57,23,-28,-6,-28,48,-28,-46,2,-19,-25,-25,42,-4,53,35,-25,-27,-1,-12,-1,11,-29,9,-96,14,14,1, -17,-43,14,11,9,14,41,6,0,21,39,5,19,-8,3,-15,8,4,-34,7,18,-7,-6,-1,38,-33,11,6,-71,-5,-36,43, 
  /* [18][0][][] */ 32,2,35,-10,-57,31,-18,-10,48,37,29,17,8,2,34,127,-24,-14,-55,31,22,26,-10,-16,16,-50,29,1,27,-50,-18,22, -48,-12,-37,-21,-78,-46,7,19,4,-26,-50,19,-73,1,0,-8,-68,-116,-1,28,-50,-16,-2,35,-67,30,-38,-31,-66,29,-4,15, -19,58,0,-3,-81,-19,12,-34,-4,-19,-11,-13,59,0,-26,-19,-26,-2,-35,-1,45,-54,19,-43,25,48,-40,42,-29,-11,32,-2, 
  /* [19][0][][] */ 36,-12,-41,3,39,59,-58,26,8,36,76,-20,-13,-12,-17,46,-51,-43,67,64,3,-21,-97,6,-23,18,91,-8,72,10,34,-64, -58,-2,-2,-3,-31,34,-24,-9,26,44,-14,-72,-64,-6,21,-94,-89,59,-20,-1,2,32,-114,54,-48,-30,-43,40,44,74,-58,127, 12,2,-41,-36,-60,-72,59,-19,-31,-29,-50,25,4,-15,-60,32,35,-18,13,-65,6,8,67,-73,29,-5,17,14,-87,19,-100,-54, 
  /* [20][0][][] */ 36,-68,3,18,41,-22,19,56,-55,44,-7,19,-34,17,29,-69,62,28,-5,79,8,-35,-20,54,-19,-43,-10,-11,-91,13,-12,24, -94,-22,35,18,-40,-127,51,-49,-30,44,-11,-35,10,0,-50,-78,22,-34,0,-57,-1,20,-48,5,18,-83,-45,-7,-34,47,-39,-46, -49,-78,8,39,73,0,45,-17,-27,-16,17,28,47,-20,22,-18,67,-12,47,9,37,57,72,3,82,-73,-33,11,-64,24,29,-45, 
  /* [21][0][][] */ -30,-45,-82,-26,-62,-71,-45,-15,-83,18,-6,24,-8,-8,-65,127,-64,64,7,-102,9,44,-18,-87,5,51,3,-22,61,-56,24,27, 46,-38,70,68,-99,55,12,32,26,-37,47,34,-11,-35,29,50,-21,-18,-32,-10,-11,60,-16,12,42,11,91,21,-58,-47,-19,-86, -27,59,-20,-102,-87,-30,-72,30,-15,-83,-2,41,-123,-4,-4,49,-47,-56,-10,12,-58,-94,-19,-56,-63,-2,-8,23,51,-100,-70,60, 
  /* [22][0][][] */ -37,24,-63,34,-45,11,-73,-71,60,18,31,-127,3,-20,33,-55,14,-28,-126,-6,-59,4,-29,-8,-10,-19,-59,29,-13,-19,5,36, -14,-15,42,9,-34,25,30,-33,49,26,-41,39,2,14,6,-42,26,-22,-39,-21,5,-81,22,43,54,44,-35,31,5,44,2,-11, 12,-37,-63,-66,46,-71,-81,64,-66,-38,-44,-1,-65,1,-52,-33,74,-55,-1,-48,-31,-18,-18,-55,-45,-24,-40,20,-48,-25,-43,-30, 
  /* [23][0][][] */ -87,-100,-78,2,-35,-1,-21,-121,-75,32,-22,52,15,46,-127,13,-59,-36,-42,-51,7,-93,-26,-33,-67,-38,54,0,-115,-45,15,-88, 19,58,-88,-7,-67,-55,-7,-80,-18,-19,-65,19,-66,48,32,-84,-79,-101,-47,32,-89,-21,-63,-6,14,-74,11,-57,-77,-54,-76,-27, 1,63,-12,-114,-127,-29,22,25,-69,-72,-72,-65,8,43,6,-51,27,-5,4,1,-86,52,-58,-58,-55,-117,-28,-22,-55,-91,-18,-10, 
  /* [24][0][][] */ -5,-79,-67,-127,18,-46,-8,46,36,-6,24,-79,37,12,-53,54,55,-36,-86,-36,30,19,58,-64,-22,-53,74,-88,9,-100,-56,19, -111,-55,-51,39,2,-23,-12,-83,18,53,-68,25,-9,13,2,-32,14,-61,-33,60,7,35,64,-2,-6,30,23,37,-35,-46,-31,-64, 65,82,0,-7,-29,50,-57,-110,-18,-20,-93,-75,-40,-3,-36,-45,-102,-13,-89,34,-53,-75,-56,-36,-15,101,1,13,-8,12,37,-34, 
  /* [25][0][][] */ -58,-64,-108,-21,6,-70,-76,-63,-16,-57,-92,-30,-8,-15,-62,-30,8,-23,-31,22,-21,-63,-45,-5,-42,7,16,44,47,-47,23,-64, -88,-30,-47,-51,2,-56,-84,-34,-97,31,-21,12,-102,-24,-77,-11,-51,-11,-31,-23,-116,24,-104,-5,-73,-57,9,72,43,-72,-84,-17, -77,-50,9,38,-30,-127,50,33,-30,-17,-72,5,115,-17,-13,-25,42,-110,-1,42,21,-22,72,-26,74,-32,-60,-44,-55,3,110,-11, 
  /* [26][0][][] */ 125,-55,-46,44,94,94,-64,-17,-23,33,-13,21,-18,-16,-99,-67,39,127,20,74,-37,-33,25,-43,-22,-50,19,39,-59,50,43,-7, -62,-98,35,-40,-19,32,-48,48,-53,42,1,-81,-11,-1,22,-31,10,8,20,75,-26,-37,-51,32,7,-30,6,14,-27,24,-34,52, -47,-45,31,-9,-44,-20,61,-47,-27,40,-79,18,81,11,-7,40,44,4,47,-47,65,58,18,-13,79,-97,-42,-6,-87,-25,-76,-41, 
  /* [27][0][][] */ 5,27,-52,3,-6,-51,-55,-54,-16,56,-3,-9,1,-14,-38,-30,-7,-43,-28,-81,-22,37,4,-46,-70,53,-8,33,82,21,18,-8, -87,-68,66,20,-26,-8,13,-52,-6,-80,-15,-6,-49,-5,7,-36,-31,-44,32,-51,1,-35,-127,28,12,-26,-34,15,28,58,61,42, 7,-31,-10,-96,-110,-37,-64,58,-23,-79,83,63,-28,-4,27,93,-58,-13,-92,-46,-21,-72,-30,-46,-113,-48,3,-33,23,-68,-57,-26, 
  /* [28][0][][] */ -34,28,-28,-23,-41,-93,-55,-56,37,-75,-28,55,-10,-46,-126,52,21,105,-32,72,49,-42,29,50,27,1,2,-81,-67,-30,60,-94, -48,63,-81,-83,-78,-16,1,25,-91,-25,-32,52,-23,37,-9,-5,20,-95,-5,-33,-113,-66,-106,10,9,-29,-83,17,-120,-127,-83,-59, 14,97,-49,-42,3,39,40,36,-53,-1,4,-65,-14,-6,-85,-43,-19,-102,-63,-114,-32,-31,-47,-11,39,-34,-77,66,-14,7,-37,50, 
  /* [29][0][][] */ 29,-43,-38,-65,-78,54,23,-60,-47,100,7,-29,45,3,-1,-19,14,1,-8,53,25,5,81,26,57,-63,12,-30,32,58,6,9, -74,15,-55,-10,24,-53,-20,-68,-58,53,19,5,31,-18,-65,-46,67,-117,-64,36,-48,-26,53,-42,28,-67,3,43,-55,35,-35,-28, -81,-10,8,-50,-37,-52,-41,-27,-88,-51,63,116,-2,-41,-72,-33,38,-40,20,28,-50,-41,-53,-23,14,-78,9,-47,-127,15,-62,32, 
  /* [30][0][][] */ -47,48,-12,-44,54,-6,54,37,-23,64,-8,22,12,-29,-33,60,60,13,3,-5,57,17,26,-62,53,57,50,18,8,-33,-94,19, -80,-68,-18,29,-65,57,-8,-19,-28,34,-33,9,-63,-23,-58,40,-5,-39,-13,9,-21,79,-99,-7,-10,-121,64,39,-40,-27,27,-14, -47,-16,-27,66,70,-70,43,-7,-65,34,-27,64,88,42,-46,-2,76,45,82,50,-4,43,82,5,121,-103,-23,-42,-127,2,-52,-87, 
  /* [31][0][][] */ 117,-3,-88,15,72,39,-101,-15,-98,17,-17,-51,-76,19,-54,-80,82,53,37,127,-58,-61,13,-34,15,-30,-54,-28,-64,-7,3,-50, 25,-60,-69,9,-63,25,8,37,-29,47,28,-19,-12,-11,3,-73,15,15,11,61,-27,3,-4,-25,8,-109,-40,18,-48,5,4,80, -10,4,10,-64,-23,-52,63,-64,-24,37,-42,-13,34,20,-26,-41,-31,-32,-14,-23,41,48,15,-38,-15,-101,-71,-21,-86,45,-116,-38, 
  /* [32][0][][] */ 40,20,-71,-69,-28,-88,-56,2,5,-31,-103,-26,-64,-77,-78,-38,-55,-65,-26,26,-36,-40,-2,-48,50,-68,54,-115,-84,7,-68,-6, -66,-35,-49,-67,12,-85,-65,9,12,-47,8,53,-41,41,-14,-16,-95,-47,-94,13,-96,-15,10,13,-46,-47,11,33,-127,-32,-25,-8, -8,1,-16,33,-49,95,-1,8,-13,-70,-38,-2,-14,51,-30,-4,-123,-11,-96,20,25,-13,8,-24,-62,-54,52,8,-76,-60,-31,-85, 
  /* [33][0][][] */ -43,10,24,80,-20,-17,-35,-32,-50,-72,-20,-68,37,4,38,-105,-59,36,4,-7,6,42,-66,51,31,0,-66,28,76,63,101,-70, -1,-40,50,-33,-67,-12,-42,-21,101,3,-7,-46,-29,-9,43,48,-112,48,12,32,0,-127,-54,40,-36,-60,2,29,-70,-66,-78,73, -1,-11,-77,-45,-26,-54,-7,34,-2,70,-37,-9,-57,-17,-19,7,-31,-50,-48,-3,-58,-16,16,-37,-45,50,-16,33,-57,37,-68,-73, 
  /* [34][0][][] */ 20,-38,-6,13,-76,-27,0,-12,-45,15,-42,12,13,-20,-9,-79,2,-11,-76,-29,-26,-65,30,38,-54,7,-5,17,-40,5,-74,-81, -64,-67,-71,-75,-29,12,-37,45,-56,-5,45,19,-76,-39,-63,-79,-71,-85,22,-65,-47,12,18,36,-1,-75,52,9,-58,-42,-68,-44, -33,93,-20,-47,10,95,-39,-14,8,-35,30,-55,-127,53,-9,-48,-68,-40,-45,-36,-5,-79,11,-31,-113,19,27,-29,29,-44,-25,-88, 
  /* [35][0][][] */ -127,-38,-77,-22,-5,-30,-115,-115,1,-78,-74,-65,-38,10,-80,-14,-16,-4,-46,-27,-79,-63,-17,-4,-55,38,42,50,36,-61,9,-84, -47,27,-77,-41,33,-37,-77,-48,-27,10,9,-38,19,30,-55,19,49,-25,13,-18,-51,19,-72,-17,-79,-24,121,33,11,-13,-3,-15, 63,-9,33,44,-100,3,14,5,-5,-8,51,-18,42,-22,69,46,-53,-42,-22,62,54,-81,-35,-28,102,6,16,-9,3,-16,86,21, 
  /* [36][0][][] */ 18,-18,29,-34,4,-60,34,38,17,-17,19,38,11,-4,9,23,32,18,60,-15,-12,29,-10,-34,47,-33,40,13,-49,-13,-45,16, 39,-34,-40,-42,11,18,-1,-11,32,-12,-51,-1,-8,16,-60,-43,27,-33,-8,14,-49,-10,-26,-72,-8,-4,9,18,-95,-4,-62,-39, -19,11,-27,-39,66,-47,-16,41,-45,17,-22,-24,-28,-7,-51,-16,47,-1,-7,13,-13,-38,-36,-1,-21,-20,-25,-11,-127,4,-42,-37, 
  /* [37][0][][] */ -35,-38,38,-39,9,43,51,29,3,0,3,75,54,20,65,18,43,9,-46,-32,29,-64,39,-8,29,-127,-37,-21,3,3,8,67, 110,43,-6,2,65,69,44,24,-23,-90,63,-10,-59,9,-53,46,89,-36,10,0,-7,-22,71,2,-49,-1,63,-23,-14,-56,-81,-55, -23,-7,-99,-1,-9,-8,-115,36,4,40,1,16,-44,-34,-60,-124,-49,8,47,9,-69,49,-83,-78,-105,-91,-8,-84,-44,22,80,-6, 
  /* [38][0][][] */ -31,-54,-13,-33,-68,-105,3,-10,-16,8,23,36,-59,17,-43,63,-61,49,37,-41,-6,-36,-49,-35,-17,-24,118,2,58,-52,-24,-34, 28,5,-7,-44,-44,-51,-37,31,-53,-36,7,-5,-2,26,-38,23,-61,54,8,-28,-14,0,2,-62,-11,7,47,-6,45,-82,-6,-42, 45,14,10,4,-127,-47,48,-15,-48,-9,-28,13,52,11,-19,45,-18,-10,-7,12,35,-73,-46,-4,32,-20,-31,-68,78,-33,55,-21, 
  /* [39][0][][] */ -95,-95,-35,-26,-14,53,31,9,34,7,-29,-12,44,21,20,-18,108,1,-53,-40,36,123,20,-39,-21,-37,-15,58,-68,-83,-127,-43, -65,-103,2,38,-77,28,23,-64,-64,1,9,-58,-48,-17,-32,-43,-52,9,-19,-27,-32,24,-6,9,4,-5,-22,41,-111,57,-22,-62, 27,-43,-21,-39,42,-79,-15,-8,-89,-62,-10,96,-9,20,-4,-20,10,-59,-19,14,-69,-76,20,4,3,-26,-37,74,-92,-50,61,-37, 
  /* [40][0][][] */ 11,76,-9,61,7,108,-85,-44,-27,-67,41,-20,-30,-8,-19,-71,-82,94,-52,-64,-31,-40,27,13,-71,49,-41,41,25,-44,11,-16, 40,-53,-76,31,44,-81,-67,-19,0,5,48,-34,-44,17,-39,-23,80,-5,-6,25,-61,-127,-17,-5,-65,-26,0,31,19,4,20,6, 53,-50,31,-12,-1,90,36,-46,-56,-29,-43,6,24,22,1,-45,25,93,12,-16,22,5,-14,-16,-30,43,-37,-23,43,1,-33,-46, 
  /* [41][0][][] */ 1,20,-22,-14,6,-72,-29,-24,-62,22,29,-31,-51,-15,-28,-33,-3,60,-31,22,-28,-21,-51,23,3,-82,-1,-18,-46,-37,-13,19, -111,17,-56,18,-83,-26,-1,-19,-29,-52,-27,28,16,25,-25,-9,0,-19,-1,-73,-18,-68,-21,-18,-33,-43,-36,-52,-29,-59,-49,-61, -25,127,-60,-117,-59,-51,-112,-18,-32,-45,-65,-63,-32,6,-81,-37,-79,-35,-38,-31,-80,-57,4,-70,-113,80,-14,31,42,2,7,-14, 
  /* [42][0][][] */ -40,8,-47,-48,45,-63,-67,17,-52,3,51,51,-54,-11,-47,0,1,-17,-42,-48,-87,-100,-40,-77,-26,51,21,39,62,-107,-58,-18, -1,51,-25,-17,-27,-126,46,-3,-61,-2,-28,-44,60,-5,-95,-52,39,39,7,-73,-20,-53,36,-75,33,85,2,-14,23,-16,53,-82, 118,-57,10,36,-16,22,-98,56,18,-69,127,80,-55,-32,19,54,-114,-14,-65,7,-27,2,-109,-20,8,-63,107,-9,-36,-96,-41,59, 
  /* [43][0][][] */ -51,28,-13,-68,-13,-41,-13,-2,31,11,-10,36,5,-17,51,14,-9,5,-17,-127,-26,41,-4,4,-74,65,11,73,13,8,-9,43, -97,-7,16,45,-29,50,-9,1,-52,-54,-23,53,-3,-31,11,20,61,-14,50,-59,-10,29,-20,20,48,-84,-17,38,27,-19,66,-47, 17,-13,36,-26,51,-87,-54,34,-25,-3,-49,19,-76,4,20,51,16,-37,24,-27,-88,-22,-37,-35,-40,-54,61,-24,-64,-81,-73,-12, 
  /* [44][0][][] */ 16,20,-7,-42,63,127,-73,-26,27,23,26,0,-31,-23,-42,71,47,56,-14,-48,-41,18,-53,-51,54,10,57,-57,-9,47,-2,-27, -55,-24,-17,-64,18,-29,8,34,-60,20,-53,-64,-23,-6,-38,-19,45,-46,-47,6,3,-10,-30,-40,-18,-39,-45,-3,-47,-9,-36,-6, -6,-73,-60,-73,90,-54,-24,53,-22,2,-73,-43,-2,-22,-50,-8,121,5,26,-12,-18,22,4,-55,-25,-29,-80,-25,-22,-15,-56,-27, 
  /* [45][0][][] */ 22,-30,86,0,-14,-73,3,96,17,5,-1,127,68,-14,34,35,69,4,27,-38,28,47,-10,36,48,-56,39,-6,25,-72,-28,100, 56,-69,-13,44,39,-14,3,15,-48,12,19,16,-26,-25,-16,34,31,-16,18,15,-6,45,20,-4,-25,-78,52,-50,-29,-39,6,-53, -106,-5,-25,-13,-81,63,-40,-92,-35,-55,-30,-54,-78,-31,-16,-24,4,-21,7,-7,-37,-81,28,-37,-35,107,-40,31,-85,-49,23,-80, 
  /* [46][0][][] */ 23,-13,29,-72,-33,84,0,-77,-48,-17,-84,-58,66,-31,-46,-9,44,-11,-8,3,-41,-28,85,40,1,-52,-34,-13,-50,-2,-8,40, 71,-17,-21,-127,-25,-42,11,-16,-62,12,-70,-13,-37,-23,30,-39,-105,-51,-27,-7,-101,25,35,13,-84,-53,17,55,-51,-40,-109,-65, -69,39,-75,20,-4,-42,-43,-70,-120,-76,3,-98,-70,53,-60,-7,-85,-30,-73,-76,-53,-104,-109,-55,2,-76,9,-58,-19,11,-72,0, 
  /* [47][0][][] */ 18,38,-10,-29,20,-127,-28,-3,-9,-101,-14,23,-86,-46,-22,-51,-37,-8,-14,28,-44,-39,8,-37,-30,-11,-105,63,17,-56,85,-31, -59,-13,21,25,-22,-2,-27,-35,1,-68,43,-23,-40,-10,4,-60,-60,14,-32,-38,2,-26,-79,-70,-18,-124,-65,-28,34,23,45,-35, 6,-17,0,-17,-17,24,2,34,72,-118,25,49,-55,11,45,-71,-32,-75,19,2,-54,-96,15,50,14,86,20,14,68,-72,-66,25, 
  /* [48][0][][] */ -57,-103,44,-39,-84,-49,-7,-48,-36,-22,-35,48,-79,-30,-80,-100,60,-77,30,-89,-32,60,-32,-2,19,-127,-56,-13,-116,66,-49,-40, -16,-72,-6,14,40,-89,21,52,-103,-7,-54,34,-54,55,-9,-3,-108,-68,49,-108,-96,2,-48,-49,-65,-69,-78,19,-18,-67,-7,-97, 12,11,-58,-50,-59,-21,41,58,10,-1,-93,61,-7,-20,-99,-6,-17,43,-76,-39,17,-18,-99,-13,-36,-83,33,-30,-33,-92,-60,41, 
  /* [49][0][][] */ 11,1,-41,-18,62,-13,-49,27,-14,26,22,19,-19,-25,-62,19,23,32,-7,34,-36,1,-24,-66,-4,-5,36,-17,11,-15,-51,-66, -18,-20,-44,-33,28,-19,-21,-14,-43,-30,-79,-78,-13,17,-43,-17,28,4,-4,-22,5,-19,-12,-22,7,-3,-13,25,-61,-43,-43,-20, -84,-40,-41,-49,35,-43,-34,39,-32,-21,-57,-3,3,3,-74,12,25,-26,20,-11,-45,-15,-40,-42,-19,-36,-36,48,-99,-57,-127,9, 
  /* [50][0][][] */ -57,-20,-32,-27,-60,-127,-44,-29,-29,-82,-64,-12,-32,-4,-18,-2,-77,42,-26,-2,-37,16,-36,16,-49,61,-14,25,-7,-39,-7,-29, 7,20,-22,-14,25,-13,-40,-46,-11,-16,26,-13,-15,21,-62,-3,3,7,23,-38,-39,7,23,-20,-47,36,91,-25,3,-13,8,-14, 73,10,22,39,-66,13,30,6,-28,5,38,-20,22,-17,30,21,-6,17,14,49,30,-18,20,-3,1,22,20,-51,22,17,27,5, 
  /* [51][0][][] */ -5,-61,-4,-62,-82,-27,-8,53,8,-13,54,16,-127,-17,-22,35,-43,-59,0,36,-48,-88,-49,-28,12,-14,26,-29,13,-39,-46,2, -25,-13,-30,-41,-69,-63,0,26,-14,29,-16,-27,26,17,0,13,-41,-13,-22,-7,22,12,9,-39,-32,-10,24,-32,-3,-46,-63,23, 5,22,-4,32,-118,65,10,-1,-53,-43,31,-34,-102,36,-24,23,-66,-67,-11,-15,-23,26,-4,11,-49,8,32,-10,-21,25,14,2, 
  /* [52][0][][] */ 89,59,-63,-47,93,0,-25,40,-49,5,-41,77,-12,-20,-26,-73,98,10,-93,54,-47,-8,9,-22,-62,-62,-25,-19,-91,-15,-56,-16, 54,34,-117,2,40,13,-86,-6,15,-7,-27,53,-12,-5,-72,-50,-59,-17,-74,-31,-95,-38,-73,-3,-85,-4,-36,-55,-127,2,-69,-38, -18,-16,-17,-58,100,-12,26,25,16,16,-21,35,-29,-28,-18,-17,76,-80,31,23,-27,-5,-61,35,57,-35,-24,2,-122,-67,-62,54, 
  /* [53][0][][] */ -96,22,9,24,13,75,33,73,-52,-53,75,9,-12,16,-17,-31,87,-52,-15,45,17,-77,20,-32,21,44,74,-43,-105,-28,63,-26, 105,80,-108,-89,82,-76,-53,8,30,-79,-17,-29,9,-1,-16,-107,29,21,-26,74,-21,-21,-60,-77,-41,-38,30,14,47,-37,-92,-51, -43,17,-76,33,-7,-55,-127,-6,-74,31,-37,4,-79,23,-79,-96,25,26,-1,-22,-92,-74,-29,-85,-59,-51,-60,21,27,54,-2,-59, 
  /* [54][0][][] */ -32,7,-27,8,-127,-34,18,-30,0,93,-39,25,26,2,-17,61,20,-64,-50,22,27,66,12,-37,-13,26,-20,12,9,-26,-73,45, -30,-41,37,-64,-84,-35,46,-21,4,-1,-15,43,21,17,-16,6,9,-10,-66,-46,54,7,9,-13,59,-36,-17,-25,-48,15,25,-1, 11,19,45,28,21,33,44,39,-17,-83,55,42,25,-17,7,32,14,37,-4,3,58,30,47,-2,-31,-69,37,-16,36,-10,1,-13, 
  /* [55][0][][] */ -4,19,84,9,-62,-108,-3,5,5,-53,-6,69,-40,12,57,11,-95,19,71,1,-33,-5,-74,115,-4,-68,-7,-39,22,-19,97,-3, -28,-21,-91,1,-55,-69,-49,-22,33,-9,0,-19,-15,5,-15,9,43,-51,-58,-38,-13,0,76,-43,-66,0,6,-43,-32,-43,-87,1, -3,46,-44,-20,-65,48,15,-86,3,15,-92,-44,-87,-12,-39,-50,12,1,-57,-31,-69,-57,44,0,-73,127,-13,-16,-30,-51,-4,-66, 
  /* [56][0][][] */ -71,-19,2,60,10,-58,9,-101,-23,-16,-46,-38,41,0,-28,13,-64,-29,-77,-38,-24,60,5,-45,-46,47,-55,-15,54,18,68,-37, 3,-31,71,-16,35,67,-12,-18,0,-68,-58,-23,-52,-1,18,-30,-75,86,36,29,-25,2,-82,42,-17,-8,-32,0,-17,-1,-69,61, -37,2,-117,-63,10,-8,-56,52,-29,-33,33,9,-92,-32,-14,-40,47,-82,-93,-10,-61,14,54,-74,-82,39,17,-99,-74,-8,-127,-50, 
  /* [57][0][][] */ -97,-22,-71,15,57,-42,-23,-67,-69,90,9,-91,17,4,-59,4,-59,13,-16,27,-25,-38,-12,-90,-26,-81,-4,-47,-13,78,68,-58, 43,-5,-37,-14,-29,16,5,-17,-11,-21,-19,-27,-120,23,21,42,-115,-14,46,8,-44,-38,-40,40,50,-41,14,22,-127,-48,-11,-20, -86,-10,-107,-81,23,-103,-37,59,44,-42,-1,68,17,-44,-2,-14,-15,-79,-23,-3,-36,-45,77,-37,-44,53,-32,-49,40,-46,-44,-15, 
  /* [58][0][][] */ 28,-38,-74,-10,68,49,-89,-15,-18,10,-44,-32,-48,3,-74,-68,-4,-28,-30,-41,-87,-45,-109,-40,-35,30,-29,5,-113,48,25,-117, -43,-4,-38,13,27,-123,-18,3,-74,39,-42,-5,-33,14,-29,-96,4,27,36,95,6,-95,-6,17,19,-108,-82,-14,-48,18,23,61, 46,-18,11,-40,-11,-80,31,-4,28,51,-53,-17,36,14,18,38,20,-76,24,-55,6,109,-3,-37,9,-127,-37,0,1,25,-70,16, 
  /* [59][0][][] */ 36,-28,0,-77,-61,-32,27,31,-48,-52,-2,-15,-4,-19,-10,59,-24,12,28,-41,-12,-68,-91,44,38,78,19,-40,17,-80,-28,34, 36,-73,7,24,-80,56,-19,33,18,33,75,38,4,-22,-10,102,-68,-127,-101,20,24,72,-61,-6,-24,-83,86,51,1,-5,-7,17, -13,-3,-41,-82,-73,-36,31,-46,-30,-91,-45,-43,-16,-33,-28,-12,-22,-65,-20,50,-21,-39,-16,-5,-43,-8,-48,-8,-32,-28,-6,-14, 
  /* [60][0][][] */ 7,-22,-93,8,9,38,42,-24,13,127,-42,-80,43,-20,0,-44,2,-4,2,83,14,1,-16,21,32,40,-53,8,-45,44,-6,12, -15,30,-21,-26,3,-44,25,-11,-39,-6,-9,-31,17,-16,-3,-42,56,-63,-27,-33,34,57,-3,-21,1,105,2,24,-99,-17,-41,13, 14,44,-8,-36,-1,55,22,-18,-51,-35,-6,17,-23,-17,-27,-35,12,0,19,-32,-16,-44,-19,-27,22,-16,-50,5,-83,16,-54,-22, 
  /* [61][0][][] */ 9,9,-21,36,-21,-64,-77,-81,-42,35,-11,34,-21,-30,-39,-15,-61,-43,6,-34,-62,68,-73,-45,-15,32,50,-44,43,64,64,-36, -62,23,113,28,-29,23,14,-20,35,-112,-18,20,12,1,17,-19,2,-19,81,-80,-48,-23,-64,53,52,-30,-49,3,-25,-10,0,46, -31,43,-111,-92,-89,-65,-23,67,26,-21,34,9,-12,15,-56,47,-6,-75,-95,-13,-12,47,17,-127,-90,27,40,-102,62,-46,-67,-64, 
  /* [62][0][][] */ -13,-4,8,-31,-24,-8,31,-1,45,17,-42,-15,47,-13,40,16,43,-56,-20,-36,32,88,14,-5,-1,-112,-24,21,-32,-6,-72,39, -43,-9,33,35,-51,42,60,-23,-65,-13,14,8,18,-20,7,-30,15,30,-37,12,28,37,33,-5,23,-86,36,8,-29,20,-12,-2, 29,-1,21,-89,58,-1,-75,23,-3,-82,6,45,-80,2,17,-65,19,15,9,-11,-127,-12,-15,-9,-16,-64,37,-2,-106,-90,-71,-17, 
  /* [63][0][][] */ 59,-26,-46,-27,-23,-61,-20,-95,2,-96,-37,19,-80,26,-42,31,-54,-20,-100,80,-19,-35,-90,-29,-32,-127,63,3,-113,-25,-107,-70, -43,-62,-77,8,-25,-18,6,-97,-81,-2,-47,13,-39,-36,-87,56,-54,-55,43,-18,-93,-43,-53,14,-80,-89,13,83,-33,-25,-93,22, -57,-52,-16,-43,-42,32,40,2,21,-63,-9,24,-34,-28,-26,-38,-62,-18,-28,-1,-64,23,-38,3,11,-85,-45,28,-49,32,-77,-25, 
};
const TfArray<4, int> tensor_dimension15 = { 4, { 64,1,3,32 } };
const TfArray<64, float> quant15_scale = { 64, { 0.0037385665345937014, 0.0021786715369671583, 0.0045647402293980122, 0.0053155263885855675, 0.0048072035424411297, 0.0055001764558255672, 0.0038672795053571463, 0.0042636380530893803, 0.0026520106475800276, 0.0059890574775636196, 0.0040401262231171131, 0.0063861347734928131, 0.0025618590880185366, 0.0029379485640674829, 0.001686908071860671, 0.0042997831478714943, 0.0036615002900362015, 0.0084055028855800629, 0.0083566224202513695, 0.0051397471688687801, 0.0045864852145314217, 0.004493403248488903, 0.0059747491031885147, 0.0018973107216879725, 0.0061270799487829208, 0.0045737093314528465, 0.0040209097787737846, 0.0057722148485481739, 0.0017503401031717658, 0.0023724297061562538, 0.0035875674802809954, 0.0048260027542710304, 0.0021717483177781105, 0.0050525423139333725, 0.002628594171255827, 0.0065449438989162445, 0.0078750830143690109, 0.0045842225663363934, 0.0058729765005409718, 0.0037707872688770294, 0.0061290846206247807, 0.0046862461604177952, 0.00355768040753901, 0.0054251085966825485, 0.0053540091030299664, 0.0049200486391782761, 0.002491288585588336, 0.0042121806181967258, 0.001605550991371274, 0.0056068398989737034, 0.0073177344165742397, 0.0052770553156733513, 0.0039136600680649281, 0.0053121782839298248, 0.0067136972211301327, 0.0055220038630068302, 0.0048676328733563423, 0.00356128322891891, 0.0058655077591538429, 0.0052742771804332733, 0.0051864837296307087, 0.0049325991421937943, 0.006934063509106636, 0.0027521036099642515, } };
const TfArray<64, int> quant15_zero = { 64, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data16[32] = { -3519, -4267, -3508, 2849, 2608, 1310, -3341, -152, -392, -2130, -62, -2600, -6337, -3949, -555, -2336, -447, 933, -2663, -1492, -2938, -1609, -394, -1459, -3007, 1633, -760, 454, 1796, -2769, 1756, -3723, };
const TfArray<1, int> tensor_dimension16 = { 1, { 32 } };
const TfArray<32, float> quant16_scale = { 32, { 5.5839533160906285e-05, 5.3143474360695109e-05, 5.4445961723104119e-05, 6.6663160396274179e-05, 5.6790318922139704e-05, 7.3723800596781075e-05, 5.5070308007998392e-05, 6.7486078478395939e-05, 6.0080692492192611e-05, 6.1957660363987088e-05, 5.9161029639653862e-05, 4.6112370910122991e-05, 4.4257412810111418e-05, 2.4461913199047558e-05, 5.7692872360348701e-05, 7.2677670686971396e-05, 6.2901570345275104e-05, 7.6862794230692089e-05, 7.8537021181546152e-05, 7.687236211495474e-05, 7.0385271101258695e-05, 7.9357887443620712e-05, 7.0650065026711673e-05, 5.9985341067658737e-05, 3.725718124769628e-05, 4.8404661356471479e-05, 7.2746923251543194e-05, 6.1648766859434545e-05, 8.6195890617091209e-05, 8.1874699390027672e-05, 7.8204735473264009e-05, 6.9608191552106291e-05, } };
const TfArray<32, int> quant16_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data17[32*1*3*16] = { 
  /* [0][0][][] */ 85,-44,-73,-45,-68,-46,103,19,86,-51,-17,34,-18,82,22,71, -67,51,-98,39,-8,-12,52,63,-25,-32,-24,100,127,3,-106,-24, 14,19,-12,1,21,-41,-112,66,-122,-117,-29,84,72,-95,-12,-60, 
  /* [1][0][][] */ -81,-45,14,-127,26,-17,78,35,75,-40,-3,-45,-32,-111,59,16, -69,32,-72,-21,68,-78,28,-50,-72,-21,22,-24,-18,-78,68,-48, -61,37,-20,-52,54,-21,-41,-24,-63,-77,-7,-5,37,41,49,-96, 
  /* [2][0][][] */ -27,-47,58,18,-47,90,84,-47,11,114,-91,-41,-10,-93,-82,24, 56,-74,1,-45,-72,38,-59,-40,37,-73,-100,-101,-26,44,121,74, 13,25,-46,22,90,-114,-12,-75,-74,-62,84,-27,19,54,-127,-32, 
  /* [3][0][][] */ 4,37,1,-35,59,-2,99,-68,-90,-21,27,-23,-10,-34,69,-79, 6,-113,-37,-40,-82,53,-12,-127,-70,18,11,-74,-73,-83,-12,-5, -23,-8,2,38,4,-12,19,-117,46,-5,-74,-53,-24,53,90,85, 
  /* [4][0][][] */ -62,-47,-62,42,-113,-35,-85,48,39,8,-8,41,15,61,-84,-42, -127,-11,-66,-30,-98,8,-22,88,-8,-33,1,75,55,-36,-115,-91, -1,-125,26,-71,-121,33,-20,85,-18,21,113,95,89,-42,-120,-42, 
  /* [5][0][][] */ 66,-48,-37,-18,-127,19,-47,-95,19,21,-72,-48,-21,-69,-12,-43, -37,-22,-37,74,-41,29,-48,-30,71,-39,-57,-26,-23,-17,9,39, 7,-40,-32,-52,-9,-28,-44,5,-111,-79,-9,75,12,8,-76,-37, 
  /* [6][0][][] */ 23,9,-44,62,-9,1,2,-47,7,14,-36,-100,-72,63,-18,-10, 55,-71,49,-59,-11,81,62,26,24,48,-73,-53,-2,-99,-69,59, -69,-56,-59,-32,-19,-65,0,-127,-29,-61,-56,-95,-87,36,-54,-8, 
  /* [7][0][][] */ 31,-29,-59,38,-30,8,30,74,-20,-14,5,59,25,29,-104,-5, -23,-52,-40,51,-127,-26,-14,32,17,5,-18,26,0,26,-28,-44, -35,-42,-29,27,-31,-32,-34,47,36,18,-17,78,36,16,-126,-27, 
  /* [8][0][][] */ 28,20,18,43,-35,-40,21,-86,-4,21,-88,-36,-32,51,81,45, -63,-49,27,-19,-62,-55,-12,12,-5,17,-5,-52,14,42,74,-27, 53,-30,9,32,-31,8,-24,-2,-91,-33,-102,-41,-22,4,127,-23, 
  /* [9][0][][] */ -20,-68,-33,84,-127,3,-56,5,-65,-47,12,6,45,-3,-73,24, 3,-36,-37,49,-16,-30,-62,68,-112,14,-8,22,49,44,-53,-65, 9,-90,14,-27,-48,63,-14,-27,-54,-13,28,-32,3,-71,-79,79, 
  /* [10][0][][] */ -27,-68,-42,4,-103,-40,-9,-120,-20,-45,-83,-96,-99,5,-110,-55, 93,-30,-87,-11,18,-34,-7,-95,-12,10,-98,-40,-94,33,-127,-38, -65,-55,-30,74,14,3,1,-29,94,22,-68,-46,-83,47,-66,-4, 
  /* [11][0][][] */ -43,-20,64,-127,-57,57,84,21,18,-13,-76,-29,0,-27,-8,41, -2,-65,-84,-26,-29,-94,-59,-77,56,7,-50,-72,-67,37,-39,-86, -86,1,-80,27,-7,28,36,-66,55,-15,-5,-88,-47,-2,-48,-20, 
  /* [12][0][][] */ -68,-59,-100,91,-65,-127,39,56,-31,47,4,35,-17,44,-43,-61, 70,12,31,-42,8,57,55,55,-54,12,-86,-116,-62,6,3,57, 40,69,-10,-66,18,28,-34,-94,-53,-34,-33,-69,-6,6,-118,14, 
  /* [13][0][][] */ -30,-21,-122,-77,54,-91,-97,-94,-57,59,48,-76,-31,-34,64,-31, -74,-106,-108,20,-62,37,48,-9,-30,-127,-89,-93,-1,-20,33,-106, -62,-52,-24,-33,54,-85,-61,-74,-81,43,-37,31,-50,-47,10,66, 
  /* [14][0][][] */ 53,-11,-8,-49,-59,72,127,-38,-34,-21,-2,-39,15,-43,-27,23, 21,-16,38,32,-104,-55,-9,-93,-18,-19,-72,-26,-7,7,50,-10, -16,-88,33,-8,-68,4,49,-33,67,-52,-6,-51,-12,28,82,10, 
  /* [15][0][][] */ 56,109,-64,-20,127,18,-27,-90,-58,38,-66,-62,-44,17,-62,26, -45,96,-59,13,107,13,14,-85,-42,-18,-49,-17,-50,37,-59,-29, 30,96,-80,-62,46,-19,-11,-56,-28,-30,-54,-50,-117,7,-85,28, 
  /* [16][0][][] */ 16,-66,-3,40,-106,-26,-127,14,-33,10,-13,60,43,59,-116,-62, -15,-68,14,-82,-77,46,36,19,-2,-3,58,47,52,-45,-94,21, -11,-66,-39,11,-121,-33,-117,90,-24,-9,60,86,35,0,-101,-46, 
  /* [17][0][][] */ -12,42,-127,64,3,-67,13,-38,20,-84,-107,-26,-15,7,-21,-12, 54,11,-17,-34,42,-50,-27,13,-40,-25,67,40,-14,-26,30,-41, -63,46,-34,-25,52,27,-34,41,38,-16,19,16,-36,-32,-11,52, 
  /* [18][0][][] */ 3,36,-21,-18,-11,55,30,34,-86,3,57,-6,10,-41,12,23, 37,-45,-38,-34,-61,2,34,-22,-22,8,46,-22,15,-11,-25,24, -38,18,-80,3,-41,-35,-10,12,-21,-21,-43,5,-8,1,-127,-74, 
  /* [19][0][][] */ 3,7,-33,-26,23,7,-56,56,10,-43,56,37,-18,-60,2,-60, 4,-42,4,-7,-18,10,41,-4,-53,-74,19,-32,-3,-30,-54,47, -25,-127,3,18,-92,-80,-87,33,-111,27,44,62,22,45,-6,-50, 
  /* [20][0][][] */ -40,73,-75,82,47,1,24,-35,-12,-3,9,-23,-57,31,-29,-44, 53,31,19,-27,55,30,39,-41,-92,21,-127,-71,-60,-38,-38,47, 10,-7,-30,34,10,12,71,-83,-11,-37,-4,-37,-71,16,19,-11, 
  /* [21][0][][] */ 16,-2,-88,70,15,-39,-2,-78,-44,-7,-127,-25,-6,11,-62,-44, -10,33,30,47,37,79,73,-6,-68,42,-71,-8,-2,11,14,31, -7,33,3,-68,7,2,63,19,-58,-11,57,7,-15,-3,20,-39, 
  /* [22][0][][] */ -25,-24,-23,61,-79,-81,-85,70,-27,52,-42,-29,-9,17,-11,-56, -6,-79,38,-52,-7,5,23,64,31,-25,0,-44,-54,-70,8,52, -48,22,-52,-8,-22,-80,-35,-43,44,2,-2,-127,-41,-2,73,-44, 
  /* [23][0][][] */ 41,-67,46,-19,19,38,55,-89,-36,-69,42,-50,-21,-47,65,15, 46,-3,55,37,-102,-44,-19,-47,-13,-22,-127,6,-39,35,35,54, -42,-26,-9,-15,-37,-48,-36,20,-92,-86,39,-57,34,-96,-47,-62, 
  /* [24][0][][] */ -38,104,27,97,-101,48,8,52,-62,21,-4,-48,-45,52,-22,-67, -18,115,83,-64,-7,69,68,1,-125,-97,27,-29,-10,-99,-79,66, 6,5,-104,-37,-127,-75,-25,-11,-45,-12,38,0,44,99,-94,44, 
  /* [25][0][][] */ 14,-14,78,-18,-53,-3,21,-22,-5,65,69,-71,35,-45,82,46, -127,-50,48,-102,22,2,-54,-50,119,40,-32,-83,-45,-110,41,29, 40,-46,58,-65,64,-83,71,-42,22,-54,-59,-5,-84,-109,111,-84, 
  /* [26][0][][] */ 24,44,-47,-12,36,4,-48,-9,-6,24,-46,15,14,49,-71,37, -109,42,-22,53,122,0,-29,-102,9,26,-70,-70,-12,10,39,-25, 13,57,-13,-42,83,-54,-3,-127,77,-35,-67,-121,-46,-37,-59,-25, 
  /* [27][0][][] */ 11,18,-21,-47,34,-10,-46,-12,-29,-16,-43,-61,25,-35,76,-56, -12,7,-41,-56,-20,5,6,-107,-52,-8,-70,-59,8,19,15,-3, -68,25,-16,-13,-14,18,78,-70,-51,-23,-70,-61,26,-13,127,-12, 
  /* [28][0][][] */ 6,127,-24,14,65,-52,29,-42,14,-9,-50,16,-8,0,22,-20, 17,70,-38,-15,95,2,-16,-29,-106,-43,-60,-27,-3,-4,1,-30, 28,32,-32,-4,65,17,12,-7,-74,43,-29,-8,32,14,-19,39, 
  /* [29][0][][] */ -28,-84,21,-37,-127,-21,-79,-36,18,-12,-8,0,24,-57,-96,-28, -32,-83,12,10,-89,-23,-59,-12,-52,26,24,-64,4,0,-20,-3, 66,-49,10,20,-10,56,46,-80,23,-13,46,-69,-32,-3,30,61, 
  /* [30][0][][] */ -45,22,27,-18,55,23,127,-55,-4,40,-11,-55,-89,-21,89,-56, 24,17,14,-33,38,-6,27,-73,10,-23,-11,-63,-61,-73,-23,-27, 84,-42,11,-11,9,-43,44,-49,-38,-53,18,-10,46,62,-3,37, 
  /* [31][0][][] */ 45,-86,-34,-5,22,-39,-28,16,-25,-20,27,30,69,-73,13,35, -86,-83,42,28,-75,-11,-11,-97,-59,-87,-3,-4,7,31,-85,-34, 58,-127,8,33,2,-7,-20,22,6,100,-51,-10,5,48,-66,32, 
};
const TfArray<4, int> tensor_dimension17 = { 4, { 32,1,3,16 } };
const TfArray<32, float> quant17_scale = { 32, { 0.0046932180412113667, 0.0044666188769042492, 0.0045760907232761383, 0.0056029255501925945, 0.0047731301747262478, 0.006196360569447279, 0.0046285660937428474, 0.0056720906868577003, 0.0050496803596615791, 0.0052074361592531204, 0.0049723843112587929, 0.003875666530802846, 0.0037197605706751347, 0.0020559823606163263, 0.0048489882610738277, 0.006108434870839119, 0.0052867704071104527, 0.006460187491029501, 0.0066009038127958775, 0.0064609916880726814, 0.0059157628566026688, 0.0066698961891233921, 0.0059380182065069675, 0.0050416663289070129, 0.0031314028892666101, 0.004068329930305481, 0.0061142556369304657, 0.0051814746111631393, 0.0072446186095476151, 0.0068814298138022423, 0.0065729753114283085, 0.0058504506014287472, } };
const TfArray<32, int> quant17_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant17 = { (TfLiteFloatArray*)&quant17_scale, (TfLiteIntArray*)&quant17_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data18[16] = { -5065, 11376, 63, -19303, 11297, -2412, -6028, 5282, 1880, -4419, 8453, 8488, 2625, -14929, 9252, -20476, };
const TfArray<1, int> tensor_dimension18 = { 1, { 16 } };
const TfArray<16, float> quant18_scale = { 16, { 1.8788632587529719e-05, 1.8575125068309717e-05, 2.1315468984539621e-05, 1.7405465769115835e-05, 2.1021309294155799e-05, 1.7847924027591944e-05, 1.791100476111751e-05, 3.1837684218771756e-05, 1.8367050870438106e-05, 1.567051003803499e-05, 1.9004366549779661e-05, 2.186592246289365e-05, 1.7283156921621412e-05, 1.7083306374843232e-05, 2.5003533664857969e-05, 1.6823734767967835e-05, } };
const TfArray<16, int> quant18_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant18 = { (TfLiteFloatArray*)&quant18_scale, (TfLiteIntArray*)&quant18_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data19[16*1*3*32] = { 
  /* [0][0][][] */ 30,78,-17,19,-6,38,34,-17,0,-13,15,-30,-37,-12,-41,-54,-6,-32,-32,-8,-25,-74,-2,44,-22,26,-55,31,33,-9,-56,-24, 1,52,67,-30,28,40,81,22,56,27,60,-16,-39,-66,-27,-30,-25,4,-6,-32,-23,-42,-17,-62,-21,-36,-28,-10,-81,-69,-51,-127, -14,13,25,42,41,56,67,32,66,37,50,-4,-14,-30,64,43,0,-34,15,39,41,32,21,44,-22,10,-4,16,89,38,109,124, 
  /* [1][0][][] */ -72,-20,-29,-32,-20,-9,29,55,-25,60,22,21,27,-33,-2,31,28,57,16,36,73,8,38,82,7,-25,-39,-102,-57,-93,-62,-117, -93,-23,-15,-26,-53,-19,-47,-17,26,2,-51,19,-32,-41,38,5,18,67,12,-19,42,-4,22,60,11,-53,-42,-101,-82,-127,-79,-99, -31,12,70,-1,-14,45,-15,63,49,-24,12,4,38,-18,-30,-19,25,34,75,-3,65,50,53,72,-26,-43,-27,-32,-72,-80,-113,-106, 
  /* [2][0][][] */ 57,-116,-79,-3,-44,40,4,-13,24,70,51,15,19,-29,50,-20,-33,21,-12,-10,-23,-17,-26,1,14,38,-13,48,-16,16,5,-14, -17,-127,-107,-53,-86,9,-67,-39,7,18,26,48,32,-34,65,17,-19,46,30,2,25,7,-5,29,17,42,20,11,42,-13,9,12, 51,-109,-28,-30,-5,13,-7,-24,-7,46,-7,38,-1,21,75,-14,0,29,25,-30,8,-12,-29,11,22,30,2,46,0,-1,30,-19, 
  /* [3][0][][] */ -11,72,110,121,105,5,54,28,38,-14,46,59,35,33,12,26,35,3,-41,-93,-64,-41,-1,7,40,-12,5,59,61,20,40,9, -4,112,101,122,127,-14,-2,1,-2,-17,21,8,-58,31,-116,-69,-4,-39,-49,-50,-44,-2,29,25,3,-20,15,-47,23,3,14,-65, -51,41,-2,59,89,-14,-70,-20,-63,-67,-54,22,-62,-56,-77,-55,-57,-59,30,38,-12,-42,-14,41,-9,19,-19,-9,47,34,-15,-68, 
  /* [4][0][][] */ 13,1,-15,1,-9,-36,22,-11,-13,-4,-14,-22,-33,-8,31,-6,-3,49,28,25,65,68,26,70,4,-24,-66,-88,-82,-38,-72,-43, -27,-13,-13,-48,-47,6,-28,-41,36,-19,-12,27,6,-14,26,-30,-19,16,23,11,13,-6,9,39,8,-70,-31,-85,-88,-116,-114,-81, -87,-29,4,-31,-36,10,22,28,-10,-7,-18,-51,-18,20,-32,-2,14,0,49,44,41,-27,17,49,-24,-54,-43,-86,-35,-66,-127,-112, 
  /* [5][0][][] */ -17,77,19,-25,37,-8,-29,-46,-80,-74,-60,17,-34,-26,-75,-69,-20,2,-25,30,-38,20,-4,-56,-7,-26,-17,-35,-16,31,18,56, -20,13,-45,-67,-71,-63,-62,-58,-30,-21,-22,-49,-49,-9,-15,-29,26,4,70,32,46,101,46,56,62,28,41,46,37,63,95,127, 36,32,34,69,89,50,34,49,-33,7,-8,-12,16,-43,-23,20,-22,1,15,21,6,57,-28,-36,-46,11,4,-33,-4,6,-32,30, 
  /* [6][0][][] */ -9,-32,-31,-27,-44,-32,-50,-12,-39,-10,1,-25,-9,78,16,9,58,12,-15,-38,-19,15,-56,-16,-14,-53,-46,30,-22,13,-48,-73, -68,-47,-75,11,-53,-60,9,-71,-19,-49,-67,-41,10,-50,-31,-24,89,37,-11,-29,2,-53,-12,-38,-27,-16,12,-21,25,-7,-49,-62, -87,-80,-95,-96,-106,-28,-60,-62,-86,-4,-56,-107,-83,-79,-84,-8,1,5,-17,43,64,-15,15,71,38,44,45,90,39,127,122,90, 
  /* [7][0][][] */ 31,5,20,-42,-30,-8,13,-29,-32,-22,-33,-21,-7,-31,-2,-31,6,-9,12,27,-7,-11,-29,-6,-17,-2,-5,-34,-30,4,15,60, 1,-19,15,-55,-29,-52,-66,-95,-80,-32,-35,6,-37,-37,-74,-22,-9,6,-4,41,-10,15,-4,-3,-27,-37,-26,11,-17,19,21,60, 43,-20,-14,-14,-19,-77,-127,-115,-85,-39,-31,-11,-13,-12,-24,-37,0,-27,5,21,7,10,-15,-10,-18,-16,-14,-21,-2,17,25,38, 
  /* [8][0][][] */ -3,10,9,16,3,-26,-14,67,24,29,60,47,20,0,-4,69,8,1,-4,28,28,34,3,51,24,91,106,102,78,85,88,15, -65,-62,-104,-37,-127,-56,-31,-4,-14,-75,-66,-35,3,-48,-43,-7,-31,-54,-60,-39,-76,-35,-36,-47,-34,-5,45,36,-16,40,-14,-59, -84,-26,-84,-99,-68,-88,-9,21,32,34,5,10,-27,3,-14,22,2,12,-23,-42,-22,-2,-33,-13,-57,-27,-11,6,-16,26,-55,-84, 
  /* [9][0][][] */ 7,49,58,63,69,-3,-27,17,-45,44,-52,13,-34,-22,-12,-57,41,42,-24,-18,-25,-16,45,55,1,17,-19,65,-7,4,30,-61, -81,-85,-11,-52,34,-31,-61,-117,-127,-97,17,-25,-6,-14,-55,11,31,-20,47,38,40,57,-17,18,-9,62,33,60,86,53,-17,-7, -62,-114,-77,-32,-16,-79,-45,-81,-39,-83,-50,-101,-100,-60,4,-47,-2,11,89,31,56,-8,54,87,72,20,65,-3,37,45,-5,61, 
  /* [10][0][][] */ 45,-1,-47,11,-15,-50,-61,-9,-47,-36,-55,24,-36,-77,-87,-10,5,-45,-34,3,15,-7,-16,-49,-37,-55,1,29,-32,28,56,65, -15,-90,-127,-14,-44,-119,-82,-109,-116,-74,-74,46,-77,-49,-18,-31,-72,-93,-9,-4,-79,-50,-22,-76,-64,-79,12,-49,-5,-21,32,53, -17,-41,-32,-18,-16,-78,-42,29,12,-4,-21,49,48,42,22,78,30,38,32,53,45,47,-3,24,80,25,40,67,20,4,73,88, 
  /* [11][0][][] */ -34,-22,-15,-45,-101,-113,8,-9,-40,-3,-10,36,-24,-87,-38,-12,-21,-10,-8,52,3,-1,12,-36,0,-41,-39,-41,8,17,36,105, -73,-15,-4,-3,-93,-113,-99,-127,-103,-41,8,34,-9,-49,-19,-13,1,39,14,41,22,40,-16,-27,-5,-23,-36,-9,-35,34,14,97, -49,24,4,-20,-13,-104,-64,-33,-53,-43,6,34,-36,6,-56,-31,4,-5,15,10,-13,3,30,7,-40,-9,-38,-3,-18,-16,37,78, 
  /* [12][0][][] */ -53,18,-41,-27,-63,-30,34,58,-28,-6,-21,31,-15,5,-55,10,-51,-52,28,83,41,-15,-20,-47,-61,-52,-11,-53,-40,-27,44,127, -19,-36,-17,-14,-88,-31,-49,-54,-70,34,12,68,-11,29,3,-5,-56,-21,0,64,-1,-3,28,-104,-27,-31,-3,-73,-54,-3,39,70, -52,-76,-71,-25,58,-83,-96,13,24,55,1,47,-9,26,-68,2,-5,-52,-29,65,-14,44,-34,-70,-64,-76,-6,-55,-16,-31,46,86, 
  /* [13][0][][] */ -5,63,77,59,76,28,94,26,28,24,13,-32,-23,56,50,63,28,42,16,-18,-33,26,-3,-47,-49,-63,8,-29,-41,12,-63,-22, 19,91,88,44,50,-1,89,-34,-3,-28,25,-7,75,60,11,27,5,-5,83,34,-10,32,2,26,-68,-69,-57,10,10,-62,-9,-75, -24,36,-9,0,-47,-58,27,-26,6,-61,-20,-8,-25,49,-42,61,41,-14,-1,-38,20,-1,34,31,-52,-64,-13,-41,-96,-16,-57,-127, 
  /* [14][0][][] */ 127,23,-24,-42,-37,-6,-33,-24,3,-18,3,-15,-17,-3,1,-21,-21,0,14,-40,-44,-15,40,41,23,48,33,6,3,40,-16,-56, 113,34,-5,25,20,17,19,-12,-23,-17,-40,-41,8,-21,-29,-30,-21,-23,-51,-51,-39,-45,10,12,34,54,-22,17,-15,13,-40,-90, 59,32,-15,-11,-41,-30,29,-15,0,-29,3,-31,-10,13,-2,23,20,-31,-41,-67,-56,-50,-7,28,-20,42,33,-1,30,-32,-2,-94, 
  /* [15][0][][] */ -22,111,11,13,-1,-72,-31,3,41,-33,24,-39,-32,35,-14,-12,52,-36,-1,1,19,-29,-7,36,25,-38,-25,-56,-62,-90,-89,-88, -14,87,-29,-30,3,-51,30,33,17,-29,-31,-37,-29,-42,32,40,29,-27,73,106,127,113,98,102,52,81,45,77,52,80,64,110, 63,-60,39,-15,-60,-66,52,16,56,34,52,-25,-15,6,48,19,6,50,24,-38,-7,28,-29,-47,-84,-25,2,-82,-77,-51,-39,-75, 
};
const TfArray<4, int> tensor_dimension19 = { 4, { 16,1,3,32 } };
const TfArray<16, float> quant19_scale = { 16, { 0.0050062118098139763, 0.0049493229016661644, 0.0056794849224388599, 0.0046376683749258518, 0.0056011062115430832, 0.0047555612400174141, 0.0047723688185214996, 0.0084831183776259422, 0.0048938817344605923, 0.0041753915138542652, 0.0050636939704418182, 0.0058261528611183167, 0.004605079535394907, 0.0045518293045461178, 0.0066621662117540836, 0.0044826669618487358, } };
const TfArray<16, int> quant19_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant19 = { (TfLiteFloatArray*)&quant19_scale, (TfLiteIntArray*)&quant19_zero, 0 };
const TfArray<4, int> tensor_dimension20 = { 4, { 1,1,20,32 } };
const TfArray<1, float> quant20_scale = { 1, { 0.0037530637346208096, } };
const TfArray<1, int> quant20_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant20 = { (TfLiteFloatArray*)&quant20_scale, (TfLiteIntArray*)&quant20_zero, 0 };
const TfArray<4, int> tensor_dimension21 = { 4, { 1,1,20,16 } };
const TfArray<1, float> quant21_scale = { 1, { 0.011897919699549675, } };
const TfArray<1, int> quant21_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant21 = { (TfLiteFloatArray*)&quant21_scale, (TfLiteIntArray*)&quant21_zero, 0 };
const TfArray<4, int> tensor_dimension22 = { 4, { 1,20,1,16 } };
const TfArray<1, float> quant22_scale = { 1, { 0.011897919699549675, } };
const TfArray<1, int> quant22_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant22 = { (TfLiteFloatArray*)&quant22_scale, (TfLiteIntArray*)&quant22_zero, 0 };
const TfArray<4, int> tensor_dimension23 = { 4, { 1,10,1,16 } };
const TfArray<1, float> quant23_scale = { 1, { 0.011897919699549675, } };
const TfArray<1, int> quant23_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant23 = { (TfLiteFloatArray*)&quant23_scale, (TfLiteIntArray*)&quant23_zero, 0 };
const TfArray<4, int> tensor_dimension24 = { 4, { 1,1,10,16 } };
const TfArray<1, float> quant24_scale = { 1, { 0.011897919699549675, } };
const TfArray<1, int> quant24_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant24 = { (TfLiteFloatArray*)&quant24_scale, (TfLiteIntArray*)&quant24_zero, 0 };
const TfArray<4, int> tensor_dimension25 = { 4, { 1,1,10,32 } };
const TfArray<1, float> quant25_scale = { 1, { 0.017998607829213142, } };
const TfArray<1, int> quant25_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant25 = { (TfLiteFloatArray*)&quant25_scale, (TfLiteIntArray*)&quant25_zero, 0 };
const TfArray<4, int> tensor_dimension26 = { 4, { 1,10,1,32 } };
const TfArray<1, float> quant26_scale = { 1, { 0.017998607829213142, } };
const TfArray<1, int> quant26_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant26 = { (TfLiteFloatArray*)&quant26_scale, (TfLiteIntArray*)&quant26_zero, 0 };
const TfArray<4, int> tensor_dimension27 = { 4, { 1,5,1,32 } };
const TfArray<1, float> quant27_scale = { 1, { 0.017998607829213142, } };
const TfArray<1, int> quant27_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant27 = { (TfLiteFloatArray*)&quant27_scale, (TfLiteIntArray*)&quant27_zero, 0 };
const TfArray<4, int> tensor_dimension28 = { 4, { 1,1,5,32 } };
const TfArray<1, float> quant28_scale = { 1, { 0.017998607829213142, } };
const TfArray<1, int> quant28_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant28 = { (TfLiteFloatArray*)&quant28_scale, (TfLiteIntArray*)&quant28_zero, 0 };
const TfArray<4, int> tensor_dimension29 = { 4, { 1,1,5,64 } };
const TfArray<1, float> quant29_scale = { 1, { 0.031311754137277603, } };
const TfArray<1, int> quant29_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant29 = { (TfLiteFloatArray*)&quant29_scale, (TfLiteIntArray*)&quant29_zero, 0 };
const TfArray<4, int> tensor_dimension30 = { 4, { 1,5,1,64 } };
const TfArray<1, float> quant30_scale = { 1, { 0.031311754137277603, } };
const TfArray<1, int> quant30_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant30 = { (TfLiteFloatArray*)&quant30_scale, (TfLiteIntArray*)&quant30_zero, 0 };
const TfArray<4, int> tensor_dimension31 = { 4, { 1,3,1,64 } };
const TfArray<1, float> quant31_scale = { 1, { 0.031311754137277603, } };
const TfArray<1, int> quant31_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant31 = { (TfLiteFloatArray*)&quant31_scale, (TfLiteIntArray*)&quant31_zero, 0 };
const TfArray<4, int> tensor_dimension32 = { 4, { 1,1,3,64 } };
const TfArray<1, float> quant32_scale = { 1, { 0.031311754137277603, } };
const TfArray<1, int> quant32_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant32 = { (TfLiteFloatArray*)&quant32_scale, (TfLiteIntArray*)&quant32_zero, 0 };
const TfArray<4, int> tensor_dimension33 = { 4, { 1,1,3,128 } };
const TfArray<1, float> quant33_scale = { 1, { 0.060420654714107513, } };
const TfArray<1, int> quant33_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant33 = { (TfLiteFloatArray*)&quant33_scale, (TfLiteIntArray*)&quant33_zero, 0 };
const TfArray<4, int> tensor_dimension34 = { 4, { 1,3,1,128 } };
const TfArray<1, float> quant34_scale = { 1, { 0.060420654714107513, } };
const TfArray<1, int> quant34_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant34 = { (TfLiteFloatArray*)&quant34_scale, (TfLiteIntArray*)&quant34_zero, 0 };
const TfArray<4, int> tensor_dimension35 = { 4, { 1,2,1,128 } };
const TfArray<1, float> quant35_scale = { 1, { 0.060420654714107513, } };
const TfArray<1, int> quant35_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant35 = { (TfLiteFloatArray*)&quant35_scale, (TfLiteIntArray*)&quant35_zero, 0 };
const TfArray<2, int> tensor_dimension36 = { 2, { 1,256 } };
const TfArray<1, float> quant36_scale = { 1, { 0.060420654714107513, } };
const TfArray<1, int> quant36_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant36 = { (TfLiteFloatArray*)&quant36_scale, (TfLiteIntArray*)&quant36_zero, 0 };
const TfArray<2, int> tensor_dimension37 = { 2, { 1,3 } };
const TfArray<1, float> quant37_scale = { 1, { 0.38625034689903259, } };
const TfArray<1, int> quant37_zero = { 1, { 3 } };
const TfLiteAffineQuantization quant37 = { (TfLiteFloatArray*)&quant37_scale, (TfLiteIntArray*)&quant37_zero, 0 };
const TfArray<2, int> tensor_dimension38 = { 2, { 1,3 } };
const TfArray<1, float> quant38_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant38_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant38 = { (TfLiteFloatArray*)&quant38_scale, (TfLiteIntArray*)&quant38_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 20 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 20,19,18 } };
const TfArray<1, int> outputs1 = { 1, { 21 } };
const TfLiteReshapeParams opdata2 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs2 = { 2, { 21,2 } };
const TfArray<1, int> outputs2 = { 1, { 22 } };
const TfLitePoolParams opdata3 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs3 = { 1, { 22 } };
const TfArray<1, int> outputs3 = { 1, { 23 } };
const TfLiteReshapeParams opdata4 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs4 = { 2, { 23,3 } };
const TfArray<1, int> outputs4 = { 1, { 24 } };
const TfLiteConvParams opdata5 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs5 = { 3, { 24,17,16 } };
const TfArray<1, int> outputs5 = { 1, { 25 } };
const TfLiteReshapeParams opdata6 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs6 = { 2, { 25,4 } };
const TfArray<1, int> outputs6 = { 1, { 26 } };
const TfLitePoolParams opdata7 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs7 = { 1, { 26 } };
const TfArray<1, int> outputs7 = { 1, { 27 } };
const TfLiteReshapeParams opdata8 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs8 = { 2, { 27,5 } };
const TfArray<1, int> outputs8 = { 1, { 28 } };
const TfLiteConvParams opdata9 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs9 = { 3, { 28,15,14 } };
const TfArray<1, int> outputs9 = { 1, { 29 } };
const TfLiteReshapeParams opdata10 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs10 = { 2, { 29,6 } };
const TfArray<1, int> outputs10 = { 1, { 30 } };
const TfLitePoolParams opdata11 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs11 = { 1, { 30 } };
const TfArray<1, int> outputs11 = { 1, { 31 } };
const TfLiteReshapeParams opdata12 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs12 = { 2, { 31,7 } };
const TfArray<1, int> outputs12 = { 1, { 32 } };
const TfLiteConvParams opdata13 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs13 = { 3, { 32,13,12 } };
const TfArray<1, int> outputs13 = { 1, { 33 } };
const TfLiteReshapeParams opdata14 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs14 = { 2, { 33,8 } };
const TfArray<1, int> outputs14 = { 1, { 34 } };
const TfLitePoolParams opdata15 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs15 = { 1, { 34 } };
const TfArray<1, int> outputs15 = { 1, { 35 } };
const TfLiteReshapeParams opdata16 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs16 = { 2, { 35,9 } };
const TfArray<1, int> outputs16 = { 1, { 36 } };
const TfLiteFullyConnectedParams opdata17 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs17 = { 3, { 36,11,10 } };
const TfArray<1, int> outputs17 = { 1, { 37 } };
const TfLiteSoftmaxParams opdata18 = { 1 };
const TfArray<1, int> inputs18 = { 1, { 37 } };
const TfArray<1, int> outputs18 = { 1, { 38 } };
};

TensorInfo_t tensorData[] = {
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 640), (TfLiteIntArray*)&g0::tensor_dimension0, 640, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant0))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data1, (TfLiteIntArray*)&g0::tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data2, (TfLiteIntArray*)&g0::tensor_dimension2, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data3, (TfLiteIntArray*)&g0::tensor_dimension3, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data4, (TfLiteIntArray*)&g0::tensor_dimension4, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data5, (TfLiteIntArray*)&g0::tensor_dimension5, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data6, (TfLiteIntArray*)&g0::tensor_dimension6, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data7, (TfLiteIntArray*)&g0::tensor_dimension7, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data8, (TfLiteIntArray*)&g0::tensor_dimension8, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data9, (TfLiteIntArray*)&g0::tensor_dimension9, 8, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data10, (TfLiteIntArray*)&g0::tensor_dimension10, 12, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant10))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data11, (TfLiteIntArray*)&g0::tensor_dimension11, 768, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant11))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data12, (TfLiteIntArray*)&g0::tensor_dimension12, 512, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant12))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data13, (TfLiteIntArray*)&g0::tensor_dimension13, 24576, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant13))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data14, (TfLiteIntArray*)&g0::tensor_dimension14, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant14))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data15, (TfLiteIntArray*)&g0::tensor_dimension15, 6144, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant15))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data16, (TfLiteIntArray*)&g0::tensor_dimension16, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant16))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data17, (TfLiteIntArray*)&g0::tensor_dimension17, 1536, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant17))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data18, (TfLiteIntArray*)&g0::tensor_dimension18, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant18))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data19, (TfLiteIntArray*)&g0::tensor_dimension19, 1536, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant19))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension20, 640, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant20))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 1024), (TfLiteIntArray*)&g0::tensor_dimension21, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant21))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension22, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant22))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 320), (TfLiteIntArray*)&g0::tensor_dimension23, 160, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant23))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 640), (TfLiteIntArray*)&g0::tensor_dimension24, 160, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant24))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 320), (TfLiteIntArray*)&g0::tensor_dimension25, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant25))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension26, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant26))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 320), (TfLiteIntArray*)&g0::tensor_dimension27, 160, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant27))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 704), (TfLiteIntArray*)&g0::tensor_dimension28, 160, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant28))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 384), (TfLiteIntArray*)&g0::tensor_dimension29, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant29))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension30, 320, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant30))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 320), (TfLiteIntArray*)&g0::tensor_dimension31, 192, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant31))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 1152), (TfLiteIntArray*)&g0::tensor_dimension32, 192, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant32))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 768), (TfLiteIntArray*)&g0::tensor_dimension33, 384, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant33))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension34, 384, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant34))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 384), (TfLiteIntArray*)&g0::tensor_dimension35, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant35))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension36, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant36))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 256), (TfLiteIntArray*)&g0::tensor_dimension37, 3, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant37))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension38, 3, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant38))}, },
};

#ifndef TF_LITE_STATIC_MEMORY
TfLiteNode tflNodes[19] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs12, (TfLiteIntArray*)&g0::outputs12, (TfLiteIntArray*)&g0::inputs12, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata12)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs13, (TfLiteIntArray*)&g0::outputs13, (TfLiteIntArray*)&g0::inputs13, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata13)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs14, (TfLiteIntArray*)&g0::outputs14, (TfLiteIntArray*)&g0::inputs14, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata14)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs15, (TfLiteIntArray*)&g0::outputs15, (TfLiteIntArray*)&g0::inputs15, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata15)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs16, (TfLiteIntArray*)&g0::outputs16, (TfLiteIntArray*)&g0::inputs16, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata16)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs17, (TfLiteIntArray*)&g0::outputs17, (TfLiteIntArray*)&g0::inputs17, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata17)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs18, (TfLiteIntArray*)&g0::outputs18, (TfLiteIntArray*)&g0::inputs18, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata18)), nullptr, 0, },
};
#else
TfLiteNode tflNodes[19] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs12, (TfLiteIntArray*)&g0::outputs12, (TfLiteIntArray*)&g0::inputs12, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata12)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs13, (TfLiteIntArray*)&g0::outputs13, (TfLiteIntArray*)&g0::inputs13, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata13)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs14, (TfLiteIntArray*)&g0::outputs14, (TfLiteIntArray*)&g0::inputs14, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata14)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs15, (TfLiteIntArray*)&g0::outputs15, (TfLiteIntArray*)&g0::inputs15, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata15)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs16, (TfLiteIntArray*)&g0::outputs16, (TfLiteIntArray*)&g0::inputs16, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata16)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs17, (TfLiteIntArray*)&g0::outputs17, (TfLiteIntArray*)&g0::inputs17, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata17)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs18, (TfLiteIntArray*)&g0::outputs18, (TfLiteIntArray*)&g0::inputs18, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata18)), nullptr, 0, },
};
#endif

used_operators_e used_ops[] =
{OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_SOFTMAX, };


// Indices into tflTensors and tflNodes for subgraphs
const size_t tflTensors_subgraph_index[] = {0, 39, };
const size_t tflNodes_subgraph_index[] = {0, 19, };

// Input/output tensors
static const int in_tensor_indices[] = {
  0, 
};

static const int out_tensor_indices[] = {
  38, 
};


size_t current_subgraph_index = 0;

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = false;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}

typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;

static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
 
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  }

  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }

  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }
 
  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }

  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }

  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }

};


} // namespace

TfLiteStatus tflite_learn_1904_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  
  // Set microcontext as the context ptr
  ctx.impl_ = static_cast<void*>(&micro_context_);
  // Setup tflitecontext functions
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.ReportError = &MicroContextReportOpError;

  ctx.tensors_size = 39;
  for (size_t i = 0; i < 39; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }

  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }

  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].init) {
        tflNodes[i].user_data = registrations[used_ops[i]].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
      }
    }
  }
  current_subgraph_index = 0;

  for(size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].prepare) {
        ResetTensors();
        TfLiteStatus status = registrations[used_ops[i]].prepare(&ctx, &tflNodes[i]);
        if (status != kTfLiteOk) {
          return status;
        }
      }
    }
  }
  current_subgraph_index = 0;

  return kTfLiteOk;
}

TfLiteStatus tflite_learn_1904_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(in_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_1904_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(out_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_1904_invoke() {
  for (size_t i = 0; i < 19; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[used_ops[i]].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_1904_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
